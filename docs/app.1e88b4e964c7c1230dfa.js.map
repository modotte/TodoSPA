{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/fable_modules/fable-library.3.4.0/Util.js","webpack:///./src/fable_modules/fable-library.3.4.0/Types.js","webpack:///./src/fable_modules/fable-library.3.4.0/Reflection.js","webpack:///./src/fable_modules/fable-library.3.4.0/Int32.js","webpack:///./src/fable_modules/fable-library.3.4.0/Numeric.js","webpack:///./src/fable_modules/fable-library.3.4.0/lib/long.js","webpack:///./src/fable_modules/fable-library.3.4.0/Long.js","webpack:///./src/fable_modules/fable-library.3.4.0/Date.js","webpack:///./src/fable_modules/fable-library.3.4.0/RegExp.js","webpack:///./src/fable_modules/fable-library.3.4.0/String.js","webpack:///./src/fable_modules/fable-library.3.4.0/Option.js","webpack:///./src/fable_modules/fable-library.3.4.0/Array.js","webpack:///./src/fable_modules/fable-library.3.4.0/List.js","webpack:///./src/fable_modules/fable-library.3.4.0/AsyncBuilder.js","webpack:///./src/fable_modules/fable-library.3.4.0/Choice.js","webpack:///./src/fable_modules/fable-library.3.4.0/Async.js","webpack:///./src/fable_modules/Fable.Elmish.3.1.0/cmd.fs.js","webpack:///./src/fable_modules/fable-library.3.4.0/FSharp.Collections.js","webpack:///./src/fable_modules/fable-library.3.4.0/System.Text.js","webpack:///./src/fable_modules/fable-library.3.4.0/FSharp.Core.js","webpack:///./src/fable_modules/fable-library.3.4.0/Seq.js","webpack:///./src/fable_modules/Feliz.1.53.0/Interop.fs.js","webpack:///./src/fable_modules/Feliz.1.53.0/React.fs.js","webpack:///./src/fable_modules/Feliz.1.53.0/ReactInterop.js","webpack:///./src/fable_modules/Feliz.UseListener.0.6.3/Listener.fs.js","webpack:///./src/fable_modules/fable-library.3.4.0/Guid.js","webpack:///./src/fable_modules/fable-library.3.4.0/lib/big.js","webpack:///./src/fable_modules/fable-library.3.4.0/Decimal.js","webpack:///./src/fable_modules/Feliz.Router.3.8.0/Router.fs.js","webpack:///./src/fable_modules/Thoth.Json.6.0.0/Types.fs.js","webpack:///./src/fable_modules/fable-library.3.4.0/BigInt/n.js","webpack:///./src/fable_modules/fable-library.3.4.0/BigInt/z.js","webpack:///./src/fable_modules/fable-library.3.4.0/BigInt.js","webpack:///./src/fable_modules/fable-library.3.4.0/DateOffset.js","webpack:///./src/fable_modules/fable-library.3.4.0/TimeSpan.js","webpack:///./src/fable_modules/fable-library.3.4.0/Map.js","webpack:///./src/fable_modules/fable-library.3.4.0/Set.js","webpack:///./src/fable_modules/Thoth.Json.6.0.0/Decode.fs.js","webpack:///./src/fable_modules/Thoth.Json.6.0.0/Encode.fs.js","webpack:///./src/fable_modules/Feliz.Bulma.2.18.0/ElementBuilders.fs.js","webpack:///./src/fable_modules/Fable.Promise.2.0.0/Promise.fs.js","webpack:///./src/fable_modules/Fable.Promise.2.0.0/PromiseImpl.fs.js","webpack:///./src/fable_modules/Feliz.UseElmish.1.5.1/UseElmish.fs.js","webpack:///./src/Main.fs.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","isArrayLike","x","Array","isArray","ArrayBuffer","isView","isHashable","GetHashCode","isDisposable","Dispose","sameConstructor","y","getPrototypeOf","constructor","Enumerator","iter","this","current","cur","next","done","Error","getEnumerator","GetEnumerator","iterator","toIterator","en","hasNext","undefined","Lazy","factory","isValueCreated","createdValue","padWithZeros","str","toString","padLeftAndRightWithZeros","lengthLeft","lengthRight","dateOffset","date","date1","offset","kind","getTimezoneOffset","int32ToString","radix","ObjectRef","idMap","has","set","count","stringHash","h","len","charCodeAt","numberHash","combineHashCodes","hashes","reduce","h1","h2","structuralHash","arrayHash","Date","getTime","dateHash","values","map","v","id","equalArraysWith","eq","equalArrays","equals","Equals","isEquatable","compareDates","xKeys","keys","yKeys","sort","equalObjects","xtime","ytime","comparePrimitives","compareArrays","comp","compareArraysWith","compare","CompareTo","isComparable","compareObjects","max","comparer","createObj","fields","obj","kv","WeakMap","CURRIED","uncurry","arity","f","uncurried","res","_curry","args","arg","concat","curry","mapCurriedArgs","fn","mappings","mapArg","idx","mapping","expectedArity","actualArity","seqToString","self","callStack","cons","entries","join","String","Union","fieldStr","withParens","indexOf","unionToString","tag","other","cases","recordToJSON","recordToString","recordGetHashCode","recordEquals","thisNames","recordCompareTo","Record","FSharpRef","contentsOrGetter","setter","CaseInfo","declaringType","TypeInfo","fullname","generics","construct","parent","enumCases","fullName","getHashCode","getGenerics","fullnameHash","genHashes","t1","t2","getRecordElements","k1","v1","k2","v2","class_type","record_type","union_type","caseNames","list_type","generic","array_type","NumberStyles","obj_type","string_type","bool_type","info","lastIndexOf","substr","gen","endsWith","getElementType","_a","isGenericType","isEnum","getGenericTypeDefinition","getEnumUnderlyingType","getEnumValues","getEnumCase","parseEnum","parseInt","isNaN","getUnionCases","getTupleElements","isTuple","isUnion","isRecord","startsWith","getUnionCaseFields","uci","makeUnion","expectedLength","getRange","unsigned","bitsize","isValid","style","exec","replace","prefix","digits","getInvalidDigits","AllowHexSpecifier","getRadix","test","regexMatch","sign","validResponse","parse","Number","umin","umax","min","tryParse","defValue","contents","op_UnaryNegation_Int32","symbol","isNumeric","multiply","toFixed","dp","toPrecision","sd","toExponential","toHex","wasm","WebAssembly","Instance","Module","Uint8Array","e","Long","low","high","isLong","toJSON","fromBytes","toBytes","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","negate","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","Math","pow","fromString","RangeError","substring","radixToPower","size","add","fromValue","val","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","toInt","$this","toNumber","isZero","isNegative","radixLong","div","divide","rem1","subtract","rem","remDiv","isOdd","lessThan","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","multiplier","mul","get_high","b00","divisor","approx","div_u","div_s","toUnsigned","shiftRightUnsigned","shiftLeft","shiftRight","floor","log2","ceil","log","LN2","delta","approxRes","approxRem","numBits","le","hi","lo","toBytesLE","toBytesBE","bytes","fromBytesLE","fromBytesBE","LongLib","op_Addition","op_Multiply","op_Division","op_Modulus","rem_u","rem_s","op_UnaryNegation","op_BitwiseAnd","fromInteger","xh","offsetRegex","dateOffsetToString","isMinus","minutes","abs","dateToHalfUTCString","half","toISOString","dateToStringWithCustomFormat","format","utc","match","rep","NaN","getUTCFullYear","getFullYear","getUTCMonth","getMonth","getUTCDate","getDate","getUTCHours","getHours","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","getUTCMilliseconds","getMilliseconds","dateToStringWithOffset","_b","_c","dateWithOffset","dateToStringWithKind","toUTCString","toLocaleString","toLocaleDateString","toLocaleTimeString","printOffset","dateToISOString","_provider","DateTime","parseRaw","input","fail","trim","baseDate","timeInSeconds","timeParts","split","parseFloat","toUpperCase","offsetParts","offsetInMinutes","detectUTC","_err","pattern","options","flags","RegExp","escape","matches","reg","lastIndex","global","fsFormatRegExp","formatRegExp","isLessThan","numericCompare","printf","cont","strParts","strIdx","matchIndex","index","createPrinter","_strParts","_matches","_result","padArg","_padLength","precision","padLength","formatReplacement","continuePrint","toText","toFail","toLowerCase","dateToString","zeroFlag","minusFlag","ch","padLeft","_","intPart","decimalPart","isNullOrEmpty","isNullOrWhiteSpace","delimiter","xs","from","isRight","splitters","removeEmpty","arguments","filter","splits","startIndex","Some","some","toArray","opt","defaultArg","defaultValue","binder","Helpers_allocateArrayFromCons","differentLengths","append","array1","array2","len1","len2","newArray","i_1","fill","target","targetIndex","start","source","initialize","initializer","fold","folder","state","array","delegateArg0","delegateArg1","equalsWith","length1","length2","compareWith","e1","e2","foldBack","reduceRight","foldBack2","acc","foldBackIndexed2","_arg1","FSharpList","head","tail","xs_1_mut","ys_1_mut","loop","xs_1","ys_1","matchValue","xt","yt","i_mut","h_mut","_key","ListEnumerator$1","ListEnumerator$1_$ctor_3002E699","it","FSharpList_get_Empty","FSharpList_Cons_305B8EAC","FSharpList__get_IsEmpty","FSharpList__get_Length","FSharpList__get_Head","SR_inputListWasEmpty","FSharpList__get_Tail","empty","singleton","isEmpty","reverse","iterate","action","unitVar0","ofArrayWithTail","tail_1","ofArray","ofSeq","xs_3","root","node","enumerator","xs_5","t_2","ys","CancellationToken","cancelled","_id","_cancelled","_listeners","Map","listener","$","addListener","removeListener","OperationCanceledError","setPrototypeOf","protectedCont","ctx","cancelToken","isCancelled","onCancel","trampoline","incrementAndCheck","hijack","err","onError","protectedBind","computation","onSuccess","ex","protectedReturn","computation1","computation2","Bind","generator","sequence","body","While","Delay","compensation","catchHandler","ex2","resource","TryFinally","guard","Return","FSharpResult$2","Result_Map","isCancellationRequested","token","Cmd_none","Cmd_batch","cmds","lists","forEach","xs_6","Cmd_OfFunc_attempt","task","ofError","dispatch","ComparisonIdentity_Structural","Compare","x_1","LanguagePrimitives_FastGenericComparer","Enumerator_notStarted","Enumerator_alreadyFinished","Enumerator_Seq","Enumerator_FromFunctions$1","dispose","Enumerator_noReset","Enumerator_FromFunctions$1_$ctor_58C54629","Enumerator_generateWhileSome","openf","compute","closef","started","curr","value_1","finish","matchValue_1","checkNonNull","argName","Operators_NullArg","mkSeq","Enumerator_Seq_$ctor_673A07F2","delay","sources","outerOpt","innerOpt","finished","inner","outer","inner_1","outer_1","ie","Enumerator_concat","ar","toList","ofArray_1","ofSeq_1","generate","generateIndexed","contains","found","e_1","mapIndexed","Interop_reactApi","react","ReactInterop_useEffect","getDisposable","useEffectReact","disposable","ReactInterop_useEffectWithDeps","deps","ReactInterop_useLayoutEffect","useLayoutEffectReact","Internal_memo_Z603636D8","renderElement","areEqual","withKey","memoElementType","memo","name_1","displayName","props","createElement","Internal_propsWithKey","React_createDisposable_3A5B6456","useReact_useEffect_Z5ECA432F","effect","useReact_useEffect_Z5234A374","dependencies","useReact_useEffect_Z101E1A95","_arg4","useReact_useRef_1505","initialValue","useRef","useReact_useMemo_CF4EA67","createFunction","useMemo","useReact_useCallbackRef_7C4B0DD6","callback","callbackFunction","lastRenderCallbackRef","callbackRef","useCallback","useState","Impl_allowsPassiveEvents","addEventListener","passive","removeEventListener","Impl_adjustPassive","maybeOptions","capture","once","Impl_createRemoveOptions","guidRegex","guidRegexNoHyphen","guidRegexHex","hyphenateGuid","wsTrimAndLowered","chars","newGuid","b","a","random","P","_this","cmp","NAME","INVALID","INVALID_DP","NUMERIC","nl","charAt","search","round","Big","DP","RM","rm","more","xc","findIndex","xci","unshift","pop","stringify","doExponential","isNonzero","isneg","yc","k","bl","bt","ri","bz","ai","al","rl","q","qc","qi","gt","gte","lt","lte","minus","sub","xlty","plus","xe","ye","mod","ygtx","times","one","prec","sqrt","NE","PE","strict","valueOf","_Big_","normalize","TypeError","Decimal","RouterModule_String_$007CPrefix$007C","RouterModule_String_$007CSuffix$007C","suffix","RouterModule_urlSegments","path","zs","collect","segment","segment_1","trimEnd","decodeURIComponent","value_2","query","RouterModule_router","onChange","ev","urlChanged","onUrlChanged","routeMode","location","pathname","hash","RouterModule_onUrlChange","hashMode","navigator","userAgent","action_1","arg00","addOptions","removeOptions","action_3","addOptions_1","removeOptions_1","fn_1","arg_1","eventType_2","action_4","addOptions_2","removeOptions_2","fn_2","arg_2","application","ErrorReason","CaseStrategy","Util_Cache$1","Util_Cache$1_$ctor","Util_Casing_lowerFirst","Util_Casing_convert","caseStrategy","fieldName","replacement","limit","replacer","withGroups","pLast","groups","tmp","_s","sub1","sub2","BigNat","bound","BigNatModule_FFT_pow32","x_mut","n_mut","BigNatModule_FFT_maxTwoPower","Int32Array","BigNatModule_bound","BigNatModule_coeff","BigNatModule_coeff64","BigNatModule_setCoeff","BigNatModule_pow64","BigNatModule_pow32","BigNatModule_baseNi64","BigNatModule_baseMaski64","BigNatModule_createN","BigNatModule_normN","na_mut","na","findLeastBound","BigNatModule_embed","r_1","BigNatModule_boundInt","BigNatModule_eval32","BigNatModule_one","BigNatModule_zero","BigNatModule_degree","BigNatModule_isZero","BigNatModule_equal","pa_mut","qa_mut","pa","qa","check","BigNatModule_compare","BigNatModule_lt","BigNatModule_mulSchoolBookCarry","r_mut","c_mut","k_mut","rak","BigNatModule_mulSchoolBookOneSmall","bp","q_1","BigNatModule_mulSchoolBook","pSmall","qSmall","BigNatModule_mulSchoolBookBothSmall","ra","pai","qaj","BigNatModule_mulSchoolBookNeitherSmall","BigNatModule_encoding","bigL","twoToBigL","bigK","bigN","BigNatModule_mkEncoding","BigNatModule_table","BigNatModule_mul","BigNatModule_scaleSubInPlace","patternInput","patternInput_1","ad","a_1","f_1","z","zLo","zHi","BigNatModule_scaleAddInPlace","BigNatModule_removeFactor","degx","dega","pn","qn","xa","aa","qai","BigNatModule_divmod","BigNatModule_copyN","BigNatModule_ofInt32","BigNatModule_ofInt64","BigNatModule_boundInt64","BigNatModule_embed64","BigNatModule_toString","degn","digits_4","isLeading_mut","digits_mut","n_1_mut","_arg1_mut","isLeading","n_1","n_2","prior_1","nL","nH","prior_mut","ten2k_mut","prior","ten2k","route","BigNatModule_isSmall","BigNatModule_getSmall","BigInteger","signInt","BigInteger__get_SignInt","BigInteger__get_V","BigInteger_op_Equality_56F059C0","BigNatModule_hash","nn","BigInteger_op_LessThan_56F059C0","BigInteger_$ctor_Z2BE94A1","BigInteger_nat_Z67CCE57D","smallLim","smallPosTab","BigInteger_$ctor_Z524259A4","BigInteger_get_One","BigInteger_get_Two","two","BigInteger_get_Zero","zero","DateTimeOffset","checkOffsetInRange","offsetMatch","signedRound","ms","fromTicks","ticks","Long_toNumber","Long_op_Division","days","ts","hours","seconds","milliseconds","firstDot","firstColon","MapTreeLeaf$2","MapTreeLeaf$2_$ctor_5BDDA1","MapTreeLeaf$2__get_Key","MapTreeLeaf$2__get_Value","MapTreeNode$2","left","right","MapTreeNode$2_$ctor_499A11FD","MapTreeNode$2__get_Left","MapTreeNode$2__get_Right","MapTreeNode$2__get_Height","MapTreeModule_size","MapTreeModule_sizeAux","acc_mut","m_mut","m2","MapTreeModule_mk","hl","hr","m_2","MapTreeModule_rebalance","m2_2","m_3","m2_3","t1h","t2h","matchValue_2","matchValue_3","MapTreeModule_add","MapTreeModule_empty","MapTreeModule_tryFind","comparer_mut","MapTreeModule_iter","MapTreeModule_iterOpt","f_mut","MapTreeModule_mapi","MapTreeModule_mapiOpt","l2","r2","MapTreeModule_copyToArray","arr","MapTreeModule_ofArray","forLoopVar","MapTreeModule_ofSeq","fold_1","tupledArg","MapTreeModule_ofList","e_mut","MapTreeModule_mkFromEnumerator","MapTreeModule_MapIterator$2","stack","MapTreeModule_collapseLHS","stack_mut","isEmpty_1","empty_1","rest","MapTreeModule_mkIterator","MapTreeModule_current","MapTreeModule_alreadyFinished","MapTreeModule_notStarted","MapTreeModule_mkIEnumerator","MapTreeModule_moveNext","FSharpMap","tree","this$","combineHash","activePatternResult5440","FSharpMap__ComputeHashCode","that","m1","e1c","e2c","map_1","b1","b2","kvp1","kvp2","FSharpMap__ContainsKey","FSharpMap__get_Item","FSharpMap__get_Count","thisArg","iterate_1","FSharpMap_$ctor","FSharpMap_Create","MapTreeModule_find","MapTreeModule_mem","table","FSharpMap__Add","tryFind","FSharpMap__TryFind","SetTreeLeaf$1","SetTreeLeaf$1_$ctor_2B595","SetTreeLeaf$1__get_Key","SetTreeNode$1","SetTreeNode$1_$ctor_Z6E7BE5F7","SetTreeNode$1__get_Left","SetTreeNode$1__get_Right","SetTreeNode$1__get_Height","SetTreeModule_count","SetTreeModule_countAux","t_mut","SetTreeModule_mk","SetTreeModule_rebalance","t2_3","t_3","t2_4","SetTreeModule_add","c_1","SetTreeModule_empty","SetTreeModule_mem","SetTreeModule_iter","SetTreeModule_SetIterator$1","SetTreeModule_collapseLHS","x2","SetTreeModule_mkIterator","singleton_1","SetTreeModule_current","SetTreeModule_alreadyFinished","SetTreeModule_notStarted","SetTreeModule_mkIEnumerator","SetTreeModule_moveNext","SetTreeModule_compare","l1_mut","l2_mut","SetTreeModule_compareStacks","l1","x1_3","x2_3","pattern_matching_result","t1_6","x1_4","t2_6","x2_4","matchValue_4","pattern_matching_result_1","t1_7","x1_5","t2_7","x2_5","c_3","c_2","matchValue_5","pattern_matching_result_2","t1_8","x1_6","t2_8","x2_6","pattern_matching_result_3","t1_2","x1","t2_2","x2_1","pattern_matching_result_4","t1_4","x1_2","x2_2","SetTreeModule_copyToArray","SetTreeModule_ofArray","SetTreeModule_ofSeq","fold_2","SetTreeModule_ofList","SetTreeModule_mkFromEnumerator","FSharpSet","FSharpSet__ComputeHashCode","FSharpSet__get_Comparer","FSharpSet__get_Tree","FSharpSet__get_Count","FSharpSet__Contains","FSharpSet_$ctor","set$","elements","genericMsg","msg","newLine","JSON","errorToString","error","reason_1","decoder","SyntaxError","message","sbyte","path_1","value_3","value_4","isFinite","outArg","tryParse_3","byte","int16","uint16","int","uint32","datetime","tryParse_6","datetimeOffset","tryParse_7","requestedIndex","copyOfStruct","currentPath","vArray","list","list_1","tokens","acc_1","succeed","output","_arg2","andThen","cb","ctor","d1","tuple2","decoder1","decoder2","decoder_3","path_3","decoder_2","decoder_1","path_2","arg10$0040","arg20$0040","toMap","mixedArray","decoders","arg30","arg10","extra","predicate","name_3","find","uci_1","makeUnion_1","values_1","map_2","fi","autoDecoder","autoDecodeRecordsAndUnions","isOptional","decoderRef","extra_1","makeRecord","decoderInfos","autoObject","decoder_15","tryFind_1","enumType","value_5","enumValue","path_4","value_7","path_5","value_8","enumValue_1","y_1","path_6","value_10","t_4","path_7","value_11","enumValue_2","x_2","y_2","path_8","value_13","t_5","path_9","value_14","enumValue_3","x_3","y_3","path_10","value_16","t_6","path_11","value_17","enumValue_4","x_4","y_4","path_12","value_19","t_7","path_13","value_20","matchValue_6","enumValue_5","x_5","y_5","clo2","arg20","clo3","t_8","path_14","value_21","fullname_1","decoder_13","path_15","value_22","arg0","option","decoder_14","path_16","value_23","keyDecoder","valueDecoder","decoders_1","path_17","value_24","autoObject2","path_18","value_25","path_19","value_26","decoders_1_mut","errors_mut","errors","head_1","append_1","runner","oneOf","path_20","value_28","decoder_16","path_21","value_29","matchValue_7","ofSeq_2","path_22","value_31","path_23","value_32","path_24","value_33","path_25","value_34","path_26","value_35","path_27","value_36","path_28","value_37","path_29","value_38","tryParse_8","timespan","path_30","value_39","tryParse_2","guid","_arg1_6","makeExtra","map_3","Coders","seq","toString_4","unit","space","encoder","defThunk","autoEncodeRecordsAndUnions","skipNullField","encoderRef","setters","targetKey","encode_1","autoEncoder","field","getRecordField","source_1","target_1","case_","getUnionFields","fieldTypes","target_2","encode_2","encoders","value_9","encoder_2","Value","encoder_3","keyType","valueEncoder","value_12","activePatternResult14348","keyEncoder","clo4","arg40","activePatternResult14352","value_18","value_30","toString_3","Helpers_combineClasses","cn","classes","Helpers_extractClasses","PromiseBuilder","PromiseBuilder__Delay_62FBFDE1","then","f1","f2","er","Promise","reject","resolve","er_1","catch","er_2","er_3","promise","RingState$1","RingBuffer$1","RingBuffer$1__Pop","wix","rix","items","rix$0027","useFeliz_React__React_useElmish_Static_17DC4F1D","init","update","initial","token_1","ring","cts","setTimeout","cancel","createCancellationToken","setChildState_1","dispatch_1","nextMsg","PromiseBuilder__While_2044D34","success","sub_1","_arg3","useReact_useEffect_3A5B6456","TodoId","TodoId$reflection","TodoEntry","Id","Description","IsCompleted","TodoEntry$reflection","Model","Entries","NewEntryDescription","CurrentUrls","Model$reflection","Message","Message$reflection","withEntryChanged","description","model","withAddedEntry","newEntry","withMarkedEntry","isCompleted","entry","withRemovedEntry","withUrlChanged","segments","console","toConsole","caseStrategy_1","Storage_decoder","Storage_load","localStorage","getItem","Storage_save","setItem","skipNullField_1","Auto_generateBoxedEncoder_Z20B7B430","Storage_updateStorage","newModel","model_2","toString_1","makeDeleteButton","marginRight","makeEntryButtons","children","checkboxId","children_2","checked","htmlFor","Children","makeEntryInputArea","props_4","makeTodosStateTabs","makeTab","isActive","link","props_1","href","props_7","children_4","textAlign","rootContainer","headerComponent","showEntries","elms","className","AllView","ActiveView","ArchivedView","Router","model_1","render","document","getElementById"],"mappings":"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","file":"app.1e88b4e964c7c1230dfa.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([3,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// tslint:disable:ban-types\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function isArrayLike(x) {\n    return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nfunction isComparer(x) {\n    return typeof x.Compare === \"function\";\n}\nfunction isComparable(x) {\n    return typeof x.CompareTo === \"function\";\n}\nfunction isEquatable(x) {\n    return typeof x.Equals === \"function\";\n}\nfunction isHashable(x) {\n    return typeof x.GetHashCode === \"function\";\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport function sameConstructor(x, y) {\n    return Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return typeof o.GetEnumerator === \"function\"\n        ? o.GetEnumerator()\n        : new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        [Symbol.iterator]() { return this; },\n        next() {\n            const hasNext = en[\"System.Collections.IEnumerator.MoveNext\"]();\n            const current = hasNext ? en[\"System.Collections.IEnumerator.get_Current\"]() : undefined;\n            return { done: !hasNext, value: current };\n        },\n    };\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (isComparer(comparer)) {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport class ObjectRef {\n    static id(o) {\n        if (!ObjectRef.idMap.has(o)) {\n            ObjectRef.idMap.set(o, ++ObjectRef.count);\n        }\n        return ObjectRef.idMap.get(o);\n    }\n}\nObjectRef.idMap = new WeakMap();\nObjectRef.count = 0;\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function physicalHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    else if (isHashable(x)) {\n        return x.GetHashCode();\n    }\n    else {\n        return physicalHash(x);\n    }\n}\nexport function dateHash(x) {\n    return x.getTime();\n}\nexport function arrayHash(x) {\n    const len = x.length;\n    const hashes = new Array(len);\n    for (let i = 0; i < len; i++) {\n        hashes[i] = structuralHash(x[i]);\n    }\n    return combineHashCodes(hashes);\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (isHashable(x)) {\n                return x.GetHashCode();\n            }\n            else if (isArrayLike(x)) {\n                return arrayHash(x);\n            }\n            else if (x instanceof Date) {\n                return dateHash(x);\n            }\n            else if (Object.getPrototypeOf(x).constructor === Object) {\n                // TODO: check call-stack to prevent cyclic objects?\n                const hashes = Object.values(x).map((v) => structuralHash(v));\n                return combineHashCodes(hashes);\n            }\n            else {\n                // Classes don't implement GetHashCode by default, but must use identity hashing\n                return numberHash(ObjectRef.id(x));\n                // return stringHash(String(x));\n            }\n        }\n    }\n}\n// Intended for custom numeric types, like long or decimal\nexport function fastStructuralHash(x) {\n    return stringHash(String(x));\n}\n// Intended for declared types that may or may not implement GetHashCode\nexport function safeHash(x) {\n    return x == null ? 0 : isHashable(x) ? x.GetHashCode() : numberHash(ObjectRef.id(x));\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\nfunction equalObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return false;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0; i < xKeys.length; i++) {\n        if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (isEquatable(x)) {\n        return x.Equals(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object && equalObjects(x, y);\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nfunction compareObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (isComparable(x)) {\n        return x.CompareTo(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) ? compareArrays(x, y) : -1;\n    }\n    else if (x instanceof Date) {\n        return y instanceof Date ? compareDates(x, y) : -1;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object ? compareObjects(x, y) : -1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function clamp(comparer, value, min, max) {\n    return (comparer(value, min) < 0) ? min : (comparer(value, max) > 0) ? max : value;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value, isSetter) => {\n        if (!isSetter) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nexport function createObj(fields) {\n    const obj = {};\n    for (const kv of fields) {\n        obj[kv[0]] = kv[1];\n    }\n    return obj;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function randomNext(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nexport function randomBytes(buffer) {\n    if (buffer == null) {\n        throw new Error(\"Buffer cannot be null\");\n    }\n    for (let i = 0; i < buffer.length; i += 6) {\n        // Pick random 48-bit number. Fill buffer in 2 24-bit chunks to avoid bitwise truncation.\n        let r = Math.floor(Math.random() * 281474976710656); // Low 24 bits = chunk 1.\n        const rhi = Math.floor(r / 16777216); // High 24 bits shifted via division = chunk 2.\n        for (let j = 0; j < 6 && i + j < buffer.length; j++) {\n            if (j === 3) {\n                r = rhi;\n            }\n            buffer[i + j] = r & 255;\n            r >>>= 8;\n        }\n    }\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    if (isArrayLike(col)) {\n        return col.length;\n    }\n    else {\n        let count = 0;\n        for (const _ of col) {\n            count++;\n        }\n        return count;\n    }\n}\nexport function clear(col) {\n    if (isArrayLike(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nconst CURRIED = Symbol(\"curried\");\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null || f.length > 1) {\n        return f;\n    }\n    const uncurried = (...args) => {\n        let res = f;\n        for (let i = 0; i < arity; i++) {\n            res = res(args[i]);\n        }\n        return res;\n    };\n    uncurried[CURRIED] = f;\n    return uncurried;\n}\nfunction _curry(args, arity, f) {\n    return (arg) => arity === 1\n        ? f(...args.concat([arg]))\n        // Note it's important to generate a new args array every time\n        // because a partially applied function can be run multiple times\n        : _curry(args.concat([arg]), arity - 1, f);\n}\nexport function curry(arity, f) {\n    if (f == null || f.length === 1) {\n        return f;\n    }\n    else if (CURRIED in f) {\n        return f[CURRIED];\n    }\n    else {\n        return _curry([], arity, f);\n    }\n}\nexport function checkArity(arity, f) {\n    return f.length > arity\n        ? (...args1) => (...args2) => f.apply(undefined, args1.concat(args2))\n        : f;\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return undefined;\n    }\n    else if (CURRIED in f) {\n        f = f[CURRIED];\n        for (let i = 0; i < args.length; i++) {\n            f = f(args[i]);\n        }\n        return f;\n    }\n    else {\n        return _curry(args, arity, f);\n    }\n}\nexport function mapCurriedArgs(fn, mappings) {\n    function mapArg(fn, arg, mappings, idx) {\n        const mapping = mappings[idx];\n        if (mapping !== 0) {\n            const expectedArity = mapping[0];\n            const actualArity = mapping[1];\n            if (expectedArity > 1) {\n                arg = curry(expectedArity, arg);\n            }\n            if (actualArity > 1) {\n                arg = uncurry(actualArity, arg);\n            }\n        }\n        const res = fn(arg);\n        if (idx + 1 === mappings.length) {\n            return res;\n        }\n        else {\n            return (arg) => mapArg(res, arg, mappings, idx + 1);\n        }\n    }\n    return (arg) => mapArg(fn, arg, mappings, 0);\n}\n","import { combineHashCodes, compare, compareArrays, equalArrays, equals, sameConstructor, numberHash, structuralHash } from \"./Util.js\";\nexport function seqToString(self) {\n    let count = 0;\n    let str = \"[\";\n    for (const x of self) {\n        if (count === 0) {\n            str += toString(x);\n        }\n        else if (count === 100) {\n            str += \"; ...\";\n            break;\n        }\n        else {\n            str += \"; \" + toString(x);\n        }\n        count++;\n    }\n    return str + \"]\";\n}\nexport function toString(x, callStack = 0) {\n    if (x != null && typeof x === \"object\") {\n        if (typeof x.toString === \"function\") {\n            return x.toString();\n        }\n        else if (Symbol.iterator in x) {\n            return seqToString(x);\n        }\n        else { // TODO: Date?\n            const cons = Object.getPrototypeOf(x).constructor;\n            return cons === Object && callStack < 10\n                // Same format as recordToString\n                ? \"{ \" + Object.entries(x).map(([k, v]) => k + \" = \" + toString(v, callStack + 1)).join(\"\\n  \") + \" }\"\n                : cons.name;\n        }\n    }\n    return String(x);\n}\nexport function unionToString(name, fields) {\n    if (fields.length === 0) {\n        return name;\n    }\n    else {\n        let fieldStr = \"\";\n        let withParens = true;\n        if (fields.length === 1) {\n            fieldStr = toString(fields[0]);\n            withParens = fieldStr.indexOf(\" \") >= 0;\n        }\n        else {\n            fieldStr = fields.map((x) => toString(x)).join(\", \");\n        }\n        return name + (withParens ? \" (\" : \" \") + fieldStr + (withParens ? \")\" : \"\");\n    }\n}\nexport class Union {\n    get name() {\n        return this.cases()[this.tag];\n    }\n    toJSON() {\n        return this.fields.length === 0 ? this.name : [this.name].concat(this.fields);\n    }\n    toString() {\n        return unionToString(this.name, this.fields);\n    }\n    GetHashCode() {\n        const hashes = this.fields.map((x) => structuralHash(x));\n        hashes.splice(0, 0, numberHash(this.tag));\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        if (this === other) {\n            return true;\n        }\n        else if (!sameConstructor(this, other)) {\n            return false;\n        }\n        else if (this.tag === other.tag) {\n            return equalArrays(this.fields, other.fields);\n        }\n        else {\n            return false;\n        }\n    }\n    CompareTo(other) {\n        if (this === other) {\n            return 0;\n        }\n        else if (!sameConstructor(this, other)) {\n            return -1;\n        }\n        else if (this.tag === other.tag) {\n            return compareArrays(this.fields, other.fields);\n        }\n        else {\n            return this.tag < other.tag ? -1 : 1;\n        }\n    }\n}\nfunction recordToJSON(self) {\n    const o = {};\n    const keys = Object.keys(self);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = self[keys[i]];\n    }\n    return o;\n}\nfunction recordToString(self) {\n    return \"{ \" + Object.entries(self).map(([k, v]) => k + \" = \" + toString(v)).join(\"\\n  \") + \" }\";\n}\nfunction recordGetHashCode(self) {\n    const hashes = Object.values(self).map((v) => structuralHash(v));\n    return combineHashCodes(hashes);\n}\nfunction recordEquals(self, other) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameConstructor(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompareTo(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameConstructor(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport class Record {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class FSharpRef {\n    constructor(contentsOrGetter, setter) {\n        if (typeof setter === \"function\") {\n            this.getter = contentsOrGetter;\n            this.setter = setter;\n        }\n        else {\n            this.getter = () => contentsOrGetter;\n            this.setter = (v) => { contentsOrGetter = v; };\n        }\n    }\n    get contents() {\n        return this.getter();\n    }\n    set contents(v) {\n        this.setter(v);\n    }\n}\n// EXCEPTIONS\n// Exception is intentionally not derived from Error, for performance reasons (see #2160)\nexport class Exception {\n    constructor(message) {\n        this.message = message;\n    }\n}\nexport function isException(x) {\n    return x instanceof Exception || x instanceof Error;\n}\nexport class FSharpException extends Exception {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class MatchFailureException extends FSharpException {\n    constructor(arg1, arg2, arg3) {\n        super();\n        this.arg1 = arg1;\n        this.arg2 = arg2 | 0;\n        this.arg3 = arg3 | 0;\n        this.message = \"The match cases were incomplete\";\n    }\n}\nexport class Attribute {\n}\n","import { Record, Union } from \"./Types.js\";\nimport { combineHashCodes, equalArraysWith, stringHash } from \"./Util.js\";\nexport class CaseInfo {\n    constructor(declaringType, tag, name, fields) {\n        this.declaringType = declaringType;\n        this.tag = tag;\n        this.name = name;\n        this.fields = fields;\n    }\n}\nexport class MethodInfo {\n    constructor(name, parameters, returnType) {\n        this.name = name;\n        this.parameters = parameters;\n        this.returnType = returnType;\n    }\n}\nexport class TypeInfo {\n    constructor(fullname, generics, construct, parent, fields, cases, enumCases) {\n        this.fullname = fullname;\n        this.generics = generics;\n        this.construct = construct;\n        this.parent = parent;\n        this.fields = fields;\n        this.cases = cases;\n        this.enumCases = enumCases;\n    }\n    toString() {\n        return fullName(this);\n    }\n    GetHashCode() {\n        return getHashCode(this);\n    }\n    Equals(other) {\n        return equals(this, other);\n    }\n}\nexport function getGenerics(t) {\n    return t.generics != null ? t.generics : [];\n}\nexport function getHashCode(t) {\n    const fullnameHash = stringHash(t.fullname);\n    const genHashes = getGenerics(t).map(getHashCode);\n    return combineHashCodes([fullnameHash, ...genHashes]);\n}\nexport function equals(t1, t2) {\n    if (t1.fullname === \"\") { // Anonymous records\n        return t2.fullname === \"\"\n            && equalArraysWith(getRecordElements(t1), getRecordElements(t2), ([k1, v1], [k2, v2]) => k1 === k2 && equals(v1, v2));\n    }\n    else {\n        return t1.fullname === t2.fullname\n            && equalArraysWith(getGenerics(t1), getGenerics(t2), equals);\n    }\n}\nexport function class_type(fullname, generics, construct, parent) {\n    return new TypeInfo(fullname, generics, construct, parent);\n}\nexport function record_type(fullname, generics, construct, fields) {\n    return new TypeInfo(fullname, generics, construct, undefined, fields);\n}\nexport function anonRecord_type(...fields) {\n    return new TypeInfo(\"\", undefined, undefined, undefined, () => fields);\n}\nexport function union_type(fullname, generics, construct, cases) {\n    const t = new TypeInfo(fullname, generics, construct, undefined, undefined, () => {\n        const caseNames = construct.prototype.cases();\n        return cases().map((fields, i) => new CaseInfo(t, i, caseNames[i], fields));\n    });\n    return t;\n}\nexport function tuple_type(...generics) {\n    return new TypeInfo(\"System.Tuple`\" + generics.length, generics);\n}\nexport function delegate_type(...generics) {\n    return new TypeInfo(\"System.Func`\" + generics.length, generics);\n}\nexport function lambda_type(argType, returnType) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", [argType, returnType]);\n}\nexport function option_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", [generic]);\n}\nexport function list_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", [generic]);\n}\nexport function array_type(generic) {\n    return new TypeInfo(generic.fullname + \"[]\", [generic]);\n}\nexport function enum_type(fullname, underlyingType, enumCases) {\n    return new TypeInfo(fullname, [underlyingType], undefined, undefined, undefined, undefined, enumCases);\n}\nexport function measure_type(fullname) {\n    return new TypeInfo(fullname);\n}\nexport const obj_type = new TypeInfo(\"System.Object\");\nexport const unit_type = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\nexport const char_type = new TypeInfo(\"System.Char\");\nexport const string_type = new TypeInfo(\"System.String\");\nexport const bool_type = new TypeInfo(\"System.Boolean\");\nexport const int8_type = new TypeInfo(\"System.SByte\");\nexport const uint8_type = new TypeInfo(\"System.Byte\");\nexport const int16_type = new TypeInfo(\"System.Int16\");\nexport const uint16_type = new TypeInfo(\"System.UInt16\");\nexport const int32_type = new TypeInfo(\"System.Int32\");\nexport const uint32_type = new TypeInfo(\"System.UInt32\");\nexport const float32_type = new TypeInfo(\"System.Single\");\nexport const float64_type = new TypeInfo(\"System.Double\");\nexport const decimal_type = new TypeInfo(\"System.Decimal\");\nexport function name(info) {\n    if (Array.isArray(info)) {\n        return info[0];\n    }\n    else if (info instanceof TypeInfo) {\n        const i = info.fullname.lastIndexOf(\".\");\n        return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n    }\n    else {\n        return info.name;\n    }\n}\nexport function fullName(t) {\n    const gen = t.generics != null && !isArray(t) ? t.generics : [];\n    if (gen.length > 0) {\n        return t.fullname + \"[\" + gen.map((x) => fullName(x)).join(\",\") + \"]\";\n    }\n    else {\n        return t.fullname;\n    }\n}\nexport function namespace(t) {\n    const i = t.fullname.lastIndexOf(\".\");\n    return i === -1 ? \"\" : t.fullname.substr(0, i);\n}\nexport function isArray(t) {\n    return t.fullname.endsWith(\"[]\");\n}\nexport function getElementType(t) {\n    var _a;\n    return isArray(t) ? (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0] : undefined;\n}\nexport function isGenericType(t) {\n    return t.generics != null && t.generics.length > 0;\n}\nexport function isEnum(t) {\n    return t.enumCases != null && t.enumCases.length > 0;\n}\nexport function isSubclassOf(t1, t2) {\n    return t1.parent != null && (t1.parent.Equals(t2) || isSubclassOf(t1.parent, t2));\n}\nexport function isInstanceOfType(t, o) {\n    switch (typeof o) {\n        case \"boolean\":\n            return t.fullname === bool_type.fullname;\n        case \"string\":\n            return t.fullname === string_type.fullname;\n        case \"function\":\n            return isFunction(t);\n        case \"number\":\n            return isEnum(t) || [\n                int8_type.fullname,\n                uint8_type.fullname,\n                int16_type.fullname,\n                uint16_type.fullname,\n                int32_type.fullname,\n                uint32_type.fullname,\n                float32_type.fullname,\n                float64_type.fullname,\n            ].includes(t.fullname);\n        default:\n            return t.construct != null && o instanceof t.construct;\n    }\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\nexport function getGenericTypeDefinition(t) {\n    return t.generics == null ? t : new TypeInfo(t.fullname, t.generics.map(() => obj_type));\n}\nexport function getEnumUnderlyingType(t) {\n    var _a;\n    return (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0];\n}\nexport function getEnumValues(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[1]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function getEnumNames(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[0]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nfunction getEnumCase(t, v) {\n    if (t.enumCases != null) {\n        if (typeof v === \"string\") {\n            for (const kv of t.enumCases) {\n                if (kv[0] === v) {\n                    return kv;\n                }\n            }\n            throw new Error(`'${v}' was not found in ${t.fullname}`);\n        }\n        else {\n            for (const kv of t.enumCases) {\n                if (kv[1] === v) {\n                    return kv;\n                }\n            }\n            // .NET returns the number even if it doesn't match any of the cases\n            return [\"\", v];\n        }\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function parseEnum(t, str) {\n    // TODO: better int parsing here, parseInt ceils floats: \"4.8\" -> 4\n    const value = parseInt(str, 10);\n    return getEnumCase(t, isNaN(value) ? str : value)[1];\n}\nexport function tryParseEnum(t, str, defValue) {\n    try {\n        defValue.contents = parseEnum(t, str);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function getEnumName(t, v) {\n    return getEnumCase(t, v)[0];\n}\nexport function isEnumDefined(t, v) {\n    try {\n        const kv = getEnumCase(t, v);\n        return kv[0] != null && kv[0] !== \"\";\n    }\n    catch (_a) {\n        // supress error\n    }\n    return false;\n}\n// FSharpType\nexport function getUnionCases(t) {\n    if (t.cases != null) {\n        return t.cases();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# union type`);\n    }\n}\nexport function getRecordElements(t) {\n    if (t.fields != null) {\n        return t.fields();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# record type`);\n    }\n}\nexport function getTupleElements(t) {\n    if (isTuple(t) && t.generics != null) {\n        return t.generics;\n    }\n    else {\n        throw new Error(`${t.fullname} is not a tuple type`);\n    }\n}\nexport function getFunctionElements(t) {\n    if (isFunction(t) && t.generics != null) {\n        const gen = t.generics;\n        return [gen[0], gen[1]];\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# function type`);\n    }\n}\nexport function isUnion(t) {\n    return t instanceof TypeInfo ? t.cases != null : t instanceof Union;\n}\nexport function isRecord(t) {\n    return t instanceof TypeInfo ? t.fields != null : t instanceof Record;\n}\nexport function isTuple(t) {\n    return t.fullname.startsWith(\"System.Tuple\") && !isArray(t);\n}\n// In .NET this is false for delegates\nexport function isFunction(t) {\n    return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n}\n// FSharpValue\nexport function getUnionFields(v, t) {\n    const cases = getUnionCases(t);\n    const case_ = cases[v.tag];\n    if (case_ == null) {\n        throw new Error(`Cannot find case ${v.name} in union type`);\n    }\n    return [case_, v.fields];\n}\nexport function getUnionCaseFields(uci) {\n    return uci.fields == null ? [] : uci.fields;\n}\n// This is used as replacement of `FSharpValue.GetRecordFields`\n// For `FSharpTypes.GetRecordFields` see `getRecordElements`\n// Object.keys returns keys in the order they were added to the object\nexport function getRecordFields(v) {\n    return Object.keys(v).map((k) => v[k]);\n}\nexport function getRecordField(v, field) {\n    return v[field[0]];\n}\nexport function getTupleFields(v) {\n    return v;\n}\nexport function getTupleField(v, i) {\n    return v[i];\n}\nexport function makeUnion(uci, values) {\n    const expectedLength = (uci.fields || []).length;\n    if (values.length !== expectedLength) {\n        throw new Error(`Expected an array of length ${expectedLength} but got ${values.length}`);\n    }\n    return uci.declaringType.construct != null\n        ? new uci.declaringType.construct(uci.tag, ...values)\n        : {};\n}\nexport function makeRecord(t, values) {\n    const fields = getRecordElements(t);\n    if (fields.length !== values.length) {\n        throw new Error(`Expected an array of length ${fields.length} but got ${values.length}`);\n    }\n    return t.construct != null\n        ? new t.construct(...values)\n        : fields.reduce((obj, [key, _t], i) => {\n            obj[key] = values[i];\n            return obj;\n        }, {});\n}\nexport function makeTuple(values, _t) {\n    return values;\n}\nexport function makeGenericType(t, generics) {\n    return new TypeInfo(t.fullname, generics, t.construct, t.parent, t.fields, t.cases);\n}\nexport function createInstance(t, consArgs) {\n    // TODO: Check if consArgs length is same as t.construct?\n    // (Arg types can still be different)\n    if (typeof t.construct === \"function\") {\n        return new t.construct(...(consArgs !== null && consArgs !== void 0 ? consArgs : []));\n    }\n    else {\n        throw new Error(`Cannot access constructor of ${t.fullname}`);\n    }\n}\nexport function getValue(propertyInfo, v) {\n    return v[propertyInfo[0]];\n}\n// Fable.Core.Reflection\nfunction assertUnion(x) {\n    if (!(x instanceof Union)) {\n        throw new Error(`Value is not an F# union type`);\n    }\n}\nexport function getCaseTag(x) {\n    assertUnion(x);\n    return x.tag;\n}\nexport function getCaseName(x) {\n    assertUnion(x);\n    return x.cases()[x.tag];\n}\nexport function getCaseFields(x) {\n    assertUnion(x);\n    return x.fields;\n}\n","// export type decimal = Decimal;\nexport var NumberStyles;\n(function (NumberStyles) {\n    // None = 0x00000000,\n    // AllowLeadingWhite = 0x00000001,\n    // AllowTrailingWhite = 0x00000002,\n    // AllowLeadingSign = 0x00000004,\n    // AllowTrailingSign = 0x00000008,\n    // AllowParentheses = 0x00000010,\n    // AllowDecimalPoint = 0x00000020,\n    // AllowThousands = 0x00000040,\n    // AllowExponent = 0x00000080,\n    // AllowCurrencySymbol = 0x00000100,\n    NumberStyles[NumberStyles[\"AllowHexSpecifier\"] = 512] = \"AllowHexSpecifier\";\n    // Integer = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign,\n    // HexNumber = AllowLeadingWhite | AllowTrailingWhite | AllowHexSpecifier,\n    // Number = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //          AllowTrailingSign | AllowDecimalPoint | AllowThousands,\n    // Float = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //         AllowDecimalPoint | AllowExponent,\n    // Currency = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //            AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol,\n    // Any = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //       AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol | AllowExponent,\n})(NumberStyles || (NumberStyles = {}));\nfunction validResponse(regexMatch, radix) {\n    const [/*all*/ , sign, prefix, digits] = regexMatch;\n    return {\n        sign: sign || \"\",\n        prefix: prefix || \"\",\n        digits,\n        radix,\n    };\n}\nfunction getRange(unsigned, bitsize) {\n    switch (bitsize) {\n        case 8: return unsigned ? [0, 255] : [-128, 127];\n        case 16: return unsigned ? [0, 65535] : [-32768, 32767];\n        case 32: return unsigned ? [0, 4294967295] : [-2147483648, 2147483647];\n        default: throw new Error(\"Invalid bit size.\");\n    }\n}\nfunction getInvalidDigits(radix) {\n    switch (radix) {\n        case 2: return /[^0-1]/;\n        case 8: return /[^0-7]/;\n        case 10: return /[^0-9]/;\n        case 16: return /[^0-9a-fA-F]/;\n        default:\n            throw new Error(\"Invalid Base.\");\n    }\n}\nfunction getRadix(prefix, style) {\n    if (style & NumberStyles.AllowHexSpecifier) {\n        return 16;\n    }\n    else {\n        switch (prefix) {\n            case \"0b\":\n            case \"0B\": return 2;\n            case \"0o\":\n            case \"0O\": return 8;\n            case \"0x\":\n            case \"0X\": return 16;\n            default: return 10;\n        }\n    }\n}\nexport function isValid(str, style, radix) {\n    const integerRegex = /^\\s*([\\+\\-])?(0[xXoObB])?([0-9a-fA-F]+)\\s*$/;\n    const res = integerRegex.exec(str.replace(/_/g, \"\"));\n    if (res != null) {\n        const [/*all*/ , /*sign*/ , prefix, digits] = res;\n        radix = radix || getRadix(prefix, style);\n        const invalidDigits = getInvalidDigits(radix);\n        if (!invalidDigits.test(digits)) {\n            return validResponse(res, radix);\n        }\n    }\n    return null;\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        let v = Number.parseInt(res.sign + res.digits, res.radix);\n        if (!Number.isNaN(v)) {\n            const [umin, umax] = getRange(true, bitsize);\n            if (!unsigned && res.radix !== 10 && v >= umin && v <= umax) {\n                v = v << (32 - bitsize) >> (32 - bitsize);\n            }\n            const [min, max] = getRange(unsigned, bitsize);\n            if (v >= min && v <= max) {\n                return v;\n            }\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function op_UnaryNegation_Int8(x) {\n    return x === -128 ? x : -x;\n}\nexport function op_UnaryNegation_Int16(x) {\n    return x === -32768 ? x : -x;\n}\nexport function op_UnaryNegation_Int32(x) {\n    return x === -2147483648 ? x : -x;\n}\n","export const symbol = Symbol(\"numeric\");\nexport function isNumeric(x) {\n    return typeof x === \"number\" || (x === null || x === void 0 ? void 0 : x[symbol]);\n}\nexport function compare(x, y) {\n    if (typeof x === \"number\") {\n        return x < y ? -1 : (x > y ? 1 : 0);\n    }\n    else {\n        return x.CompareTo(y);\n    }\n}\nexport function multiply(x, y) {\n    if (typeof x === \"number\") {\n        return x * y;\n    }\n    else {\n        return x[symbol]().multiply(y);\n    }\n}\nexport function toFixed(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toFixed(dp);\n    }\n    else {\n        return x[symbol]().toFixed(dp);\n    }\n}\nexport function toPrecision(x, sd) {\n    if (typeof x === \"number\") {\n        return x.toPrecision(sd);\n    }\n    else {\n        return x[symbol]().toPrecision(sd);\n    }\n}\nexport function toExponential(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toExponential(dp);\n    }\n    else {\n        return x[symbol]().toExponential(dp);\n    }\n}\nexport function toHex(x) {\n    if (typeof x === \"number\") {\n        return (Number(x) >>> 0).toString(16);\n    }\n    else {\n        return x[symbol]().toHex();\n    }\n}\n","// Adapted from: https://github.com/dcodeIO/long.js/blob/master/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\n/* tslint:disable */\nimport { symbol } from \"../Numeric.js\";\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = null;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n    ])), {}).exports;\n}\ncatch (e) {\n    // no wasm support :(\n}\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nexport function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n    this.unsigned = !!unsigned;\n}\nLong.prototype.GetHashCode = function () {\n    let h1 = this.unsigned ? 1 : 0;\n    h1 = ((h1 << 5) + h1) ^ this.high;\n    h1 = ((h1 << 5) + h1) ^ this.low;\n    return h1;\n};\nLong.prototype.Equals = function (x) { return equals(this, x); };\nLong.prototype.CompareTo = function (x) { return compare(this, x); };\nLong.prototype.toString = function (radix) { return toString(this, radix); };\nLong.prototype.toJSON = function () { return toString(this); };\nLong.prototype[symbol] = function () {\n    const x = this;\n    return {\n        multiply: y => multiply(x, y),\n        toPrecision: sd => String(x) + (0).toPrecision(sd).substr(1),\n        toExponential: dp => String(x) + (0).toExponential(dp).substr(1),\n        toFixed: dp => String(x) + (0).toFixed(dp).substr(1),\n        toHex: () => toString(x.unsigned ? x : fromBytes(toBytes(x), true), 16),\n    };\n};\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nexport function isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * Tests if the specified object is a Long.\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n */\n// Long.isLong = isLong;\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n    if (unsigned) {\n        value >>>= 0;\n        if (cache = (0 <= value && value < 256)) {\n            cachedObj = UINT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache)\n            UINT_CACHE[value] = obj;\n        return obj;\n    }\n    else {\n        value |= 0;\n        if (cache = (-128 <= value && value < 128)) {\n            cachedObj = INT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache)\n            INT_CACHE[value] = obj;\n        return obj;\n    }\n}\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @function\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromInt = fromInt;\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromNumber(value, unsigned) {\n    if (isNaN(value))\n        return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n        if (value < 0)\n            return UZERO;\n        if (value >= TWO_PWR_64_DBL)\n            return MAX_UNSIGNED_VALUE;\n    }\n    else {\n        if (value <= -TWO_PWR_63_DBL)\n            return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL)\n            return MAX_VALUE;\n    }\n    if (value < 0)\n        return negate(fromNumber(-value, unsigned));\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @function\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromNumber = fromNumber;\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n}\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @function\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromBits = fromBits;\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nexport function fromString(str, unsigned, radix) {\n    if (str.length === 0)\n        throw Error('empty string');\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n        return ZERO;\n    if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned,\n            unsigned = false;\n    }\n    else {\n        unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    var p = str.indexOf('-');\n    if (p > 0)\n        throw Error('interior hyphen');\n    else if (p === 0) {\n        return negate(fromString(str.substring(1), unsigned, radix));\n    }\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n            var power = fromNumber(pow_dbl(radix, size));\n            result = add(multiply(result, power), fromNumber(value));\n        }\n        else {\n            result = multiply(result, radixToPower);\n            result = add(result, fromNumber(value));\n        }\n    }\n    result.unsigned = unsigned;\n    return result;\n}\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @function\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromString = fromString;\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromValue(val, unsigned) {\n    if (typeof val === 'number')\n        return fromNumber(val, unsigned);\n    if (typeof val === 'string')\n        return fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n/**\n * Converts the specified value to a Long using the appropriate from* function for its type.\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long}\n */\n// Long.fromValue = fromValue;\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ZERO = fromInt(0);\n/**\n * Signed zero.\n * @type {!Long}\n */\n// Long.ZERO = ZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UZERO = fromInt(0, true);\n/**\n * Unsigned zero.\n * @type {!Long}\n */\n// Long.UZERO = UZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var ONE = fromInt(1);\n/**\n * Signed one.\n * @type {!Long}\n */\n// Long.ONE = ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UONE = fromInt(1, true);\n/**\n * Unsigned one.\n * @type {!Long}\n */\n// Long.UONE = UONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var NEG_ONE = fromInt(-1);\n/**\n * Signed negative one.\n * @type {!Long}\n */\n// Long.NEG_ONE = NEG_ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * Maximum signed value.\n * @type {!Long}\n */\n// Long.MAX_VALUE = MAX_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\n// Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Minimum signed value.\n * @type {!Long}\n */\n// Long.MIN_VALUE = MIN_VALUE;\n/**\n * @alias Long.prototype\n * @inner\n */\n// var LongPrototype = Long.prototype;\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @this {!Long}\n * @returns {number}\n */\nexport function toInt($this) {\n    return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @this {!Long}\n * @returns {number}\n */\nexport function toNumber($this) {\n    if ($this.unsigned)\n        return (($this.high >>> 0) * TWO_PWR_32_DBL) + ($this.low >>> 0);\n    return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @this {!Long}\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nexport function toString($this, radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    if (isZero($this))\n        return '0';\n    if (isNegative($this)) { // Unsigned Longs are never negative\n        if (equals($this, MIN_VALUE)) {\n            // We need to change the Long value before it can be negated, so we remove\n            // the bottom-most digit in this base and then recurse to do the rest.\n            var radixLong = fromNumber(radix), div = divide($this, radixLong), rem1 = subtract(multiply(div, radixLong), $this);\n            return toString(div, radix) + toInt(rem1).toString(radix);\n        }\n        else\n            return '-' + toString(negate($this), radix);\n    }\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned), rem = $this;\n    var result = '';\n    while (true) {\n        var remDiv = divide(rem, radixToPower), intval = toInt(subtract(rem, multiply(remDiv, radixToPower))) >>> 0, digits = intval.toString(radix);\n        rem = remDiv;\n        if (isZero(rem))\n            return digits + result;\n        else {\n            while (digits.length < 6)\n                digits = '0' + digits;\n            result = '' + digits + result;\n        }\n    }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed high bits\n */\nexport function getHighBits($this) {\n    return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned high bits\n */\nexport function getHighBitsUnsigned($this) {\n    return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed low bits\n */\nexport function getLowBits($this) {\n    return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned low bits\n */\nexport function getLowBitsUnsigned($this) {\n    return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @this {!Long}\n * @returns {number}\n */\nexport function getNumBitsAbs($this) {\n    if (isNegative($this)) // Unsigned Longs are never negative\n        return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(negate($this));\n    var val = $this.high != 0 ? $this.high : $this.low;\n    for (var bit = 31; bit > 0; bit--)\n        if ((val & (1 << bit)) != 0)\n            break;\n    return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isZero($this) {\n    return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n * @returns {boolean}\n */\n// LongPrototype.eqz = LongPrototype.isZero;\n/**\n * Tests if this Long's value is negative.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isNegative($this) {\n    return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isPositive($this) {\n    return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isOdd($this) {\n    return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isEven($this) {\n    return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function equals($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if ($this.unsigned !== other.unsigned && ($this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n        return false;\n    return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.eq = LongPrototype.equals;\n/**\n * Tests if this Long's value differs from the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function notEquals($this, other) {\n    return !equals($this, /* validates */ other);\n}\n;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.neq = LongPrototype.notEquals;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ne = LongPrototype.notEquals;\n/**\n * Tests if this Long's value is less than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThan($this, other) {\n    return compare($this, /* validates */ other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lt = LongPrototype.lessThan;\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lte = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.le = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is greater than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThan($this, other) {\n    return compare($this, /* validates */ other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gt = LongPrototype.greaterThan;\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) >= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n/**\n * Compares this Long's value with the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nexport function compare($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if (equals($this, other))\n        return 0;\n    var thisNeg = isNegative($this), otherNeg = isNegative(other);\n    if (thisNeg && !otherNeg)\n        return -1;\n    if (!thisNeg && otherNeg)\n        return 1;\n    // At this point the sign bits are the same\n    if (!$this.unsigned)\n        return isNegative(subtract($this, other)) ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return (other.high >>> 0) > ($this.high >>> 0) || (other.high === $this.high && (other.low >>> 0) > ($this.low >>> 0)) ? -1 : 1;\n}\n;\n/**\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\n// LongPrototype.comp = LongPrototype.compare;\n/**\n * Negates this Long's value.\n * @this {!Long}\n * @returns {!Long} Negated Long\n */\nexport function negate($this) {\n    if (!$this.unsigned && equals($this, MIN_VALUE))\n        return MIN_VALUE;\n    return add(not($this), ONE);\n}\n;\n/**\n * Negates this Long's value. This is an alias of {@link Long#negate}.\n * @function\n * @returns {!Long} Negated Long\n */\n// LongPrototype.neg = LongPrototype.negate;\n/**\n * Returns the sum of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nexport function add($this, addend) {\n    if (!isLong(addend))\n        addend = fromValue(addend);\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nexport function subtract($this, subtrahend) {\n    if (!isLong(subtrahend))\n        subtrahend = fromValue(subtrahend);\n    return add($this, negate(subtrahend));\n}\n;\n/**\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n * @function\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\n// LongPrototype.sub = LongPrototype.subtract;\n/**\n * Returns the product of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nexport function multiply($this, multiplier) {\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    if (!isLong(multiplier))\n        multiplier = fromValue(multiplier);\n    // use wasm support if present\n    if (wasm) {\n        var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero(multiplier))\n        return $this.unsigned ? UZERO : ZERO;\n    if (equals($this, MIN_VALUE))\n        return isOdd(multiplier) ? MIN_VALUE : ZERO;\n    if (equals(multiplier, MIN_VALUE))\n        return isOdd($this) ? MIN_VALUE : ZERO;\n    if (isNegative($this)) {\n        if (isNegative(multiplier))\n            return multiply(negate($this), negate(multiplier));\n        else\n            return negate(multiply(negate($this), multiplier));\n    }\n    else if (isNegative(multiplier))\n        return negate(multiply($this, negate(multiplier)));\n    // If both longs are small, use float multiplication\n    if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24))\n        return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned);\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n * @function\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\n// LongPrototype.mul = LongPrototype.multiply;\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nexport function divide($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    if (isZero(divisor))\n        throw Error('division by zero');\n    // use wasm support if present\n    if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (!$this.unsigned &&\n            $this.high === -0x80000000 &&\n            divisor.low === -1 && divisor.high === -1) {\n            // be consistent with non-wasm code path\n            return $this;\n        }\n        var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n    if (!$this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (equals($this, MIN_VALUE)) {\n            if (equals(divisor, ONE) || equals(divisor, NEG_ONE))\n                return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n            else if (equals(divisor, MIN_VALUE))\n                return ONE;\n            else {\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                var halfThis = shiftRight($this, 1);\n                approx = shiftLeft(divide(halfThis, divisor), 1);\n                if (equals(approx, ZERO)) {\n                    return isNegative(divisor) ? ONE : NEG_ONE;\n                }\n                else {\n                    rem = subtract($this, multiply(divisor, approx));\n                    res = add(approx, divide(rem, divisor));\n                    return res;\n                }\n            }\n        }\n        else if (equals(divisor, MIN_VALUE))\n            return $this.unsigned ? UZERO : ZERO;\n        if (isNegative($this)) {\n            if (isNegative(divisor))\n                return divide(negate($this), negate(divisor));\n            return negate(divide(negate($this), divisor));\n        }\n        else if (isNegative(divisor))\n            return negate(divide($this, negate(divisor)));\n        res = ZERO;\n    }\n    else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned)\n            divisor = toUnsigned(divisor);\n        if (greaterThan(divisor, $this))\n            return UZERO;\n        if (greaterThan(divisor, shiftRightUnsigned($this, 1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n            return UONE;\n        res = UZERO;\n    }\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    rem = $this;\n    while (greaterThanOrEqual(rem, divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor)));\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), \n        // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n        approxRes = fromNumber(approx), approxRem = multiply(approxRes, divisor);\n        while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n            approx -= delta;\n            approxRes = fromNumber(approx, $this.unsigned);\n            approxRem = multiply(approxRes, divisor);\n        }\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (isZero(approxRes))\n            approxRes = ONE;\n        res = add(res, approxRes);\n        rem = subtract(rem, approxRem);\n    }\n    return res;\n}\n;\n/**\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\n// LongPrototype.div = LongPrototype.divide;\n/**\n * Returns this Long modulo the specified.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nexport function modulo($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    // use wasm support if present\n    if (wasm) {\n        var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    return subtract($this, multiply(divide($this, divisor), divisor));\n}\n;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.mod = LongPrototype.modulo;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.rem = LongPrototype.modulo;\n/**\n * Returns the bitwise NOT of this Long.\n * @this {!Long}\n * @returns {!Long}\n */\nexport function not($this) {\n    return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function and($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function or($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function xor($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftLeft($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits($this.low << numBits, ($this.high << numBits) | ($this.low >>> (32 - numBits)), $this.unsigned);\n    else\n        return fromBits(0, $this.low << (numBits - 32), $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shl = LongPrototype.shiftLeft;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRight($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits(($this.low >>> numBits) | ($this.high << (32 - numBits)), $this.high >> numBits, $this.unsigned);\n    else\n        return fromBits($this.high >> (numBits - 32), $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr = LongPrototype.shiftRight;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRightUnsigned($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    numBits &= 63;\n    if (numBits === 0)\n        return $this;\n    else {\n        var high = $this.high;\n        if (numBits < 32) {\n            var low = $this.low;\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, $this.unsigned);\n        }\n        else if (numBits === 32)\n            return fromBits(high, 0, $this.unsigned);\n        else\n            return fromBits(high >>> (numBits - 32), 0, $this.unsigned);\n    }\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits rotated to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateLeft = function rotateLeft(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.low << numBits) | (this.high >>> b)), ((this.high << numBits) | (this.low >>> b)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.high << numBits) | (this.low >>> b)), ((this.low << numBits) | (this.high >>> b)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotl = LongPrototype.rotateLeft;\n/**\n * Returns this Long with bits rotated to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateRight = function rotateRight(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.high << b) | (this.low >>> numBits)), ((this.low << b) | (this.high >>> numBits)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.low << b) | (this.high >>> numBits)), ((this.high << b) | (this.low >>> numBits)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotr = LongPrototype.rotateRight;\n/**\n * Converts this Long to signed.\n * @this {!Long}\n * @returns {!Long} Signed long\n */\nexport function toSigned($this) {\n    if (!$this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @this {!Long}\n * @returns {!Long} Unsigned long\n */\nexport function toUnsigned($this) {\n    if ($this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @this {!Long}\n * @returns {!Array.<number>} Byte representation\n */\nexport function toBytes($this, le) {\n    return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Little endian byte representation\n */\nexport function toBytesLE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        lo & 0xff,\n        lo >>> 8 & 0xff,\n        lo >>> 16 & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        hi >>> 8 & 0xff,\n        hi >>> 16 & 0xff,\n        hi >>> 24\n    ];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Big endian byte representation\n */\nexport function toBytesBE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        hi >>> 24,\n        hi >>> 16 & 0xff,\n        hi >>> 8 & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        lo >>> 16 & 0xff,\n        lo >>> 8 & 0xff,\n        lo & 0xff\n    ];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytes(bytes, unsigned, le) {\n    return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] |\n        bytes[1] << 8 |\n        bytes[2] << 16 |\n        bytes[3] << 24, bytes[4] |\n        bytes[5] << 8 |\n        bytes[6] << 16 |\n        bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 |\n        bytes[5] << 16 |\n        bytes[6] << 8 |\n        bytes[7], bytes[0] << 24 |\n        bytes[1] << 16 |\n        bytes[2] << 8 |\n        bytes[3], unsigned);\n}\n;\n","import { isValid } from \"./Int32.js\";\nimport * as LongLib from \"./lib/long.js\";\nexport default LongLib.Long;\nexport const get_Zero = LongLib.ZERO;\nexport const get_One = LongLib.ONE;\nexport const op_Addition = LongLib.add;\nexport const op_Subtraction = LongLib.subtract;\nexport const op_Multiply = LongLib.multiply;\nexport const op_Division = LongLib.divide;\nexport const op_Modulus = LongLib.modulo;\nexport const op_UnaryNegation = LongLib.negate;\nexport const op_LeftShift = LongLib.shiftLeft;\nexport const op_RightShift = LongLib.shiftRight;\nexport const op_RightShiftUnsigned = LongLib.shiftRightUnsigned;\nexport const op_BitwiseAnd = LongLib.and;\nexport const op_BitwiseOr = LongLib.or;\nexport const op_ExclusiveOr = LongLib.xor;\nexport const op_LogicalNot = LongLib.not;\nexport const op_LessThan = LongLib.lessThan;\nexport const op_LessThanOrEqual = LongLib.lessThanOrEqual;\nexport const op_GreaterThan = LongLib.greaterThan;\nexport const op_GreaterThanOrEqual = LongLib.greaterThanOrEqual;\nexport const op_Equality = LongLib.equals;\nexport const op_Inequality = LongLib.notEquals;\nexport const equals = LongLib.equals;\nexport const compare = LongLib.compare;\nexport const fromInt = LongLib.fromInt;\nexport const fromBits = LongLib.fromBits;\nexport const fromBytes = LongLib.fromBytes;\nexport const fromNumber = LongLib.fromNumber;\nexport const fromString = LongLib.fromString;\nexport const fromValue = LongLib.fromValue;\nexport const toInt = LongLib.toInt;\nexport const toBytes = LongLib.toBytes;\nexport const toNumber = LongLib.toNumber;\nexport const toString = LongLib.toString;\nexport const getLowBits = LongLib.getLowBits;\nexport const getHighBits = LongLib.getHighBits;\nexport const getLowBitsUnsigned = LongLib.getLowBitsUnsigned;\nexport const getHighBitsUnsigned = LongLib.getHighBitsUnsigned;\nfunction getMaxValue(unsigned, radix, isNegative) {\n    switch (radix) {\n        case 2: return unsigned ?\n            \"1111111111111111111111111111111111111111111111111111111111111111\" :\n            (isNegative ? \"1000000000000000000000000000000000000000000000000000000000000000\"\n                : \"111111111111111111111111111111111111111111111111111111111111111\");\n        case 8: return unsigned ?\n            \"1777777777777777777777\" :\n            (isNegative ? \"1000000000000000000000\" : \"777777777777777777777\");\n        case 10: return unsigned ?\n            \"18446744073709551615\" :\n            (isNegative ? \"9223372036854775808\" : \"9223372036854775807\");\n        case 16: return unsigned ?\n            \"FFFFFFFFFFFFFFFF\" :\n            (isNegative ? \"8000000000000000\" : \"7FFFFFFFFFFFFFFF\");\n        default: throw new Error(\"Invalid radix.\");\n    }\n}\nexport function abs(x) {\n    if (!x.unsigned && LongLib.isNegative(x)) {\n        return op_UnaryNegation(x);\n    }\n    else {\n        return x;\n    }\n}\nexport function fromInteger(value, unsigned, kind) {\n    let x = value;\n    let xh = 0;\n    switch (kind) {\n        case 0:\n            x = value << 24 >> 24;\n            xh = x;\n            break;\n        case 4:\n            x = value << 24 >>> 24;\n            break;\n        case 1:\n            x = value << 16 >> 16;\n            xh = x;\n            break;\n        case 5:\n            x = value << 16 >>> 16;\n            break;\n        case 2:\n            x = value >> 0;\n            xh = x;\n            break;\n        case 6:\n            x = value >>> 0;\n            break;\n    }\n    return LongLib.fromBits(x, xh >> 31, unsigned);\n}\nexport function parse(str, style, unsigned, _bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        const lessOrEqual = (x, y) => {\n            const len = Math.max(x.length, y.length);\n            return x.padStart(len, \"0\") <= y.padStart(len, \"0\");\n        };\n        const isNegative = res.sign === \"-\";\n        const maxValue = getMaxValue(unsigned || res.radix !== 10, res.radix, isNegative);\n        if (lessOrEqual(res.digits.toUpperCase(), maxValue)) {\n            str = isNegative ? res.sign + res.digits : res.digits;\n            return LongLib.fromString(str, unsigned, res.radix);\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function unixEpochMillisecondsToTicks(ms, offset) {\n    return op_Multiply(op_Addition(op_Addition(LongLib.fromNumber(ms), 62135596800000), offset), 10000);\n}\nexport function ticksToUnixEpochMilliseconds(ticks) {\n    return LongLib.toNumber(op_Subtraction(op_Division(ticks, 10000), 62135596800000));\n}\n// export function makeRangeStepFunction(step: Long, last: Long, unsigned: boolean) {\n//   const stepComparedWithZero = LongLib.compare(step, unsigned ? LongLib.UZERO : LongLib.ZERO);\n//   if (stepComparedWithZero === 0) {\n//     throw new Error(\"The step of a range cannot be zero\");\n//   }\n//   const stepGreaterThanZero = stepComparedWithZero > 0;\n//   return (x: Long) => {\n//     const comparedWithLast = LongLib.compare(x, last);\n//     if ((stepGreaterThanZero && comparedWithLast <= 0)\n//       || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n//       return [x, op_Addition(x, step)];\n//     } else {\n//       return undefined;\n//     }\n//   };\n// }\n","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long.js\";\nimport { compareDates, dateOffset, padWithZeros } from \"./Util.js\";\nexport const offsetRegex = /(?:Z|[+-](\\d+):?([0-5]?\\d)?)\\s*$/;\nexport function dateOffsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function dateToHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction dateToISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? dateOffsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction dateToISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + dateOffsetToString(offset);\n}\nfunction dateToStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = Number.NaN;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n            case \"f\":\n                rep = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n                break;\n        }\n        if (Number.isNaN(rep)) {\n            return match;\n        }\n        else {\n            return (rep < 10 && match.length > 1) ? \"0\" + rep : \"\" + rep;\n        }\n    });\n}\nfunction dateToStringWithOffset(date, format) {\n    var _a, _b, _c;\n    const d = new Date(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0));\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + dateOffsetToString(((_b = date.offset) !== null && _b !== void 0 ? _b : 0));\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return dateToHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return dateToHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return dateToISOStringWithOffset(d, ((_c = date.offset) !== null && _c !== void 0 ? _c : 0));\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(d, format, true);\n    }\n}\nfunction dateToStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? dateToHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? dateToHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return dateToISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format, _provider) {\n    return date.offset != null\n        ? dateToStringWithOffset(date, format)\n        : dateToStringWithKind(date, format);\n}\nexport function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 0 /* Unspecified */;\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - dateOffset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    var _a;\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0), kind);\n            return DateTime(d.getTime() - dateOffset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), dateOffset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(input) {\n    function fail() {\n        throw new Error(`The string is not a valid Date: ${input}`);\n    }\n    if (input === null || input.trim() === \"\") {\n        fail();\n    }\n    let date = new Date(input);\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        // tslint:disable-next-line:max-line-length\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*([+-]\\d+(?::\\d+)?)?\\s*$/.exec(input);\n        if (m != null) {\n            let baseDate;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds =\n                    parseInt(timeParts[0], 10) * 3600 +\n                        parseInt(timeParts[1] || \"0\", 10) * 60 +\n                        parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                const offsetParts = m[4].substr(1).split(\":\");\n                let offsetInMinutes = parseInt(offsetParts[0], 10) * 60 + parseInt(offsetParts[1] || \"0\", 10);\n                if (m[4][0] === \"+\") {\n                    offsetInMinutes *= -1;\n                }\n                timeInSeconds += offsetInMinutes * 60;\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n            // correct for daylight savings time\n            date = new Date(date.getTime() + (date.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000);\n        }\n        else {\n            fail();\n        }\n        // Check again the date is valid after transformations, see #2229\n        if (isNaN(date.getTime())) {\n            fail();\n        }\n    }\n    return date;\n}\nexport function parse(str, detectUTC = false) {\n    const date = parseRaw(str);\n    const offset = offsetRegex.exec(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset[0] === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function specifyKind(d, kind) {\n    return create(year(d), month(d), day(d), hour(d), minute(d), second(d), millisecond(d), kind);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    const newDate = DateTime(d.getTime() + ts, d.kind);\n    if (d.kind === 2 /* Local */) {\n        const oldTzOffset = d.getTimezoneOffset();\n        const newTzOffset = newDate.getTimezoneOffset();\n        return oldTzOffset !== newTzOffset\n            ? DateTime(newDate.getTime() + (newTzOffset - oldTzOffset) * 60000, d.kind)\n            : newDate;\n    }\n    else {\n        return newDate;\n    }\n}\nexport function addDays(d, v) {\n    return add(d, v * 86400000);\n}\nexport function addHours(d, v) {\n    return add(d, v * 3600000);\n}\nexport function addMinutes(d, v) {\n    return add(d, v * 60000);\n}\nexport function addSeconds(d, v) {\n    return add(d, v * 1000);\n}\nexport function addMilliseconds(d, v) {\n    return add(d, v);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? add(d, -that)\n        : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport const compare = compareDates;\nexport const compareTo = compareDates;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\nexport default DateTime;\n","export function create(pattern, options = 0) {\n    // Supported RegexOptions\n    // * IgnoreCase:  0x0001\n    // * Multiline:   0x0002\n    // * Singleline:  0x0010\n    // * ECMAScript:  0x0100 (ignored)\n    if ((options & ~(1 ^ 2 ^ 16 ^ 256)) !== 0) {\n        throw new Error(\"RegexOptions only supports: IgnoreCase, Multiline, Singleline and ECMAScript\");\n    }\n    let flags = \"g\";\n    flags += options & 1 ? \"i\" : \"\"; // 0x0001 RegexOptions.IgnoreCase\n    flags += options & 2 ? \"m\" : \"\";\n    flags += options & 16 ? \"s\" : \"\";\n    return new RegExp(pattern, flags);\n}\n// From http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nexport function escape(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\nexport function unescape(str) {\n    return str.replace(/\\\\([\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|])/g, \"$1\");\n}\nexport function isMatch(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.test(str);\n}\nexport function match(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.exec(str);\n}\nexport function matches(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    if (!reg.global) {\n        throw new Error(\"Non-global RegExp\"); // Prevent infinite loop\n    }\n    let m = reg.exec(str);\n    const matches = [];\n    while (m !== null) {\n        matches.push(m);\n        m = reg.exec(str);\n    }\n    return matches;\n}\nexport function options(reg) {\n    let options = 256; // ECMAScript\n    options |= reg.ignoreCase ? 1 : 0;\n    options |= reg.multiline ? 2 : 0;\n    return options;\n}\nexport function replace(reg, input, replacement, limit, offset = 0) {\n    function replacer() {\n        let res = arguments[0];\n        if (limit) {\n            limit--;\n            const match = [];\n            const len = arguments.length;\n            // arguments: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_function_as_a_parameter\n            // * match: matched substring\n            // * p1, p2, ...: nth capture group string\n            // * offset: offset of matched substring\n            // * string: whole string examined\n            // * groups: named capturing groups\n            //           ONLY if regex contains a named capture group AND browser supports named groups\n            // -> last element can be groups OR input string\n            // -> check if last element is string\n            const withGroups = typeof arguments[len - 1] !== \"string\";\n            let pLast = withGroups ? len - 3 : len - 2;\n            for (let i = 0; i < pLast; i++) {\n                match.push(arguments[i]);\n            }\n            match.index = arguments[pLast++];\n            match.input = arguments[pLast++];\n            if (withGroups) {\n                match.groups = arguments[pLast];\n            }\n            res = replacement(match);\n        }\n        return res;\n    }\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    if (typeof replacement === \"function\") {\n        limit = limit == null ? -1 : limit;\n        return input.substring(0, offset) + input.substring(offset).replace(reg, replacer);\n    }\n    else {\n        replacement =\n            replacement\n                // $0 doesn't work with JS regex, see #1155\n                .replace(/\\$0/g, (_s) => \"$&\")\n                // named groups in replacement are `${name}` in .Net, but `$<name>` in JS (in regex: groups are `(?<name>...)` in both)\n                .replace(/\\${([^}]+)}/g, \"\\$<$1>\");\n        if (limit != null) {\n            let m;\n            const sub1 = input.substring(offset);\n            const _matches = matches(reg, sub1);\n            const sub2 = matches.length > limit ? (m = _matches[limit - 1], sub1.substring(0, m.index + m[0].length)) : sub1;\n            return input.substring(0, offset) + sub2.replace(reg, replacement)\n                + input.substring(offset + sub2.length);\n        }\n        else {\n            return input.replace(reg, replacement);\n        }\n    }\n}\nexport function split(reg, input, limit, offset = 0) {\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    input = input.substring(offset);\n    return input.split(reg, limit);\n}\n","import { toString as dateToString } from \"./Date.js\";\nimport { compare as numericCompare, isNumeric, multiply, toExponential, toFixed, toHex, toPrecision } from \"./Numeric.js\";\nimport { escape } from \"./RegExp.js\";\nimport { toString } from \"./Types.js\";\nconst fsFormatRegExp = /(^|[^%])%([0+\\- ]*)(\\*|\\d+)?(?:\\.(\\d+))?(\\w)/g;\nconst interpolateRegExp = /(?:(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w))?%P\\(\\)/g;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\nfunction isLessThan(x, y) {\n    return numericCompare(x, y) < 0;\n}\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function interpolate(str, values) {\n    let valIdx = 0;\n    let strIdx = 0;\n    let result = \"\";\n    interpolateRegExp.lastIndex = 0;\n    let match = interpolateRegExp.exec(str);\n    while (match) {\n        // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n        // Note: we don't use negative lookbehind because some browsers don't support it yet\n        const matchIndex = match.index + (match[1] || \"\").length;\n        result += str.substring(strIdx, matchIndex).replace(/%%/g, \"%\");\n        const [, , flags, padLength, precision, format] = match;\n        result += formatReplacement(values[valIdx++], flags, padLength, precision, format);\n        strIdx = interpolateRegExp.lastIndex;\n        // Likewise we need to move interpolateRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n        interpolateRegExp.lastIndex -= 1;\n        match = interpolateRegExp.exec(str);\n    }\n    result += str.substring(strIdx).replace(/%%/g, \"%\");\n    return result;\n}\nfunction continuePrint(cont, arg) {\n    return typeof arg === \"string\" ? cont(arg) : arg.cont(cont);\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return continuePrint((x) => console.log(x), arg);\n}\nexport function toConsoleError(arg) {\n    return continuePrint((x) => console.error(x), arg);\n}\nexport function toText(arg) {\n    return continuePrint((x) => x, arg);\n}\nexport function toFail(arg) {\n    return continuePrint((x) => {\n        throw new Error(x);\n    }, arg);\n}\nfunction formatReplacement(rep, flags, padLength, precision, format) {\n    let sign = \"\";\n    flags = flags || \"\";\n    format = format || \"\";\n    if (isNumeric(rep)) {\n        if (format.toLowerCase() !== \"x\") {\n            if (isLessThan(rep, 0)) {\n                rep = multiply(rep, -1);\n                sign = \"-\";\n            }\n            else {\n                if (flags.indexOf(\" \") >= 0) {\n                    sign = \" \";\n                }\n                else if (flags.indexOf(\"+\") >= 0) {\n                    sign = \"+\";\n                }\n            }\n        }\n        precision = precision == null ? null : parseInt(precision, 10);\n        switch (format) {\n            case \"f\":\n            case \"F\":\n                precision = precision != null ? precision : 6;\n                rep = toFixed(rep, precision);\n                break;\n            case \"g\":\n            case \"G\":\n                rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                break;\n            case \"e\":\n            case \"E\":\n                rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                break;\n            case \"x\":\n                rep = toHex(rep);\n                break;\n            case \"X\":\n                rep = toHex(rep).toUpperCase();\n                break;\n            default: // AOid\n                rep = String(rep);\n                break;\n        }\n    }\n    else if (rep instanceof Date) {\n        rep = dateToString(rep);\n    }\n    else {\n        rep = toString(rep);\n    }\n    padLength = typeof padLength === \"number\" ? padLength : parseInt(padLength, 10);\n    if (!isNaN(padLength)) {\n        const zeroFlag = flags.indexOf(\"0\") >= 0; // Use '0' for left padding\n        const minusFlag = flags.indexOf(\"-\") >= 0; // Right padding\n        const ch = minusFlag || !zeroFlag ? \" \" : \"0\";\n        if (ch === \"0\") {\n            rep = padLeft(rep, padLength - sign.length, ch, minusFlag);\n            rep = sign + rep;\n        }\n        else {\n            rep = padLeft(sign + rep, padLength, ch, minusFlag);\n        }\n    }\n    else {\n        rep = sign + rep;\n    }\n    return rep;\n}\nfunction createPrinter(cont, _strParts, _matches, _result = \"\", padArg = -1) {\n    return (...args) => {\n        // Make copies of the values passed by reference because the function can be used multiple times\n        let result = _result;\n        const strParts = _strParts.slice();\n        const matches = _matches.slice();\n        for (const arg of args) {\n            const [, , flags, _padLength, precision, format] = matches[0];\n            let padLength = _padLength;\n            if (padArg >= 0) {\n                padLength = padArg;\n                padArg = -1;\n            }\n            else if (padLength === \"*\") {\n                if (arg < 0) {\n                    throw new Error(\"Non-negative number required\");\n                }\n                padArg = arg;\n                continue;\n            }\n            result += strParts[0];\n            result += formatReplacement(arg, flags, padLength, precision, format);\n            strParts.splice(0, 1);\n            matches.splice(0, 1);\n        }\n        if (matches.length === 0) {\n            result += strParts[0];\n            return cont(result);\n        }\n        else {\n            return createPrinter(cont, strParts, matches, result, padArg);\n        }\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        fsFormatRegExp.lastIndex = 0;\n        const strParts = [];\n        const matches = [];\n        let strIdx = 0;\n        let match = fsFormatRegExp.exec(str);\n        while (match) {\n            // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n            // Note: we don't use negative lookbehind because some browsers don't support it yet\n            const matchIndex = match.index + (match[1] || \"\").length;\n            strParts.push(str.substring(strIdx, matchIndex).replace(/%%/g, \"%\"));\n            matches.push(match);\n            strIdx = fsFormatRegExp.lastIndex;\n            // Likewise we need to move fsFormatRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n            fsFormatRegExp.lastIndex -= 1;\n            match = fsFormatRegExp.exec(str);\n        }\n        if (strParts.length === 0) {\n            return cont(str.replace(/%%/g, \"%\"));\n        }\n        else {\n            strParts.push(str.substring(strIdx).replace(/%%/g, \"%\"));\n            return createPrinter(cont, strParts, matches);\n        }\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (_, idx, padLength, format, precision, pattern) => {\n        let rep = args[idx];\n        if (isNumeric(rep)) {\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"p\":\n                case \"P\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(multiply(rep, 100), precision) + \" %\";\n                    break;\n                case \"d\":\n                case \"D\":\n                    rep = precision != null ? padLeft(String(rep), precision, \"0\") : String(rep);\n                    break;\n                case \"x\":\n                case \"X\":\n                    rep = precision != null ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n                    if (format === \"X\") {\n                        rep = rep.toUpperCase();\n                    }\n                    break;\n                default:\n                    if (pattern) {\n                        let sign = \"\";\n                        rep = pattern.replace(/(0+)(\\.0+)?/, (_, intPart, decimalPart) => {\n                            if (isLessThan(rep, 0)) {\n                                rep = multiply(rep, -1);\n                                sign = \"-\";\n                            }\n                            rep = toFixed(rep, decimalPart != null ? decimalPart.length - 1 : 0);\n                            return padLeft(rep, (intPart || \"\").length - sign.length + (decimalPart != null ? decimalPart.length : 0), \"0\");\n                        });\n                        rep = sign + rep;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern || format);\n        }\n        else {\n            rep = toString(rep);\n        }\n        padLength = parseInt((padLength || \" \").substring(1), 10);\n        if (!isNaN(padLength)) {\n            rep = padLeft(String(rep), Math.abs(padLength), \" \", padLength < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function concat(...xs) {\n    return xs.map((x) => String(x)).join(\"\");\n}\nexport function join(delimiter, xs) {\n    if (Array.isArray(xs)) {\n        return xs.join(delimiter);\n    }\n    else {\n        return Array.from(xs).join(delimiter);\n    }\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return xs.slice(startIndex, endIndexPlusOne).join(delimiter);\n}\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, removeEmpty) {\n    count = typeof count === \"number\" ? count : undefined;\n    removeEmpty = typeof removeEmpty === \"number\" ? removeEmpty : undefined;\n    if (count && count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    if (!Array.isArray(splitters)) {\n        if (removeEmpty === 0) {\n            return str.split(splitters, count);\n        }\n        const len = arguments.length;\n        splitters = Array(len - 1);\n        for (let key = 1; key < len; key++) {\n            splitters[key - 1] = arguments[key];\n        }\n    }\n    splitters = splitters.filter((x) => x).map((x) => escape(x));\n    splitters = splitters.length > 0 ? splitters : [\"\\\\s\"];\n    let i = 0;\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    while (count == null || count > 1) {\n        const m = reg.exec(str);\n        if (m === null) {\n            break;\n        }\n        if (!removeEmpty || (m.index - i) > 0) {\n            count = count != null ? count - 1 : count;\n            splits.push(str.substring(i, m.index));\n        }\n        i = reg.lastIndex;\n    }\n    if (!removeEmpty || (str.length - i) > 0) {\n        splits.push(str.substring(i));\n    }\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter((c) => pred(c)).join(\"\");\n}\nexport function substring(str, startIndex, length) {\n    if ((startIndex + (length || 0) > str.length)) {\n        throw new Error(\"Invalid startIndex and/or length\");\n    }\n    return length != null ? str.substr(startIndex, length) : str.substr(startIndex);\n}\nexport function fmt(strs, ...args) {\n    return ({ strs, args });\n}\nexport function fmtWith(fmts) {\n    return (strs, ...args) => ({ strs, args, fmts });\n}\nexport function getFormat(s) {\n    return s.fmts\n        ? s.strs.reduce((acc, newPart, index) => acc + `{${String(index - 1) + s.fmts[index - 1]}}` + newPart)\n        : s.strs.reduce((acc, newPart, index) => acc + `{${index - 1}}` + newPart);\n}\n","import { compare, equals, structuralHash } from \"./Util.js\";\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    toJSON() {\n        return this.value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return String(this.value);\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        if (other == null) {\n            return false;\n        }\n        else {\n            return equals(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n    CompareTo(other) {\n        if (other == null) {\n            return 1;\n        }\n        else {\n            return compare(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n}\nexport function some(x) {\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x) {\n    if (x == null) {\n        throw new Error(\"Option has no value\");\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function ofNullable(x) {\n    // This will fail with unit probably, an alternative would be:\n    // return x === null ? undefined : (x === undefined ? new Some(x) : x);\n    return x == null ? undefined : x;\n}\nexport function toNullable(x) {\n    return x == null ? null : value(x);\n}\nexport function flatten(x) {\n    return x == null ? undefined : value(x);\n}\nexport function toArray(opt) {\n    return (opt == null) ? [] : [value(opt)];\n}\nexport function defaultArg(opt, defaultValue) {\n    return (opt != null) ? value(opt) : defaultValue;\n}\nexport function defaultArgWith(opt, defThunk) {\n    return (opt != null) ? value(opt) : defThunk();\n}\nexport function filter(predicate, opt) {\n    return (opt != null) ? (predicate(value(opt)) ? opt : undefined) : opt;\n}\nexport function map(mapping, opt) {\n    return (opt != null) ? some(mapping(value(opt))) : undefined;\n}\nexport function map2(mapping, opt1, opt2) {\n    return (opt1 != null && opt2 != null) ? mapping(value(opt1), value(opt2)) : undefined;\n}\nexport function map3(mapping, opt1, opt2, opt3) {\n    return (opt1 != null && opt2 != null && opt3 != null) ? mapping(value(opt1), value(opt2), value(opt3)) : undefined;\n}\nexport function bind(binder, opt) {\n    return opt != null ? binder(value(opt)) : undefined;\n}\nexport function tryOp(op, arg) {\n    try {\n        return some(op(arg));\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n","import { value as value_2, defaultArg, some } from \"./Option.js\";\r\nimport { min as min_1, compare, getEnumerator, comparePrimitives, max as max_1 } from \"./Util.js\";\r\n\r\nexport function Helpers_allocateArrayFromCons(cons, len) {\r\n    if ((typeof cons) === \"function\") {\r\n        return new cons(len);\r\n    }\r\n    else {\r\n        return new Array(len);\r\n    }\r\n}\r\n\r\nfunction indexNotFound() {\r\n    throw (new Error(\"An index satisfying the predicate was not found in the collection.\"));\r\n}\r\n\r\nfunction differentLengths() {\r\n    throw (new Error(\"Arrays had different lengths\"));\r\n}\r\n\r\nexport function append(array1, array2, cons) {\r\n    const len1 = array1.length | 0;\r\n    const len2 = array2.length | 0;\r\n    const newArray = Helpers_allocateArrayFromCons(cons, len1 + len2);\r\n    for (let i = 0; i <= (len1 - 1); i++) {\r\n        newArray[i] = array1[i];\r\n    }\r\n    for (let i_1 = 0; i_1 <= (len2 - 1); i_1++) {\r\n        newArray[i_1 + len1] = array2[i_1];\r\n    }\r\n    return newArray;\r\n}\r\n\r\nexport function filter(predicate, array) {\r\n    return array.filter(predicate);\r\n}\r\n\r\nexport function fill(target, targetIndex, count, value) {\r\n    const start = targetIndex | 0;\r\n    return target.fill(value, start, (start + count));\r\n}\r\n\r\nexport function getSubArray(array, start, count) {\r\n    const start_1 = start | 0;\r\n    return array.slice(start_1, (start_1 + count));\r\n}\r\n\r\nexport function last(array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    return array[array.length - 1];\r\n}\r\n\r\nexport function tryLast(array) {\r\n    if (array.length === 0) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(array[array.length - 1]);\r\n    }\r\n}\r\n\r\nexport function mapIndexed(f, source, cons) {\r\n    const len = source.length | 0;\r\n    const target = Helpers_allocateArrayFromCons(cons, len);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        target[i] = f(i, source[i]);\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function map(f, source, cons) {\r\n    const len = source.length | 0;\r\n    const target = Helpers_allocateArrayFromCons(cons, len);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        target[i] = f(source[i]);\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function mapIndexed2(f, source1, source2, cons) {\r\n    if (source1.length !== source2.length) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(i, source1[i], source2[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function map2(f, source1, source2, cons) {\r\n    if (source1.length !== source2.length) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(source1[i], source2[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function mapIndexed3(f, source1, source2, source3, cons) {\r\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(i, source1[i], source2[i], source3[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function map3(f, source1, source2, source3, cons) {\r\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(source1[i], source2[i], source3[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function mapFold(mapping, state, array, cons) {\r\n    const matchValue = array.length | 0;\r\n    if (matchValue === 0) {\r\n        return [[], state];\r\n    }\r\n    else {\r\n        let acc = state;\r\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\r\n        for (let i = 0; i <= (array.length - 1); i++) {\r\n            const patternInput = mapping(acc, array[i]);\r\n            res[i] = patternInput[0];\r\n            acc = patternInput[1];\r\n        }\r\n        return [res, acc];\r\n    }\r\n}\r\n\r\nexport function mapFoldBack(mapping, array, state, cons) {\r\n    const matchValue = array.length | 0;\r\n    if (matchValue === 0) {\r\n        return [[], state];\r\n    }\r\n    else {\r\n        let acc = state;\r\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\r\n        for (let i = array.length - 1; i >= 0; i--) {\r\n            const patternInput = mapping(array[i], acc);\r\n            res[i] = patternInput[0];\r\n            acc = patternInput[1];\r\n        }\r\n        return [res, acc];\r\n    }\r\n}\r\n\r\nexport function indexed(source) {\r\n    const len = source.length | 0;\r\n    const target = new Array(len);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        target[i] = [i, source[i]];\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function truncate(count, array) {\r\n    const count_1 = max_1((x, y) => comparePrimitives(x, y), 0, count) | 0;\r\n    const start = 0;\r\n    return array.slice(start, (start + count_1));\r\n}\r\n\r\nexport function concat(arrays, cons) {\r\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\r\n    const matchValue = arrays_1.length | 0;\r\n    switch (matchValue) {\r\n        case 0: {\r\n            return Helpers_allocateArrayFromCons(cons, 0);\r\n        }\r\n        case 1: {\r\n            return arrays_1[0];\r\n        }\r\n        default: {\r\n            let totalIdx = 0;\r\n            let totalLength = 0;\r\n            for (let idx = 0; idx <= (arrays_1.length - 1); idx++) {\r\n                const arr_1 = arrays_1[idx];\r\n                totalLength = ((totalLength + arr_1.length) | 0);\r\n            }\r\n            const result = Helpers_allocateArrayFromCons(cons, totalLength);\r\n            for (let idx_1 = 0; idx_1 <= (arrays_1.length - 1); idx_1++) {\r\n                const arr_2 = arrays_1[idx_1];\r\n                for (let j = 0; j <= (arr_2.length - 1); j++) {\r\n                    result[totalIdx] = arr_2[j];\r\n                    totalIdx = ((totalIdx + 1) | 0);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\nexport function collect(mapping, array, cons) {\r\n    return concat(map(mapping, array, null), cons);\r\n}\r\n\r\nexport function where(predicate, array) {\r\n    return array.filter(predicate);\r\n}\r\n\r\nexport function contains(value, array, eq) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i >= array.length) {\r\n                return false;\r\n            }\r\n            else if (eq.Equals(value, array[i])) {\r\n                return true;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0);\r\n}\r\n\r\nexport function empty(cons) {\r\n    return Helpers_allocateArrayFromCons(cons, 0);\r\n}\r\n\r\nexport function singleton(value, cons) {\r\n    const ar = Helpers_allocateArrayFromCons(cons, 1);\r\n    ar[0] = value;\r\n    return ar;\r\n}\r\n\r\nexport function initialize(count, initializer, cons) {\r\n    if (count < 0) {\r\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, count);\r\n    for (let i = 0; i <= (count - 1); i++) {\r\n        result[i] = initializer(i);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function pairwise(array) {\r\n    if (array.length < 2) {\r\n        return [];\r\n    }\r\n    else {\r\n        const count = (array.length - 1) | 0;\r\n        const result = new Array(count);\r\n        for (let i = 0; i <= (count - 1); i++) {\r\n            result[i] = [array[i], array[i + 1]];\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function replicate(count, initial, cons) {\r\n    if (count < 0) {\r\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, count);\r\n    for (let i = 0; i <= (result.length - 1); i++) {\r\n        result[i] = initial;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function copy(array) {\r\n    return array.slice();\r\n}\r\n\r\nexport function reverse(array) {\r\n    const array_2 = array.slice();\r\n    return array_2.reverse();\r\n}\r\n\r\nexport function scan(folder, state, array, cons) {\r\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\r\n    res[0] = state;\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        res[i + 1] = folder(res[i], array[i]);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function scanBack(folder, array, state, cons) {\r\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\r\n    res[array.length] = state;\r\n    for (let i = array.length - 1; i >= 0; i--) {\r\n        res[i] = folder(array[i], res[i + 1]);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function skip(count, array, cons) {\r\n    if (count > array.length) {\r\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\r\n    }\r\n    if (count === array.length) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const count_1 = ((count < 0) ? 0 : count) | 0;\r\n        return array.slice(count_1);\r\n    }\r\n}\r\n\r\nexport function skipWhile(predicate, array, cons) {\r\n    let count = 0;\r\n    while ((count < array.length) ? predicate(array[count]) : false) {\r\n        count = ((count + 1) | 0);\r\n    }\r\n    if (count === array.length) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const count_1 = count | 0;\r\n        return array.slice(count_1);\r\n    }\r\n}\r\n\r\nexport function take(count, array, cons) {\r\n    if (count < 0) {\r\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\r\n    }\r\n    if (count > array.length) {\r\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\r\n    }\r\n    if (count === 0) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const start = 0;\r\n        return array.slice(start, (start + count));\r\n    }\r\n}\r\n\r\nexport function takeWhile(predicate, array, cons) {\r\n    let count = 0;\r\n    while ((count < array.length) ? predicate(array[count]) : false) {\r\n        count = ((count + 1) | 0);\r\n    }\r\n    if (count === 0) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const start = 0;\r\n        const count_1 = count | 0;\r\n        return array.slice(start, (start + count_1));\r\n    }\r\n}\r\n\r\nexport function addInPlace(x, array) {\r\n    void (array.push(x));\r\n}\r\n\r\nexport function addRangeInPlace(range, array) {\r\n    const enumerator = getEnumerator(range);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            addInPlace(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), array);\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n}\r\n\r\nexport function insertRangeInPlace(index, range, array) {\r\n    let index_1;\r\n    let i = index;\r\n    const enumerator = getEnumerator(range);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            void ((index_1 = (i | 0), array.splice(index_1, 0, x)));\r\n            i = ((i + 1) | 0);\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n}\r\n\r\nexport function removeInPlace(item_1, array) {\r\n    const i = array.indexOf(item_1, 0);\r\n    if (i > -1) {\r\n        void (array.splice(i, 1));\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function removeAllInPlace(predicate, array) {\r\n    const countRemoveAll = (count) => {\r\n        const i = array.findIndex(predicate);\r\n        if (i > -1) {\r\n            void (array.splice(i, 1));\r\n            return (countRemoveAll(count) + 1) | 0;\r\n        }\r\n        else {\r\n            return count | 0;\r\n        }\r\n    };\r\n    return countRemoveAll(0) | 0;\r\n}\r\n\r\nexport function copyTo(source, sourceIndex, target, targetIndex, count) {\r\n    const diff = (targetIndex - sourceIndex) | 0;\r\n    for (let i = sourceIndex; i <= ((sourceIndex + count) - 1); i++) {\r\n        target[i + diff] = source[i];\r\n    }\r\n}\r\n\r\nexport function copyToTypedArray(source, sourceIndex, target, targetIndex, count) {\r\n    try {\r\n        target.set(source.subarray(sourceIndex, sourceIndex + count), targetIndex);\r\n    }\r\n    catch (matchValue) {\r\n        copyTo(source, sourceIndex, target, targetIndex, count);\r\n    }\r\n}\r\n\r\nexport function indexOf(array, item_1, start, count) {\r\n    const start_1 = defaultArg(start, 0) | 0;\r\n    const i = array.indexOf(item_1, start_1);\r\n    if ((count != null) ? (i >= (start_1 + value_2(count))) : false) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return i | 0;\r\n    }\r\n}\r\n\r\nexport function partition(f, source, cons) {\r\n    const len = source.length | 0;\r\n    const res1 = Helpers_allocateArrayFromCons(cons, len);\r\n    const res2 = Helpers_allocateArrayFromCons(cons, len);\r\n    let iTrue = 0;\r\n    let iFalse = 0;\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        if (f(source[i])) {\r\n            res1[iTrue] = source[i];\r\n            iTrue = ((iTrue + 1) | 0);\r\n        }\r\n        else {\r\n            res2[iFalse] = source[i];\r\n            iFalse = ((iFalse + 1) | 0);\r\n        }\r\n    }\r\n    return [truncate(iTrue, res1), truncate(iFalse, res2)];\r\n}\r\n\r\nexport function find(predicate, array) {\r\n    const matchValue = array.find(predicate);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_2(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFind(predicate, array) {\r\n    return array.find(predicate);\r\n}\r\n\r\nexport function findIndex(predicate, array) {\r\n    const matchValue = array.findIndex(predicate);\r\n    if (matchValue > -1) {\r\n        return matchValue | 0;\r\n    }\r\n    else {\r\n        return indexNotFound() | 0;\r\n    }\r\n}\r\n\r\nexport function tryFindIndex(predicate, array) {\r\n    const matchValue = array.findIndex(predicate);\r\n    if (matchValue > -1) {\r\n        return matchValue;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function pick(chooser, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i >= array.length) {\r\n                return indexNotFound();\r\n            }\r\n            else {\r\n                const matchValue = chooser(array[i]);\r\n                if (matchValue != null) {\r\n                    return value_2(matchValue);\r\n                }\r\n                else {\r\n                    i_mut = (i + 1);\r\n                    continue loop;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0);\r\n}\r\n\r\nexport function tryPick(chooser, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i >= array.length) {\r\n                return void 0;\r\n            }\r\n            else {\r\n                const matchValue = chooser(array[i]);\r\n                if (matchValue == null) {\r\n                    i_mut = (i + 1);\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return matchValue;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0);\r\n}\r\n\r\nexport function findBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return indexNotFound();\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return array[i];\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1);\r\n}\r\n\r\nexport function tryFindBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return void 0;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return some(array[i]);\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1);\r\n}\r\n\r\nexport function findLastIndex(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return -1;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return i | 0;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1) | 0;\r\n}\r\n\r\nexport function findIndexBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return indexNotFound() | 0;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return i | 0;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1) | 0;\r\n}\r\n\r\nexport function tryFindIndexBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return void 0;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return i;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1);\r\n}\r\n\r\nexport function choose(chooser, array, cons) {\r\n    const res = [];\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        const matchValue = chooser(array[i]);\r\n        if (matchValue != null) {\r\n            const y = value_2(matchValue);\r\n            void (res.push(y));\r\n        }\r\n    }\r\n    if ((typeof cons) === \"function\") {\r\n        return map((x) => x, res, cons);\r\n    }\r\n    else {\r\n        return res;\r\n    }\r\n}\r\n\r\nexport function foldIndexed(folder, state, array) {\r\n    return array.reduce(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg0, delegateArg1)), state);\r\n}\r\n\r\nexport function fold(folder, state, array) {\r\n    return array.reduce(((delegateArg0, delegateArg1) => folder(delegateArg0, delegateArg1)), state);\r\n}\r\n\r\nexport function iterate(action, array) {\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        action(array[i]);\r\n    }\r\n}\r\n\r\nexport function iterateIndexed(action, array) {\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        action(i, array[i]);\r\n    }\r\n}\r\n\r\nexport function iterate2(action, array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        action(array1[i], array2[i]);\r\n    }\r\n}\r\n\r\nexport function iterateIndexed2(action, array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        action(i, array1[i], array2[i]);\r\n    }\r\n}\r\n\r\nexport function isEmpty(array) {\r\n    return array.length === 0;\r\n}\r\n\r\nexport function forAll(predicate, array) {\r\n    return array.every(predicate);\r\n}\r\n\r\nexport function permute(f, array) {\r\n    const size = array.length | 0;\r\n    const res = array.slice();\r\n    const checkFlags = new Array(size);\r\n    iterateIndexed((i, x) => {\r\n        const j = f(i) | 0;\r\n        if ((j < 0) ? true : (j >= size)) {\r\n            throw (new Error(\"Not a valid permutation\"));\r\n        }\r\n        res[j] = x;\r\n        checkFlags[j] = 1;\r\n    }, array);\r\n    if (!(checkFlags.every(((y) => (1 === y))))) {\r\n        throw (new Error(\"Not a valid permutation\"));\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function setSlice(target, lower, upper, source) {\r\n    const lower_1 = defaultArg(lower, 0) | 0;\r\n    const upper_1 = defaultArg(upper, 0) | 0;\r\n    const length = (((upper_1 > 0) ? upper_1 : (target.length - 1)) - lower_1) | 0;\r\n    for (let i = 0; i <= length; i++) {\r\n        target[i + lower_1] = source[i];\r\n    }\r\n}\r\n\r\nexport function sortInPlaceBy(projection, xs, comparer) {\r\n    xs.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\r\n}\r\n\r\nexport function sortInPlace(xs, comparer) {\r\n    xs.sort(((x, y) => comparer.Compare(x, y)));\r\n}\r\n\r\nexport function sort(xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort(((x, y) => comparer.Compare(x, y)));\r\n    return xs_1;\r\n}\r\n\r\nexport function sortBy(projection, xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\r\n    return xs_1;\r\n}\r\n\r\nexport function sortDescending(xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort(((x, y) => (comparer.Compare(x, y) * -1)));\r\n    return xs_1;\r\n}\r\n\r\nexport function sortByDescending(projection, xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort(((x, y) => (comparer.Compare(projection(x), projection(y)) * -1)));\r\n    return xs_1;\r\n}\r\n\r\nexport function sortWith(comparer, xs) {\r\n    const comparer_1 = comparer;\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort(comparer_1);\r\n    return xs_1;\r\n}\r\n\r\nexport function allPairs(xs, ys) {\r\n    const len1 = xs.length | 0;\r\n    const len2 = ys.length | 0;\r\n    const res = new Array((len1 * len2));\r\n    for (let i = 0; i <= (xs.length - 1); i++) {\r\n        for (let j = 0; j <= (ys.length - 1); j++) {\r\n            res[(i * len2) + j] = [xs[i], ys[j]];\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function unfold(generator, state) {\r\n    const res = [];\r\n    const loop = (state_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const state_1 = state_1_mut;\r\n            const matchValue = generator(state_1);\r\n            if (matchValue != null) {\r\n                const x = matchValue[0];\r\n                const s = matchValue[1];\r\n                void (res.push(x));\r\n                state_1_mut = s;\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    loop(state);\r\n    return res;\r\n}\r\n\r\nexport function unzip(array) {\r\n    const len = array.length | 0;\r\n    const res1 = new Array(len);\r\n    const res2 = new Array(len);\r\n    iterateIndexed((i, tupledArg) => {\r\n        res1[i] = tupledArg[0];\r\n        res2[i] = tupledArg[1];\r\n    }, array);\r\n    return [res1, res2];\r\n}\r\n\r\nexport function unzip3(array) {\r\n    const len = array.length | 0;\r\n    const res1 = new Array(len);\r\n    const res2 = new Array(len);\r\n    const res3 = new Array(len);\r\n    iterateIndexed((i, tupledArg) => {\r\n        res1[i] = tupledArg[0];\r\n        res2[i] = tupledArg[1];\r\n        res3[i] = tupledArg[2];\r\n    }, array);\r\n    return [res1, res2, res3];\r\n}\r\n\r\nexport function zip(array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    const result = new Array(array1.length);\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        result[i] = [array1[i], array2[i]];\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function zip3(array1, array2, array3) {\r\n    if ((array1.length !== array2.length) ? true : (array2.length !== array3.length)) {\r\n        differentLengths();\r\n    }\r\n    const result = new Array(array1.length);\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        result[i] = [array1[i], array2[i], array3[i]];\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function chunkBySize(chunkSize, array) {\r\n    if (chunkSize < 1) {\r\n        throw (new Error(\"The input must be positive.\\\\nParameter name: size\"));\r\n    }\r\n    if (array.length === 0) {\r\n        return [[]];\r\n    }\r\n    else {\r\n        const result = [];\r\n        for (let x = 0; x <= ((~(~Math.ceil(array.length / chunkSize))) - 1); x++) {\r\n            let slice;\r\n            const start_1 = (x * chunkSize) | 0;\r\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\r\n            void (result.push(slice));\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function splitAt(index, array) {\r\n    let start;\r\n    if (index < 0) {\r\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: index\"));\r\n    }\r\n    if (index > array.length) {\r\n        throw (new Error(\"The input sequence has an insufficient number of elements.\\\\nParameter name: index\"));\r\n    }\r\n    return [(start = 0, array.slice(start, (start + index))), array.slice(index)];\r\n}\r\n\r\nexport function compareWith(comparer, array1, array2) {\r\n    if (array1 == null) {\r\n        if (array2 == null) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    }\r\n    else if (array2 == null) {\r\n        return 1;\r\n    }\r\n    else {\r\n        let i = 0;\r\n        let result = 0;\r\n        const length1 = array1.length | 0;\r\n        const length2 = array2.length | 0;\r\n        if (length1 > length2) {\r\n            return 1;\r\n        }\r\n        else if (length1 < length2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            while ((i < length1) ? (result === 0) : false) {\r\n                result = (comparer(array1[i], array2[i]) | 0);\r\n                i = ((i + 1) | 0);\r\n            }\r\n            return result | 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function equalsWith(comparer, array1, array2) {\r\n    return compareWith((e1, e2) => compare(e1, e2), array1, array2) === 0;\r\n}\r\n\r\nexport function exactlyOne(array) {\r\n    if (array.length === 1) {\r\n        return array[0];\r\n    }\r\n    else if (array.length === 0) {\r\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: array\"));\r\n    }\r\n    else {\r\n        throw (new Error(\"Input array too long\\\\nParameter name: array\"));\r\n    }\r\n}\r\n\r\nexport function tryExactlyOne(array) {\r\n    if (array.length === 1) {\r\n        return some(array[0]);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function head(array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    else {\r\n        return array[0];\r\n    }\r\n}\r\n\r\nexport function tryHead(array) {\r\n    if (array.length === 0) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(array[0]);\r\n    }\r\n}\r\n\r\nexport function tail(array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"Not enough elements\\\\nParameter name: array\"));\r\n    }\r\n    return array.slice(1);\r\n}\r\n\r\nexport function item(index, array) {\r\n    return array[index];\r\n}\r\n\r\nexport function tryItem(index, array) {\r\n    if ((index < 0) ? true : (index >= array.length)) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(array[index]);\r\n    }\r\n}\r\n\r\nexport function foldBackIndexed(folder, array, state) {\r\n    return array.reduceRight(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg1, delegateArg0)), state);\r\n}\r\n\r\nexport function foldBack(folder, array, state) {\r\n    return array.reduceRight(((delegateArg0, delegateArg1) => folder(delegateArg1, delegateArg0)), state);\r\n}\r\n\r\nexport function foldIndexed2(folder, state, array1, array2) {\r\n    let acc = state;\r\n    if (array1.length !== array2.length) {\r\n        throw (new Error(\"Arrays have different lengths\"));\r\n    }\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        acc = folder(i, acc, array1[i], array2[i]);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function fold2(folder, state, array1, array2) {\r\n    return foldIndexed2((_arg1, acc, x, y) => folder(acc, x, y), state, array1, array2);\r\n}\r\n\r\nexport function foldBackIndexed2(folder, array1, array2, state) {\r\n    let acc = state;\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    const size = array1.length | 0;\r\n    for (let i = 1; i <= size; i++) {\r\n        acc = folder(i - 1, array1[size - i], array2[size - i], acc);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function foldBack2(f, array1, array2, state) {\r\n    return foldBackIndexed2((_arg1, x, y, acc) => f(x, y, acc), array1, array2, state);\r\n}\r\n\r\nexport function reduce(reduction, array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\"));\r\n    }\r\n    const reduction_1 = reduction;\r\n    return array.reduce(reduction_1);\r\n}\r\n\r\nexport function reduceBack(reduction, array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\"));\r\n    }\r\n    const reduction_1 = reduction;\r\n    return array.reduceRight(reduction_1);\r\n}\r\n\r\nexport function forAll2(predicate, array1, array2) {\r\n    return fold2((acc, x, y) => (acc ? predicate(x, y) : false), true, array1, array2);\r\n}\r\n\r\nexport function existsOffset(predicate_mut, array_mut, index_mut) {\r\n    existsOffset:\r\n    while (true) {\r\n        const predicate = predicate_mut, array = array_mut, index = index_mut;\r\n        if (index === array.length) {\r\n            return false;\r\n        }\r\n        else if (predicate(array[index])) {\r\n            return true;\r\n        }\r\n        else {\r\n            predicate_mut = predicate;\r\n            array_mut = array;\r\n            index_mut = (index + 1);\r\n            continue existsOffset;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function exists(predicate, array) {\r\n    return existsOffset(predicate, array, 0);\r\n}\r\n\r\nexport function existsOffset2(predicate_mut, array1_mut, array2_mut, index_mut) {\r\n    existsOffset2:\r\n    while (true) {\r\n        const predicate = predicate_mut, array1 = array1_mut, array2 = array2_mut, index = index_mut;\r\n        if (index === array1.length) {\r\n            return false;\r\n        }\r\n        else if (predicate(array1[index], array2[index])) {\r\n            return true;\r\n        }\r\n        else {\r\n            predicate_mut = predicate;\r\n            array1_mut = array1;\r\n            array2_mut = array2;\r\n            index_mut = (index + 1);\r\n            continue existsOffset2;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function exists2(predicate, array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    return existsOffset2(predicate, array1, array2, 0);\r\n}\r\n\r\nexport function sum(array, adder) {\r\n    let acc = adder.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        acc = adder.Add(acc, array[i]);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function sumBy(projection, array, adder) {\r\n    let acc = adder.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        acc = adder.Add(acc, projection(array[i]));\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function maxBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function max(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function minBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function min(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function average(array, averager) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    let total = averager.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        total = averager.Add(total, array[i]);\r\n    }\r\n    return averager.DivideByInt(total, array.length);\r\n}\r\n\r\nexport function averageBy(projection, array, averager) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    let total = averager.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        total = averager.Add(total, projection(array[i]));\r\n    }\r\n    return averager.DivideByInt(total, array.length);\r\n}\r\n\r\nexport function windowed(windowSize, source) {\r\n    if (windowSize <= 0) {\r\n        throw (new Error(\"windowSize must be positive\"));\r\n    }\r\n    let res;\r\n    const len = max_1((x, y) => comparePrimitives(x, y), 0, source.length - windowSize) | 0;\r\n    res = (new Array(len));\r\n    for (let i = windowSize; i <= source.length; i++) {\r\n        res[i - windowSize] = source.slice(i - windowSize, (i - 1) + 1);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function splitInto(chunks, array) {\r\n    if (chunks < 1) {\r\n        throw (new Error(\"The input must be positive.\\\\nParameter name: chunks\"));\r\n    }\r\n    if (array.length === 0) {\r\n        return [[]];\r\n    }\r\n    else {\r\n        const result = [];\r\n        const chunks_1 = min_1((x, y) => comparePrimitives(x, y), chunks, array.length) | 0;\r\n        const minChunkSize = (~(~(array.length / chunks_1))) | 0;\r\n        const chunksWithExtraItem = (array.length % chunks_1) | 0;\r\n        for (let i = 0; i <= (chunks_1 - 1); i++) {\r\n            const chunkSize = ((i < chunksWithExtraItem) ? (minChunkSize + 1) : minChunkSize) | 0;\r\n            let slice;\r\n            const start_1 = ((i * minChunkSize) + min_1((x_1, y_1) => comparePrimitives(x_1, y_1), chunksWithExtraItem, i)) | 0;\r\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\r\n            void (result.push(slice));\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function transpose(arrays, cons) {\r\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\r\n    const len = arrays_1.length | 0;\r\n    if (len === 0) {\r\n        return new Array(0);\r\n    }\r\n    else {\r\n        const lenInner = arrays_1[0].length | 0;\r\n        if (!forAll((a) => (a.length === lenInner), arrays_1)) {\r\n            differentLengths();\r\n        }\r\n        const result = new Array(lenInner);\r\n        for (let i = 0; i <= (lenInner - 1); i++) {\r\n            result[i] = Helpers_allocateArrayFromCons(cons, len);\r\n            for (let j = 0; j <= (len - 1); j++) {\r\n                result[i][j] = arrays_1[j][i];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n","import { join } from \"./String.js\";\r\nimport { uncurry, isArrayLike, getEnumerator, toIterator, compare, structuralHash, equals } from \"./Util.js\";\r\nimport { Record } from \"./Types.js\";\r\nimport { class_type, record_type, option_type } from \"./Reflection.js\";\r\nimport { defaultArg, value as value_1, some } from \"./Option.js\";\r\nimport { transpose as transpose_1, splitInto as splitInto_1, windowed as windowed_1, pairwise as pairwise_1, chunkBySize as chunkBySize_1, map as map_1, permute as permute_1, tryFindIndexBack as tryFindIndexBack_1, tryFindBack as tryFindBack_1, scanBack as scanBack_1, foldBack2 as foldBack2_1, foldBack as foldBack_1, fill } from \"./Array.js\";\r\n\r\nexport const SR_indexOutOfBounds = \"The index was outside the range of elements in the list.\";\r\n\r\nexport const SR_inputListWasEmpty = \"List was empty\";\r\n\r\nexport const SR_inputMustBeNonNegative = \"The input must be non-negative.\";\r\n\r\nexport const SR_inputSequenceEmpty = \"The input sequence was empty.\";\r\n\r\nexport const SR_inputSequenceTooLong = \"The input sequence contains more than one element.\";\r\n\r\nexport const SR_keyNotFoundAlt = \"An index satisfying the predicate was not found in the collection.\";\r\n\r\nexport const SR_listsHadDifferentLengths = \"The lists had different lengths.\";\r\n\r\nexport const SR_notEnoughElements = \"The input sequence has an insufficient number of elements.\";\r\n\r\nexport class FSharpList extends Record {\r\n    constructor(head, tail) {\r\n        super();\r\n        this.head = head;\r\n        this.tail = tail;\r\n    }\r\n    toString() {\r\n        const xs = this;\r\n        return (\"[\" + join(\"; \", xs)) + \"]\";\r\n    }\r\n    Equals(other) {\r\n        const xs = this;\r\n        if (xs === other) {\r\n            return true;\r\n        }\r\n        else {\r\n            const loop = (xs_1_mut, ys_1_mut) => {\r\n                loop:\r\n                while (true) {\r\n                    const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n                    const matchValue = [xs_1.tail, ys_1.tail];\r\n                    if (matchValue[0] != null) {\r\n                        if (matchValue[1] != null) {\r\n                            const xt = matchValue[0];\r\n                            const yt = matchValue[1];\r\n                            if (equals(xs_1.head, ys_1.head)) {\r\n                                xs_1_mut = xt;\r\n                                ys_1_mut = yt;\r\n                                continue loop;\r\n                            }\r\n                            else {\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    else if (matchValue[1] != null) {\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        return true;\r\n                    }\r\n                    break;\r\n                }\r\n            };\r\n            return loop(xs, other);\r\n        }\r\n    }\r\n    GetHashCode() {\r\n        const xs = this;\r\n        const loop = (i_mut, h_mut, xs_1_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const i = i_mut, h = h_mut, xs_1 = xs_1_mut;\r\n                const matchValue = xs_1.tail;\r\n                if (matchValue != null) {\r\n                    const t = matchValue;\r\n                    if (i > 18) {\r\n                        return h | 0;\r\n                    }\r\n                    else {\r\n                        i_mut = (i + 1);\r\n                        h_mut = (((h << 1) + structuralHash(xs_1.head)) + (631 * i));\r\n                        xs_1_mut = t;\r\n                        continue loop;\r\n                    }\r\n                }\r\n                else {\r\n                    return h | 0;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(0, 0, xs) | 0;\r\n    }\r\n    toJSON(_key) {\r\n        const this$ = this;\r\n        return Array.from(this$);\r\n    }\r\n    CompareTo(other) {\r\n        const xs = this;\r\n        const loop = (xs_1_mut, ys_1_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n                const matchValue = [xs_1.tail, ys_1.tail];\r\n                if (matchValue[0] != null) {\r\n                    if (matchValue[1] != null) {\r\n                        const xt = matchValue[0];\r\n                        const yt = matchValue[1];\r\n                        const c = compare(xs_1.head, ys_1.head) | 0;\r\n                        if (c === 0) {\r\n                            xs_1_mut = xt;\r\n                            ys_1_mut = yt;\r\n                            continue loop;\r\n                        }\r\n                        else {\r\n                            return c | 0;\r\n                        }\r\n                    }\r\n                    else {\r\n                        return 1;\r\n                    }\r\n                }\r\n                else if (matchValue[1] != null) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(xs, other) | 0;\r\n    }\r\n    GetEnumerator() {\r\n        const xs = this;\r\n        return ListEnumerator$1_$ctor_3002E699(xs);\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const xs = this;\r\n        return getEnumerator(xs);\r\n    }\r\n}\r\n\r\nexport function FSharpList$reflection(gen0) {\r\n    return record_type(\"ListModule.FSharpList\", [gen0], FSharpList, () => [[\"head\", gen0], [\"tail\", option_type(FSharpList$reflection(gen0))]]);\r\n}\r\n\r\nexport class ListEnumerator$1 {\r\n    constructor(xs) {\r\n        this.xs = xs;\r\n        this.it = this.xs;\r\n        this.current = null;\r\n    }\r\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current;\r\n    }\r\n    [\"System.Collections.IEnumerator.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current;\r\n    }\r\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\r\n        const __ = this;\r\n        const matchValue = __.it.tail;\r\n        if (matchValue != null) {\r\n            const t = matchValue;\r\n            __.current = __.it.head;\r\n            __.it = t;\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    [\"System.Collections.IEnumerator.Reset\"]() {\r\n        const __ = this;\r\n        __.it = __.xs;\r\n        __.current = null;\r\n    }\r\n    Dispose() {\r\n    }\r\n}\r\n\r\nexport function ListEnumerator$1$reflection(gen0) {\r\n    return class_type(\"ListModule.ListEnumerator`1\", [gen0], ListEnumerator$1);\r\n}\r\n\r\nexport function ListEnumerator$1_$ctor_3002E699(xs) {\r\n    return new ListEnumerator$1(xs);\r\n}\r\n\r\nexport function FSharpList_get_Empty() {\r\n    return new FSharpList(null, void 0);\r\n}\r\n\r\nexport function FSharpList_Cons_305B8EAC(x, xs) {\r\n    return new FSharpList(x, xs);\r\n}\r\n\r\nexport function FSharpList__get_IsEmpty(xs) {\r\n    return xs.tail == null;\r\n}\r\n\r\nexport function FSharpList__get_Length(xs) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            const matchValue = xs_1.tail;\r\n            if (matchValue != null) {\r\n                i_mut = (i + 1);\r\n                xs_1_mut = matchValue;\r\n                continue loop;\r\n            }\r\n            else {\r\n                return i | 0;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs) | 0;\r\n}\r\n\r\nexport function FSharpList__get_Head(xs) {\r\n    const matchValue = xs.tail;\r\n    if (matchValue != null) {\r\n        return xs.head;\r\n    }\r\n    else {\r\n        throw (new Error((SR_inputListWasEmpty + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n}\r\n\r\nexport function FSharpList__get_Tail(xs) {\r\n    const matchValue = xs.tail;\r\n    if (matchValue != null) {\r\n        return matchValue;\r\n    }\r\n    else {\r\n        throw (new Error((SR_inputListWasEmpty + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n}\r\n\r\nexport function FSharpList__get_Item_Z524259A4(xs, index) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            const matchValue = xs_1.tail;\r\n            if (matchValue != null) {\r\n                if (i === index) {\r\n                    return xs_1.head;\r\n                }\r\n                else {\r\n                    i_mut = (i + 1);\r\n                    xs_1_mut = matchValue;\r\n                    continue loop;\r\n                }\r\n            }\r\n            else {\r\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs);\r\n}\r\n\r\nexport function empty() {\r\n    return FSharpList_get_Empty();\r\n}\r\n\r\nexport function cons(x, xs) {\r\n    return FSharpList_Cons_305B8EAC(x, xs);\r\n}\r\n\r\nexport function singleton(x) {\r\n    return FSharpList_Cons_305B8EAC(x, FSharpList_get_Empty());\r\n}\r\n\r\nexport function isEmpty(xs) {\r\n    return FSharpList__get_IsEmpty(xs);\r\n}\r\n\r\nexport function length(xs) {\r\n    return FSharpList__get_Length(xs);\r\n}\r\n\r\nexport function head(xs) {\r\n    return FSharpList__get_Head(xs);\r\n}\r\n\r\nexport function tryHead(xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(FSharpList__get_Head(xs));\r\n    }\r\n}\r\n\r\nexport function tail(xs) {\r\n    return FSharpList__get_Tail(xs);\r\n}\r\n\r\nexport function tryLast(xs_mut) {\r\n    tryLast:\r\n    while (true) {\r\n        const xs = xs_mut;\r\n        if (FSharpList__get_IsEmpty(xs)) {\r\n            return void 0;\r\n        }\r\n        else {\r\n            const t = FSharpList__get_Tail(xs);\r\n            if (FSharpList__get_IsEmpty(t)) {\r\n                return some(FSharpList__get_Head(xs));\r\n            }\r\n            else {\r\n                xs_mut = t;\r\n                continue tryLast;\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function last(xs) {\r\n    const matchValue = tryLast(xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_inputListWasEmpty));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function compareWith(comparer, xs, ys) {\r\n    const loop = (xs_1_mut, ys_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n            const matchValue = [FSharpList__get_IsEmpty(xs_1), FSharpList__get_IsEmpty(ys_1)];\r\n            if (matchValue[0]) {\r\n                if (matchValue[1]) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return -1;\r\n                }\r\n            }\r\n            else if (matchValue[1]) {\r\n                return 1;\r\n            }\r\n            else {\r\n                const c = comparer(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)) | 0;\r\n                if (c === 0) {\r\n                    xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                    ys_1_mut = FSharpList__get_Tail(ys_1);\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return c | 0;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(xs, ys) | 0;\r\n}\r\n\r\nexport function toArray(xs) {\r\n    const len = FSharpList__get_Length(xs) | 0;\r\n    const res = fill(new Array(len), 0, len, null);\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            if (!FSharpList__get_IsEmpty(xs_1)) {\r\n                res[i] = FSharpList__get_Head(xs_1);\r\n                i_mut = (i + 1);\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    loop(0, xs);\r\n    return res;\r\n}\r\n\r\nexport function fold(folder, state, xs) {\r\n    let acc = state;\r\n    let xs_1 = xs;\r\n    while (!FSharpList__get_IsEmpty(xs_1)) {\r\n        acc = folder(acc, FSharpList__get_Head(xs_1));\r\n        xs_1 = FSharpList__get_Tail(xs_1);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function reverse(xs) {\r\n    return fold((acc, x) => FSharpList_Cons_305B8EAC(x, acc), FSharpList_get_Empty(), xs);\r\n}\r\n\r\nexport function foldBack(folder, xs, state) {\r\n    return foldBack_1(folder, toArray(xs), state);\r\n}\r\n\r\nexport function foldIndexed(folder, state, xs) {\r\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                acc_mut = folder(i, acc, FSharpList__get_Head(xs_1));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, state, xs);\r\n}\r\n\r\nexport function fold2(folder, state, xs, ys) {\r\n    let acc = state;\r\n    let xs_1 = xs;\r\n    let ys_1 = ys;\r\n    while ((!FSharpList__get_IsEmpty(xs_1)) ? (!FSharpList__get_IsEmpty(ys_1)) : false) {\r\n        acc = folder(acc, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1));\r\n        xs_1 = FSharpList__get_Tail(xs_1);\r\n        ys_1 = FSharpList__get_Tail(ys_1);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function foldBack2(folder, xs, ys, state) {\r\n    return foldBack2_1(folder, toArray(xs), toArray(ys), state);\r\n}\r\n\r\nexport function unfold(gen, state) {\r\n    const loop = (acc_mut, node_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const acc = acc_mut, node = node_mut;\r\n            const matchValue = gen(acc);\r\n            if (matchValue != null) {\r\n                acc_mut = matchValue[1];\r\n                node_mut = ((t = (new FSharpList(matchValue[0], void 0)), (node.tail = t, t)));\r\n                continue loop;\r\n            }\r\n            else {\r\n                return node;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node_1 = loop(state, root);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node_1.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function iterate(action, xs) {\r\n    fold((unitVar0, x) => {\r\n        action(x);\r\n    }, void 0, xs);\r\n}\r\n\r\nexport function iterate2(action, xs, ys) {\r\n    fold2((unitVar0, x, y) => {\r\n        action(x, y);\r\n    }, void 0, xs, ys);\r\n}\r\n\r\nexport function iterateIndexed(action, xs) {\r\n    void fold((i, x) => {\r\n        action(i, x);\r\n        return (i + 1) | 0;\r\n    }, 0, xs);\r\n}\r\n\r\nexport function iterateIndexed2(action, xs, ys) {\r\n    void fold2((i, x, y) => {\r\n        action(i, x, y);\r\n        return (i + 1) | 0;\r\n    }, 0, xs, ys);\r\n}\r\n\r\nexport function toSeq(xs) {\r\n    return xs;\r\n}\r\n\r\nexport function ofArrayWithTail(xs, tail_1) {\r\n    let res = tail_1;\r\n    for (let i = xs.length - 1; i >= 0; i--) {\r\n        res = FSharpList_Cons_305B8EAC(xs[i], res);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function ofArray(xs) {\r\n    return ofArrayWithTail(xs, FSharpList_get_Empty());\r\n}\r\n\r\nexport function ofSeq(xs) {\r\n    let xs_3, t;\r\n    if (isArrayLike(xs)) {\r\n        return ofArray(xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return xs;\r\n    }\r\n    else {\r\n        const root = FSharpList_get_Empty();\r\n        let node = root;\r\n        const enumerator = getEnumerator(xs);\r\n        try {\r\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                node = ((xs_3 = node, (t = (new FSharpList(x, void 0)), (xs_3.tail = t, t))));\r\n            }\r\n        }\r\n        finally {\r\n            enumerator.Dispose();\r\n        }\r\n        const xs_5 = node;\r\n        const t_2 = FSharpList_get_Empty();\r\n        xs_5.tail = t_2;\r\n        return FSharpList__get_Tail(root);\r\n    }\r\n}\r\n\r\nexport function concat(lists) {\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    const action = (xs) => {\r\n        node = fold((acc, x) => {\r\n            const t = new FSharpList(x, void 0);\r\n            acc.tail = t;\r\n            return t;\r\n        }, node, xs);\r\n    };\r\n    if (isArrayLike(lists)) {\r\n        lists.forEach(action);\r\n    }\r\n    else if (lists instanceof FSharpList) {\r\n        iterate(action, lists);\r\n    }\r\n    else {\r\n        const enumerator = getEnumerator(lists);\r\n        try {\r\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                action(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n        }\r\n        finally {\r\n            enumerator.Dispose();\r\n        }\r\n    }\r\n    const xs_6 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_6.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function scan(folder, state, xs) {\r\n    let xs_4, t_2;\r\n    const root = FSharpList_get_Empty();\r\n    let node;\r\n    const t = new FSharpList(state, void 0);\r\n    root.tail = t;\r\n    node = t;\r\n    let acc = state;\r\n    let xs_3 = xs;\r\n    while (!FSharpList__get_IsEmpty(xs_3)) {\r\n        acc = folder(acc, FSharpList__get_Head(xs_3));\r\n        node = ((xs_4 = node, (t_2 = (new FSharpList(acc, void 0)), (xs_4.tail = t_2, t_2))));\r\n        xs_3 = FSharpList__get_Tail(xs_3);\r\n    }\r\n    const xs_6 = node;\r\n    const t_4 = FSharpList_get_Empty();\r\n    xs_6.tail = t_4;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function scanBack(folder, xs, state) {\r\n    return ofArray(scanBack_1(folder, toArray(xs), state));\r\n}\r\n\r\nexport function append(xs, ys) {\r\n    return fold((acc, x) => FSharpList_Cons_305B8EAC(x, acc), ys, reverse(xs));\r\n}\r\n\r\nexport function collect(mapping, xs) {\r\n    let xs_1, t;\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    let ys = xs;\r\n    while (!FSharpList__get_IsEmpty(ys)) {\r\n        let zs = mapping(FSharpList__get_Head(ys));\r\n        while (!FSharpList__get_IsEmpty(zs)) {\r\n            node = ((xs_1 = node, (t = (new FSharpList(FSharpList__get_Head(zs), void 0)), (xs_1.tail = t, t))));\r\n            zs = FSharpList__get_Tail(zs);\r\n        }\r\n        ys = FSharpList__get_Tail(ys);\r\n    }\r\n    const xs_3 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_3.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function mapIndexed(mapping, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = foldIndexed((i, acc, x) => {\r\n        const t = new FSharpList(mapping(i, x), void 0);\r\n        acc.tail = t;\r\n        return t;\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function map(mapping, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold((acc, x) => {\r\n        const t = new FSharpList(mapping(x), void 0);\r\n        acc.tail = t;\r\n        return t;\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function indexed(xs) {\r\n    return mapIndexed((i, x) => [i, x], xs);\r\n}\r\n\r\nexport function map2(mapping, xs, ys) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold2((acc, x, y) => {\r\n        const t = new FSharpList(mapping(x, y), void 0);\r\n        acc.tail = t;\r\n        return t;\r\n    }, root, xs, ys);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function mapIndexed2(mapping, xs, ys) {\r\n    const loop = (i_mut, acc_mut, xs_1_mut, ys_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                acc_mut = ((t = (new FSharpList(mapping(i, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                ys_1_mut = FSharpList__get_Tail(ys_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node_1 = loop(0, root, xs, ys);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node_1.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function map3(mapping, xs, ys, zs) {\r\n    const loop = (acc_mut, xs_1_mut, ys_1_mut, zs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const acc = acc_mut, xs_1 = xs_1_mut, ys_1 = ys_1_mut, zs_1 = zs_1_mut;\r\n            if ((FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) ? true : FSharpList__get_IsEmpty(zs_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                acc_mut = ((t = (new FSharpList(mapping(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1), FSharpList__get_Head(zs_1)), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                ys_1_mut = FSharpList__get_Tail(ys_1);\r\n                zs_1_mut = FSharpList__get_Tail(zs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node_1 = loop(root, xs, ys, zs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node_1.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function mapFold(mapping, state, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const patternInput_1 = fold((tupledArg, x) => {\r\n        let t;\r\n        const patternInput = mapping(tupledArg[1], x);\r\n        return [(t = (new FSharpList(patternInput[0], void 0)), (tupledArg[0].tail = t, t)), patternInput[1]];\r\n    }, [root, state], xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    patternInput_1[0].tail = t_2;\r\n    return [FSharpList__get_Tail(root), patternInput_1[1]];\r\n}\r\n\r\nexport function mapFoldBack(mapping, xs, state) {\r\n    return mapFold((acc, x) => mapping(x, acc), state, reverse(xs));\r\n}\r\n\r\nexport function tryPick(f, xs) {\r\n    const loop = (xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return void 0;\r\n            }\r\n            else {\r\n                const matchValue = f(FSharpList__get_Head(xs_1));\r\n                if (matchValue == null) {\r\n                    xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return matchValue;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(xs);\r\n}\r\n\r\nexport function pick(f, xs) {\r\n    const matchValue = tryPick(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFind(f, xs) {\r\n    return tryPick((x) => (f(x) ? some(x) : (void 0)), xs);\r\n}\r\n\r\nexport function find(f, xs) {\r\n    const matchValue = tryFind(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindBack(f, xs) {\r\n    return tryFindBack_1(f, toArray(xs));\r\n}\r\n\r\nexport function findBack(f, xs) {\r\n    const matchValue = tryFindBack(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindIndex(f, xs) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return void 0;\r\n            }\r\n            else if (f(FSharpList__get_Head(xs_1))) {\r\n                return i;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs);\r\n}\r\n\r\nexport function findIndex(f, xs) {\r\n    const matchValue = tryFindIndex(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function tryFindIndexBack(f, xs) {\r\n    return tryFindIndexBack_1(f, toArray(xs));\r\n}\r\n\r\nexport function findIndexBack(f, xs) {\r\n    const matchValue = tryFindIndexBack(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function tryItem(n, xs) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return void 0;\r\n            }\r\n            else if (i === n) {\r\n                return some(FSharpList__get_Head(xs_1));\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs);\r\n}\r\n\r\nexport function item(n, xs) {\r\n    return FSharpList__get_Item_Z524259A4(xs, n);\r\n}\r\n\r\nexport function filter(f, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold((acc, x) => {\r\n        if (f(x)) {\r\n            const t = new FSharpList(x, void 0);\r\n            acc.tail = t;\r\n            return t;\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function partition(f, xs) {\r\n    const patternInput = [FSharpList_get_Empty(), FSharpList_get_Empty()];\r\n    const root2 = patternInput[1];\r\n    const root1 = patternInput[0];\r\n    const patternInput_1 = fold(uncurry(2, (tupledArg) => {\r\n        const lacc = tupledArg[0];\r\n        const racc = tupledArg[1];\r\n        return (x) => {\r\n            let t, t_2;\r\n            return f(x) ? [(t = (new FSharpList(x, void 0)), (lacc.tail = t, t)), racc] : [lacc, (t_2 = (new FSharpList(x, void 0)), (racc.tail = t_2, t_2))];\r\n        };\r\n    }), [root1, root2], xs);\r\n    const t_4 = FSharpList_get_Empty();\r\n    patternInput_1[0].tail = t_4;\r\n    const t_5 = FSharpList_get_Empty();\r\n    patternInput_1[1].tail = t_5;\r\n    return [FSharpList__get_Tail(root1), FSharpList__get_Tail(root2)];\r\n}\r\n\r\nexport function choose(f, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold((acc, x) => {\r\n        const matchValue = f(x);\r\n        if (matchValue == null) {\r\n            return acc;\r\n        }\r\n        else {\r\n            const t = new FSharpList(value_1(matchValue), void 0);\r\n            acc.tail = t;\r\n            return t;\r\n        }\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function contains(value, xs, eq) {\r\n    return tryFindIndex((v) => eq.Equals(value, v), xs) != null;\r\n}\r\n\r\nexport function initialize(n, f) {\r\n    let xs, t;\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    for (let i = 0; i <= (n - 1); i++) {\r\n        node = ((xs = node, (t = (new FSharpList(f(i), void 0)), (xs.tail = t, t))));\r\n    }\r\n    const xs_2 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_2.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function replicate(n, x) {\r\n    return initialize(n, (_arg1) => x);\r\n}\r\n\r\nexport function reduce(f, xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        throw (new Error(SR_inputListWasEmpty));\r\n    }\r\n    else {\r\n        return fold(f, head(xs), tail(xs));\r\n    }\r\n}\r\n\r\nexport function reduceBack(f, xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        throw (new Error(SR_inputListWasEmpty));\r\n    }\r\n    else {\r\n        return foldBack(f, tail(xs), head(xs));\r\n    }\r\n}\r\n\r\nexport function forAll(f, xs) {\r\n    return fold((acc, x) => (acc ? f(x) : false), true, xs);\r\n}\r\n\r\nexport function forAll2(f, xs, ys) {\r\n    return fold2((acc, x, y) => (acc ? f(x, y) : false), true, xs, ys);\r\n}\r\n\r\nexport function exists(f, xs) {\r\n    return tryFindIndex(f, xs) != null;\r\n}\r\n\r\nexport function exists2(f_mut, xs_mut, ys_mut) {\r\n    exists2:\r\n    while (true) {\r\n        const f = f_mut, xs = xs_mut, ys = ys_mut;\r\n        const matchValue = [FSharpList__get_IsEmpty(xs), FSharpList__get_IsEmpty(ys)];\r\n        let pattern_matching_result;\r\n        if (matchValue[0]) {\r\n            if (matchValue[1]) {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 2;\r\n            }\r\n        }\r\n        else if (matchValue[1]) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return false;\r\n            }\r\n            case 1: {\r\n                if (f(FSharpList__get_Head(xs), FSharpList__get_Head(ys))) {\r\n                    return true;\r\n                }\r\n                else {\r\n                    f_mut = f;\r\n                    xs_mut = FSharpList__get_Tail(xs);\r\n                    ys_mut = FSharpList__get_Tail(ys);\r\n                    continue exists2;\r\n                }\r\n            }\r\n            case 2: {\r\n                throw (new Error((SR_listsHadDifferentLengths + \"\\\\nParameter name: \") + \"list2\"));\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function unzip(xs) {\r\n    return foldBack((tupledArg, tupledArg_1) => [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1])], xs, [FSharpList_get_Empty(), FSharpList_get_Empty()]);\r\n}\r\n\r\nexport function unzip3(xs) {\r\n    return foldBack((tupledArg, tupledArg_1) => [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1]), FSharpList_Cons_305B8EAC(tupledArg[2], tupledArg_1[2])], xs, [FSharpList_get_Empty(), FSharpList_get_Empty(), FSharpList_get_Empty()]);\r\n}\r\n\r\nexport function zip(xs, ys) {\r\n    return map2((x, y) => [x, y], xs, ys);\r\n}\r\n\r\nexport function zip3(xs, ys, zs) {\r\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\r\n}\r\n\r\nexport function sortWith(comparer, xs) {\r\n    const arr = toArray(xs);\r\n    arr.sort(comparer);\r\n    return ofArray(arr);\r\n}\r\n\r\nexport function sort(xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(x, y), xs);\r\n}\r\n\r\nexport function sortBy(projection, xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(projection(x), projection(y)), xs);\r\n}\r\n\r\nexport function sortDescending(xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(x, y) * -1), xs);\r\n}\r\n\r\nexport function sortByDescending(projection, xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(projection(x), projection(y)) * -1), xs);\r\n}\r\n\r\nexport function sum(xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\r\n}\r\n\r\nexport function sumBy(f, xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\r\n}\r\n\r\nexport function maxBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function max(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function minBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function min(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function average(xs, averager) {\r\n    let count = 0;\r\n    return averager.DivideByInt(fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, x);\r\n    }, averager.GetZero(), xs), count);\r\n}\r\n\r\nexport function averageBy(f, xs, averager) {\r\n    let count = 0;\r\n    return averager.DivideByInt(fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, f(x));\r\n    }, averager.GetZero(), xs), count);\r\n}\r\n\r\nexport function permute(f, xs) {\r\n    return ofArray(permute_1(f, toArray(xs)));\r\n}\r\n\r\nexport function chunkBySize(chunkSize, xs) {\r\n    return ofArray(map_1((xs_1) => ofArray(xs_1), chunkBySize_1(chunkSize, toArray(xs))));\r\n}\r\n\r\nexport function allPairs(xs, ys) {\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    iterate((x) => {\r\n        iterate((y) => {\r\n            let xs_1, t;\r\n            node = ((xs_1 = node, (t = (new FSharpList([x, y], void 0)), (xs_1.tail = t, t))));\r\n        }, ys);\r\n    }, xs);\r\n    const xs_3 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_3.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function skip(count_mut, xs_mut) {\r\n    skip:\r\n    while (true) {\r\n        const count = count_mut, xs = xs_mut;\r\n        if (count <= 0) {\r\n            return xs;\r\n        }\r\n        else if (FSharpList__get_IsEmpty(xs)) {\r\n            throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"list\"));\r\n        }\r\n        else {\r\n            count_mut = (count - 1);\r\n            xs_mut = FSharpList__get_Tail(xs);\r\n            continue skip;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function skipWhile(predicate_mut, xs_mut) {\r\n    skipWhile:\r\n    while (true) {\r\n        const predicate = predicate_mut, xs = xs_mut;\r\n        if (FSharpList__get_IsEmpty(xs)) {\r\n            return xs;\r\n        }\r\n        else if (!predicate(FSharpList__get_Head(xs))) {\r\n            return xs;\r\n        }\r\n        else {\r\n            predicate_mut = predicate;\r\n            xs_mut = FSharpList__get_Tail(xs);\r\n            continue skipWhile;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function take(count, xs) {\r\n    if (count < 0) {\r\n        throw (new Error((SR_inputMustBeNonNegative + \"\\\\nParameter name: \") + \"count\"));\r\n    }\r\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (i <= 0) {\r\n                return acc;\r\n            }\r\n            else if (FSharpList__get_IsEmpty(xs_1)) {\r\n                throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"list\"));\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                acc_mut = ((t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node = loop(count, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function takeWhile(predicate, xs) {\r\n    const loop = (acc_mut, xs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return acc;\r\n            }\r\n            else if (!predicate(FSharpList__get_Head(xs_1))) {\r\n                return acc;\r\n            }\r\n            else {\r\n                acc_mut = ((t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node = loop(root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function truncate(count, xs) {\r\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (i <= 0) {\r\n                return acc;\r\n            }\r\n            else if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                acc_mut = ((t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node = loop(count, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function getSlice(startIndex, endIndex, xs) {\r\n    const len = length(xs) | 0;\r\n    const startIndex_1 = defaultArg(startIndex, 0) | 0;\r\n    const endIndex_1 = defaultArg(endIndex, len - 1) | 0;\r\n    if (startIndex_1 < 0) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"startIndex\"));\r\n    }\r\n    else if (endIndex_1 >= len) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"endIndex\"));\r\n    }\r\n    else if (endIndex_1 < startIndex_1) {\r\n        return FSharpList_get_Empty();\r\n    }\r\n    else {\r\n        return take((endIndex_1 - startIndex_1) + 1, skip(startIndex_1, xs));\r\n    }\r\n}\r\n\r\nexport function splitAt(index, xs) {\r\n    if (index < 0) {\r\n        throw (new Error((SR_inputMustBeNonNegative + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    if (index > FSharpList__get_Length(xs)) {\r\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return [take(index, xs), skip(index, xs)];\r\n}\r\n\r\nexport function exactlyOne(xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n    else if (FSharpList__get_IsEmpty(FSharpList__get_Tail(xs))) {\r\n        return FSharpList__get_Head(xs);\r\n    }\r\n    else {\r\n        throw (new Error((SR_inputSequenceTooLong + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n}\r\n\r\nexport function tryExactlyOne(xs) {\r\n    if ((!FSharpList__get_IsEmpty(xs)) ? FSharpList__get_IsEmpty(FSharpList__get_Tail(xs)) : false) {\r\n        return some(FSharpList__get_Head(xs));\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function where(predicate, xs) {\r\n    return filter(predicate, xs);\r\n}\r\n\r\nexport function pairwise(xs) {\r\n    return ofArray(pairwise_1(toArray(xs)));\r\n}\r\n\r\nexport function windowed(windowSize, xs) {\r\n    return ofArray(map_1((xs_1) => ofArray(xs_1), windowed_1(windowSize, toArray(xs))));\r\n}\r\n\r\nexport function splitInto(chunks, xs) {\r\n    return ofArray(map_1((xs_1) => ofArray(xs_1), splitInto_1(chunks, toArray(xs))));\r\n}\r\n\r\nexport function transpose(lists) {\r\n    return ofArray(map_1((xs_1) => ofArray(xs_1), transpose_1(map_1((xs) => toArray(xs), Array.from(lists)))));\r\n}\r\n\r\n","export class CancellationToken {\n    constructor(cancelled = false) {\n        this._id = 0;\n        this._cancelled = cancelled;\n        this._listeners = new Map();\n    }\n    get isCancelled() {\n        return this._cancelled;\n    }\n    cancel() {\n        if (!this._cancelled) {\n            this._cancelled = true;\n            for (const [, listener] of this._listeners) {\n                listener();\n            }\n        }\n    }\n    addListener(f) {\n        const id = this._id;\n        this._listeners.set(this._id++, f);\n        return id;\n    }\n    removeListener(id) {\n        return this._listeners.delete(id);\n    }\n    register(f, state) {\n        const $ = this;\n        const id = this.addListener(state == null ? f : () => f(state));\n        return { Dispose() { $.removeListener(id); } };\n    }\n}\nexport class OperationCanceledError extends Error {\n    constructor() {\n        super(\"The operation was canceled\");\n        Object.setPrototypeOf(this, OperationCanceledError.prototype);\n    }\n}\nexport class Trampoline {\n    constructor() {\n        this.callCount = 0;\n    }\n    static get maxTrampolineCallCount() {\n        return 2000;\n    }\n    incrementAndCheck() {\n        return this.callCount++ > Trampoline.maxTrampolineCallCount;\n    }\n    hijack(f) {\n        this.callCount = 0;\n        setTimeout(f, 0);\n    }\n}\nexport function protectedCont(f) {\n    return (ctx) => {\n        if (ctx.cancelToken.isCancelled) {\n            ctx.onCancel(new OperationCanceledError());\n        }\n        else if (ctx.trampoline.incrementAndCheck()) {\n            ctx.trampoline.hijack(() => {\n                try {\n                    f(ctx);\n                }\n                catch (err) {\n                    ctx.onError(err);\n                }\n            });\n        }\n        else {\n            try {\n                f(ctx);\n            }\n            catch (err) {\n                ctx.onError(err);\n            }\n        }\n    };\n}\nexport function protectedBind(computation, binder) {\n    return protectedCont((ctx) => {\n        computation({\n            onSuccess: (x) => {\n                try {\n                    binder(x)(ctx);\n                }\n                catch (ex) {\n                    ctx.onError(ex);\n                }\n            },\n            onError: ctx.onError,\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function protectedReturn(value) {\n    return protectedCont((ctx) => ctx.onSuccess(value));\n}\nexport class AsyncBuilder {\n    Bind(computation, binder) {\n        return protectedBind(computation, binder);\n    }\n    Combine(computation1, computation2) {\n        return this.Bind(computation1, () => computation2);\n    }\n    Delay(generator) {\n        return protectedCont((ctx) => generator()(ctx));\n    }\n    For(sequence, body) {\n        const iter = sequence[Symbol.iterator]();\n        let cur = iter.next();\n        return this.While(() => !cur.done, this.Delay(() => {\n            const res = body(cur.value);\n            cur = iter.next();\n            return res;\n        }));\n    }\n    Return(value) {\n        return protectedReturn(value);\n    }\n    ReturnFrom(computation) {\n        return computation;\n    }\n    TryFinally(computation, compensation) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: (x) => {\n                    compensation();\n                    ctx.onSuccess(x);\n                },\n                onError: (x) => {\n                    compensation();\n                    ctx.onError(x);\n                },\n                onCancel: (x) => {\n                    compensation();\n                    ctx.onCancel(x);\n                },\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n            });\n        });\n    }\n    TryWith(computation, catchHandler) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: ctx.onSuccess,\n                onCancel: ctx.onCancel,\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n                onError: (ex) => {\n                    try {\n                        catchHandler(ex)(ctx);\n                    }\n                    catch (ex2) {\n                        ctx.onError(ex2);\n                    }\n                },\n            });\n        });\n    }\n    Using(resource, binder) {\n        return this.TryFinally(binder(resource), () => resource.Dispose());\n    }\n    While(guard, computation) {\n        if (guard()) {\n            return this.Bind(computation, () => this.While(guard, computation));\n        }\n        else {\n            return this.Return(void 0);\n        }\n    }\n    Zero() {\n        return protectedCont((ctx) => ctx.onSuccess(void 0));\n    }\n}\nexport const singleton = new AsyncBuilder();\n","import { Union } from \"./Types.js\";\r\nimport { union_type } from \"./Reflection.js\";\r\nimport { some } from \"./Option.js\";\r\n\r\nexport class FSharpResult$2 extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Ok\", \"Error\"];\r\n    }\r\n}\r\n\r\nexport function FSharpResult$2$reflection(gen0, gen1) {\r\n    return union_type(\"FSharp.Core.FSharpResult`2\", [gen0, gen1], FSharpResult$2, () => [[[\"ResultValue\", gen0]], [[\"ErrorValue\", gen1]]]);\r\n}\r\n\r\nexport function Result_Map(mapping, result) {\r\n    if (result.tag === 0) {\r\n        return new FSharpResult$2(0, mapping(result.fields[0]));\r\n    }\r\n    else {\r\n        return new FSharpResult$2(1, result.fields[0]);\r\n    }\r\n}\r\n\r\nexport function Result_MapError(mapping, result) {\r\n    if (result.tag === 0) {\r\n        return new FSharpResult$2(0, result.fields[0]);\r\n    }\r\n    else {\r\n        return new FSharpResult$2(1, mapping(result.fields[0]));\r\n    }\r\n}\r\n\r\nexport function Result_Bind(binder, result) {\r\n    if (result.tag === 0) {\r\n        return binder(result.fields[0]);\r\n    }\r\n    else {\r\n        return new FSharpResult$2(1, result.fields[0]);\r\n    }\r\n}\r\n\r\nexport class FSharpChoice$2 extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Choice1Of2\", \"Choice2Of2\"];\r\n    }\r\n}\r\n\r\nexport function FSharpChoice$2$reflection(gen0, gen1) {\r\n    return union_type(\"FSharp.Core.FSharpChoice`2\", [gen0, gen1], FSharpChoice$2, () => [[[\"Item\", gen0]], [[\"Item\", gen1]]]);\r\n}\r\n\r\nexport class FSharpChoice$3 extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Choice1Of3\", \"Choice2Of3\", \"Choice3Of3\"];\r\n    }\r\n}\r\n\r\nexport function FSharpChoice$3$reflection(gen0, gen1, gen2) {\r\n    return union_type(\"FSharp.Core.FSharpChoice`3\", [gen0, gen1, gen2], FSharpChoice$3, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]]]);\r\n}\r\n\r\nexport class FSharpChoice$4 extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Choice1Of4\", \"Choice2Of4\", \"Choice3Of4\", \"Choice4Of4\"];\r\n    }\r\n}\r\n\r\nexport function FSharpChoice$4$reflection(gen0, gen1, gen2, gen3) {\r\n    return union_type(\"FSharp.Core.FSharpChoice`4\", [gen0, gen1, gen2, gen3], FSharpChoice$4, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]]]);\r\n}\r\n\r\nexport class FSharpChoice$5 extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Choice1Of5\", \"Choice2Of5\", \"Choice3Of5\", \"Choice4Of5\", \"Choice5Of5\"];\r\n    }\r\n}\r\n\r\nexport function FSharpChoice$5$reflection(gen0, gen1, gen2, gen3, gen4) {\r\n    return union_type(\"FSharp.Core.FSharpChoice`5\", [gen0, gen1, gen2, gen3, gen4], FSharpChoice$5, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]]]);\r\n}\r\n\r\nexport class FSharpChoice$6 extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Choice1Of6\", \"Choice2Of6\", \"Choice3Of6\", \"Choice4Of6\", \"Choice5Of6\", \"Choice6Of6\"];\r\n    }\r\n}\r\n\r\nexport function FSharpChoice$6$reflection(gen0, gen1, gen2, gen3, gen4, gen5) {\r\n    return union_type(\"FSharp.Core.FSharpChoice`6\", [gen0, gen1, gen2, gen3, gen4, gen5], FSharpChoice$6, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]], [[\"Item\", gen5]]]);\r\n}\r\n\r\nexport class FSharpChoice$7 extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Choice1Of7\", \"Choice2Of7\", \"Choice3Of7\", \"Choice4Of7\", \"Choice5Of7\", \"Choice6Of7\", \"Choice7Of7\"];\r\n    }\r\n}\r\n\r\nexport function FSharpChoice$7$reflection(gen0, gen1, gen2, gen3, gen4, gen5, gen6) {\r\n    return union_type(\"FSharp.Core.FSharpChoice`7\", [gen0, gen1, gen2, gen3, gen4, gen5, gen6], FSharpChoice$7, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]], [[\"Item\", gen5]], [[\"Item\", gen6]]]);\r\n}\r\n\r\nexport function Choice_makeChoice1Of2(x) {\r\n    return new FSharpChoice$2(0, x);\r\n}\r\n\r\nexport function Choice_makeChoice2Of2(x) {\r\n    return new FSharpChoice$2(1, x);\r\n}\r\n\r\nexport function Choice_tryValueIfChoice1Of2(x) {\r\n    if (x.tag === 0) {\r\n        return some(x.fields[0]);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function Choice_tryValueIfChoice2Of2(x) {\r\n    if (x.tag === 1) {\r\n        return some(x.fields[0]);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { OperationCanceledError, Trampoline } from \"./AsyncBuilder.js\";\nimport { CancellationToken } from \"./AsyncBuilder.js\";\nimport { protectedCont } from \"./AsyncBuilder.js\";\nimport { protectedBind } from \"./AsyncBuilder.js\";\nimport { protectedReturn } from \"./AsyncBuilder.js\";\nimport { Choice_makeChoice1Of2, Choice_makeChoice2Of2 } from \"./Choice.js\";\nimport { TimeoutException } from \"./SystemException.js\";\n// Implemented just for type references\nexport class Async {\n}\nfunction emptyContinuation(_x) {\n    // NOP\n}\n// see AsyncBuilder.Delay\nfunction delay(generator) {\n    return protectedCont((ctx) => generator()(ctx));\n}\n// MakeAsync: body:(AsyncActivation<'T> -> AsyncReturn) -> Async<'T>\nexport function makeAsync(body) {\n    return body;\n}\n// Invoke: computation: Async<'T> -> ctxt:AsyncActivation<'T> -> AsyncReturn\nexport function invoke(computation, ctx) {\n    return computation(ctx);\n}\n// CallThenInvoke: ctxt:AsyncActivation<'T> -> result1:'U -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function callThenInvoke(ctx, result1, part2) {\n    return part2(result1)(ctx);\n}\n// Bind: ctxt:AsyncActivation<'T> -> part1:Async<'U> -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function bind(ctx, part1, part2) {\n    return protectedBind(part1, part2)(ctx);\n}\nexport function createCancellationToken(arg) {\n    const token = new CancellationToken(typeof arg === \"boolean\" ? arg : false);\n    if (typeof arg === \"number\") {\n        setTimeout(() => { token.cancel(); }, arg);\n    }\n    return token;\n}\nexport function cancel(token) {\n    token.cancel();\n}\nexport function cancelAfter(token, ms) {\n    setTimeout(() => { token.cancel(); }, ms);\n}\nexport function isCancellationRequested(token) {\n    return token != null && token.isCancelled;\n}\nexport function throwIfCancellationRequested(token) {\n    if (token != null && token.isCancelled) {\n        throw new Error(\"Operation is cancelled\");\n    }\n}\nfunction throwAfter(millisecondsDueTime) {\n    return protectedCont((ctx) => {\n        let tokenId;\n        const timeoutId = setTimeout(() => {\n            ctx.cancelToken.removeListener(tokenId);\n            ctx.onError(new TimeoutException());\n        }, millisecondsDueTime);\n        tokenId = ctx.cancelToken.addListener(() => {\n            clearTimeout(timeoutId);\n            ctx.onCancel(new OperationCanceledError());\n        });\n    });\n}\nexport function startChild(computation, ms) {\n    if (ms) {\n        const computationWithTimeout = protectedBind(parallel2(computation, throwAfter(ms)), xs => protectedReturn(xs[0]));\n        return startChild(computationWithTimeout);\n    }\n    const promise = startAsPromise(computation);\n    // JS Promises are hot, computation has already started\n    // but we delay returning the result\n    return protectedCont((ctx) => protectedReturn(awaitPromise(promise))(ctx));\n}\nexport function awaitPromise(p) {\n    return fromContinuations((conts) => p.then(conts[0]).catch((err) => (err instanceof OperationCanceledError\n        ? conts[2] : conts[1])(err)));\n}\nexport function cancellationToken() {\n    return protectedCont((ctx) => ctx.onSuccess(ctx.cancelToken));\n}\nexport const defaultCancellationToken = new CancellationToken();\nexport function catchAsync(work) {\n    return protectedCont((ctx) => {\n        work({\n            onSuccess: (x) => ctx.onSuccess(Choice_makeChoice1Of2(x)),\n            onError: (ex) => ctx.onSuccess(Choice_makeChoice2Of2(ex)),\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function fromContinuations(f) {\n    return protectedCont((ctx) => f([ctx.onSuccess, ctx.onError, ctx.onCancel]));\n}\nexport function ignore(computation) {\n    return protectedBind(computation, (_x) => protectedReturn(void 0));\n}\nexport function parallel(computations) {\n    return delay(() => awaitPromise(Promise.all(Array.from(computations, (w) => startAsPromise(w)))));\n}\nfunction parallel2(a, b) {\n    return delay(() => awaitPromise(Promise.all([startAsPromise(a), startAsPromise(b)])));\n}\nexport function sequential(computations) {\n    function _sequential(computations) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const results = [];\n            for (const c of computations) {\n                const result = yield startAsPromise(c);\n                results.push(result);\n            }\n            return results;\n        });\n    }\n    return delay(() => awaitPromise(_sequential(computations)));\n}\nexport function sleep(millisecondsDueTime) {\n    return protectedCont((ctx) => {\n        let tokenId;\n        const timeoutId = setTimeout(() => {\n            ctx.cancelToken.removeListener(tokenId);\n            ctx.onSuccess(void 0);\n        }, millisecondsDueTime);\n        tokenId = ctx.cancelToken.addListener(() => {\n            clearTimeout(timeoutId);\n            ctx.onCancel(new OperationCanceledError());\n        });\n    });\n}\nexport function start(computation, cancellationToken) {\n    return startWithContinuations(computation, cancellationToken);\n}\nexport function startImmediate(computation, cancellationToken) {\n    return start(computation, cancellationToken);\n}\nexport function startWithContinuations(computation, continuation, exceptionContinuation, cancellationContinuation, cancelToken) {\n    if (typeof continuation !== \"function\") {\n        cancelToken = continuation;\n        continuation = undefined;\n    }\n    const trampoline = new Trampoline();\n    computation({\n        onSuccess: continuation ? continuation : emptyContinuation,\n        onError: exceptionContinuation ? exceptionContinuation : emptyContinuation,\n        onCancel: cancellationContinuation ? cancellationContinuation : emptyContinuation,\n        cancelToken: cancelToken ? cancelToken : defaultCancellationToken,\n        trampoline,\n    });\n}\nexport function startAsPromise(computation, cancellationToken) {\n    return new Promise((resolve, reject) => startWithContinuations(computation, resolve, reject, reject, cancellationToken ? cancellationToken : defaultCancellationToken));\n}\nexport default Async;\n","import { singleton, concat, map, empty, iterate } from \"../fable-library.3.4.0/List.js\";\nimport { singleton as singleton_1 } from \"../fable-library.3.4.0/AsyncBuilder.js\";\nimport { startImmediate, catchAsync } from \"../fable-library.3.4.0/Async.js\";\nimport { Timer_delay } from \"./prelude.fs.js\";\n\nexport function Cmd_exec(onError, dispatch, cmd) {\n    iterate((call) => {\n        try {\n            call(dispatch);\n        }\n        catch (ex) {\n            onError(ex);\n        }\n    }, cmd);\n}\n\nexport function Cmd_none() {\n    return empty();\n}\n\nexport function Cmd_map(f, cmd) {\n    return map((g) => ((arg_1) => {\n        g((arg) => {\n            arg_1(f(arg));\n        });\n    }), cmd);\n}\n\nexport function Cmd_batch(cmds) {\n    return concat(cmds);\n}\n\nexport function Cmd_ofSub(sub) {\n    return singleton(sub);\n}\n\nexport function Cmd_OfFunc_either(task, arg, ofSuccess, ofError) {\n    return singleton((dispatch) => {\n        try {\n            return dispatch(ofSuccess(task(arg)));\n        }\n        catch (x) {\n            return dispatch(ofError(x));\n        }\n    });\n}\n\nexport function Cmd_OfFunc_perform(task, arg, ofSuccess) {\n    return singleton((dispatch) => {\n        try {\n            dispatch(ofSuccess(task(arg)));\n        }\n        catch (x) {\n        }\n    });\n}\n\nexport function Cmd_OfFunc_attempt(task, arg, ofError) {\n    return singleton((dispatch) => {\n        try {\n            task(arg);\n        }\n        catch (x) {\n            dispatch(ofError(x));\n        }\n    });\n}\n\nexport function Cmd_OfFunc_result(msg) {\n    return singleton((dispatch) => {\n        dispatch(msg);\n    });\n}\n\nexport function Cmd_OfAsyncWith_either(start, task, arg, ofSuccess, ofError) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            arg_1((r.tag === 1) ? ofError(r.fields[0]) : ofSuccess(r.fields[0]));\n            return singleton_1.Zero();\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_perform(start, task, arg, ofSuccess) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            if (r.tag === 0) {\n                arg_1(ofSuccess(r.fields[0]));\n                return singleton_1.Zero();\n            }\n            else {\n                return singleton_1.Zero();\n            }\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_attempt(start, task, arg, ofError) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            if (r.tag === 1) {\n                arg_1(ofError(r.fields[0]));\n                return singleton_1.Zero();\n            }\n            else {\n                return singleton_1.Zero();\n            }\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_result(start, task) {\n    return singleton((arg) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(task, (_arg1) => {\n            arg(_arg1);\n            return singleton_1.Zero();\n        })));\n    });\n}\n\nexport function Cmd_OfAsync_start(x) {\n    Timer_delay(0, (_arg1) => {\n        startImmediate(x);\n    });\n}\n\nexport function Cmd_OfPromise_either(task, arg, ofSuccess, ofError) {\n    return singleton((dispatch) => {\n        void task(arg).then((arg_1) => dispatch(ofSuccess(arg_1))).catch((arg_3) => dispatch(ofError(arg_3)));\n    });\n}\n\nexport function Cmd_OfPromise_perform(task, arg, ofSuccess) {\n    return singleton((dispatch) => {\n        void task(arg).then((arg_1) => dispatch(ofSuccess(arg_1)));\n    });\n}\n\nexport function Cmd_OfPromise_attempt(task, arg, ofError) {\n    return singleton((dispatch) => {\n        void task(arg).catch((arg_2) => {\n            dispatch(ofError(arg_2));\n        });\n    });\n}\n\nexport function Cmd_OfPromise_result(task) {\n    return singleton((dispatch) => {\n        void task.then(dispatch);\n    });\n}\n\nexport function Cmd_attemptFunc(task, arg, ofError) {\n    return Cmd_OfFunc_attempt(task, arg, ofError);\n}\n\n","import { compare, physicalHash, equals, structuralHash } from \"./Util.js\";\r\n\r\nexport function HashIdentity_FromFunctions(hash, eq) {\r\n    return {\r\n        Equals(x, y) {\r\n            return eq(x, y);\r\n        },\r\n        GetHashCode(x_1) {\r\n            return hash(x_1);\r\n        },\r\n    };\r\n}\r\n\r\nexport function HashIdentity_Structural() {\r\n    return HashIdentity_FromFunctions((obj) => structuralHash(obj), (e1, e2) => equals(e1, e2));\r\n}\r\n\r\nexport function HashIdentity_Reference() {\r\n    return HashIdentity_FromFunctions((obj) => physicalHash(obj), (e1, e2) => (e1 === e2));\r\n}\r\n\r\nexport function ComparisonIdentity_FromFunction(comparer) {\r\n    return {\r\n        Compare(x, y) {\r\n            return comparer(x, y);\r\n        },\r\n    };\r\n}\r\n\r\nexport function ComparisonIdentity_Structural() {\r\n    return ComparisonIdentity_FromFunction((e1, e2) => compare(e1, e2));\r\n}\r\n\r\n","import { substring, format, isNullOrEmpty, join } from \"./String.js\";\r\nimport { class_type } from \"./Reflection.js\";\r\nimport { clear, int32ToString } from \"./Util.js\";\r\nimport { toString } from \"./Types.js\";\r\n\r\nexport class StringBuilder {\r\n    constructor(value, capacity) {\r\n        this.buf = [];\r\n        if (!isNullOrEmpty(value)) {\r\n            void (this.buf.push(value));\r\n        }\r\n    }\r\n    toString() {\r\n        const __ = this;\r\n        return join(\"\", __.buf);\r\n    }\r\n}\r\n\r\nexport function StringBuilder$reflection() {\r\n    return class_type(\"System.Text.StringBuilder\", void 0, StringBuilder);\r\n}\r\n\r\nexport function StringBuilder_$ctor_Z18115A39(value, capacity) {\r\n    return new StringBuilder(value, capacity);\r\n}\r\n\r\nexport function StringBuilder_$ctor_Z524259A4(capacity) {\r\n    return StringBuilder_$ctor_Z18115A39(\"\", capacity);\r\n}\r\n\r\nexport function StringBuilder_$ctor_Z721C83C5(value) {\r\n    return StringBuilder_$ctor_Z18115A39(value, 16);\r\n}\r\n\r\nexport function StringBuilder_$ctor() {\r\n    return StringBuilder_$ctor_Z18115A39(\"\", 16);\r\n}\r\n\r\nexport function StringBuilder__Append_Z721C83C5(x, s) {\r\n    void (x.buf.push(s));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__Append_244C7CD6(x, c) {\r\n    void (x.buf.push(c));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__Append_Z524259A4(x, o) {\r\n    void (x.buf.push(int32ToString(o)));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__Append_5E38073B(x, o) {\r\n    void (x.buf.push(o.toString()));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__Append_Z1FBCCD16(x, o) {\r\n    void (x.buf.push(toString(o)));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__Append_4E60E31B(x, o) {\r\n    void (x.buf.push(toString(o)));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__Append_695F1130(x, cs) {\r\n    void (x.buf.push(cs.join('')));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__Append_43A65C09(x, s) {\r\n    void (x.buf.push(toString(s)));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__AppendFormat_433E080(x, fmt, o) {\r\n    void (x.buf.push(format(fmt, o)));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__AppendLine(x) {\r\n    void (x.buf.push(\"\\n\"));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__AppendLine_Z721C83C5(x, s) {\r\n    void (x.buf.push(s));\r\n    void (x.buf.push(\"\\n\"));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__get_Length(x) {\r\n    let len = 0;\r\n    for (let i = x.buf.length - 1; i >= 0; i--) {\r\n        len = ((len + x.buf[i].length) | 0);\r\n    }\r\n    return len | 0;\r\n}\r\n\r\nexport function StringBuilder__ToString_Z37302880(x, firstIndex, length) {\r\n    return substring(toString(x), firstIndex, length);\r\n}\r\n\r\nexport function StringBuilder__Clear(x) {\r\n    clear(x.buf);\r\n    return x;\r\n}\r\n\r\n","import { structuralHash, equals } from \"./Util.js\";\r\nimport { HashIdentity_Structural, ComparisonIdentity_Structural } from \"./FSharp.Collections.js\";\r\nimport { StringBuilder__Append_Z721C83C5 } from \"./System.Text.js\";\r\n\r\nexport const LanguagePrimitives_GenericEqualityComparer = {\r\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\r\n        return equals(x, y);\r\n    },\r\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\r\n        return structuralHash(x_1);\r\n    },\r\n};\r\n\r\nexport const LanguagePrimitives_GenericEqualityERComparer = {\r\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\r\n        return equals(x, y);\r\n    },\r\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\r\n        return structuralHash(x_1);\r\n    },\r\n};\r\n\r\nexport function LanguagePrimitives_FastGenericComparer() {\r\n    return ComparisonIdentity_Structural();\r\n}\r\n\r\nexport function LanguagePrimitives_FastGenericComparerFromTable() {\r\n    return ComparisonIdentity_Structural();\r\n}\r\n\r\nexport function LanguagePrimitives_FastGenericEqualityComparer() {\r\n    return HashIdentity_Structural();\r\n}\r\n\r\nexport function LanguagePrimitives_FastGenericEqualityComparerFromTable() {\r\n    return HashIdentity_Structural();\r\n}\r\n\r\nexport function Operators_Failure(message) {\r\n    return new Error(message);\r\n}\r\n\r\nexport function Operators_FailurePattern(exn) {\r\n    return exn.message;\r\n}\r\n\r\nexport function Operators_NullArg(x) {\r\n    throw (new Error(x));\r\n}\r\n\r\nexport function Operators_Using(resource, action) {\r\n    try {\r\n        return action(resource);\r\n    }\r\n    finally {\r\n        if (equals(resource, null)) {\r\n        }\r\n        else {\r\n            resource.Dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport function Operators_Lock(_lockObj, action) {\r\n    return action();\r\n}\r\n\r\nexport function ExtraTopLevelOperators_LazyPattern(input) {\r\n    return input.Value;\r\n}\r\n\r\nexport function PrintfModule_PrintFormatToStringBuilderThen(continuation, builder, format) {\r\n    return format.cont((s) => {\r\n        void StringBuilder__Append_Z721C83C5(builder, s);\r\n        return continuation();\r\n    });\r\n}\r\n\r\nexport function PrintfModule_PrintFormatToStringBuilder(builder, format) {\r\n    return PrintfModule_PrintFormatToStringBuilderThen(() => {\r\n    }, builder, format);\r\n}\r\n\r\n","import { equals, isArrayLike, isDisposable, toIterator, getEnumerator } from \"./Util.js\";\r\nimport { toString } from \"./Types.js\";\r\nimport { class_type } from \"./Reflection.js\";\r\nimport { some, value as value_1 } from \"./Option.js\";\r\nimport { Operators_NullArg } from \"./FSharp.Core.js\";\r\nimport { chunkBySize as chunkBySize_1, permute as permute_1, transpose as transpose_1, windowed as windowed_1, splitInto as splitInto_1, map as map_1, pairwise as pairwise_1, scanBack as scanBack_1, reverse as reverse_1, mapFoldBack as mapFoldBack_1, mapFold as mapFold_1, tryItem as tryItem_1, tryHead as tryHead_1, foldBack2 as foldBack2_1, foldBack as foldBack_1, tryFindIndexBack as tryFindIndexBack_1, tryFindBack as tryFindBack_1, singleton as singleton_1 } from \"./Array.js\";\r\nimport { length as length_1, tryItem as tryItem_2, isEmpty as isEmpty_1, tryHead as tryHead_2, ofSeq as ofSeq_1, ofArray as ofArray_1, toArray as toArray_1, FSharpList } from \"./List.js\";\r\n\r\nexport const SR_enumerationAlreadyFinished = \"Enumeration already finished.\";\r\n\r\nexport const SR_enumerationNotStarted = \"Enumeration has not started. Call MoveNext.\";\r\n\r\nexport const SR_inputSequenceEmpty = \"The input sequence was empty.\";\r\n\r\nexport const SR_inputSequenceTooLong = \"The input sequence contains more than one element.\";\r\n\r\nexport const SR_keyNotFoundAlt = \"An index satisfying the predicate was not found in the collection.\";\r\n\r\nexport const SR_notEnoughElements = \"The input sequence has an insufficient number of elements.\";\r\n\r\nexport const SR_resetNotSupported = \"Reset is not supported on this enumerator.\";\r\n\r\nexport function Enumerator_noReset() {\r\n    throw (new Error(SR_resetNotSupported));\r\n}\r\n\r\nexport function Enumerator_notStarted() {\r\n    throw (new Error(SR_enumerationNotStarted));\r\n}\r\n\r\nexport function Enumerator_alreadyFinished() {\r\n    throw (new Error(SR_enumerationAlreadyFinished));\r\n}\r\n\r\nexport class Enumerator_Seq {\r\n    constructor(f) {\r\n        this.f = f;\r\n    }\r\n    toString() {\r\n        const xs = this;\r\n        const maxCount = 4;\r\n        let i = 0;\r\n        let str = \"seq [\";\r\n        const e = getEnumerator(xs);\r\n        try {\r\n            while ((i < maxCount) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\r\n                if (i > 0) {\r\n                    str = (str + \"; \");\r\n                }\r\n                str = (str + toString(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()));\r\n                i = ((i + 1) | 0);\r\n            }\r\n            if (i === maxCount) {\r\n                str = (str + \"; ...\");\r\n            }\r\n            return str + \"]\";\r\n        }\r\n        finally {\r\n            e.Dispose();\r\n        }\r\n    }\r\n    GetEnumerator() {\r\n        const x = this;\r\n        return x.f();\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const x = this;\r\n        return x.f();\r\n    }\r\n}\r\n\r\nexport function Enumerator_Seq$reflection(gen0) {\r\n    return class_type(\"SeqModule.Enumerator.Seq\", [gen0], Enumerator_Seq);\r\n}\r\n\r\nexport function Enumerator_Seq_$ctor_673A07F2(f) {\r\n    return new Enumerator_Seq(f);\r\n}\r\n\r\nexport class Enumerator_FromFunctions$1 {\r\n    constructor(current, next, dispose) {\r\n        this.current = current;\r\n        this.next = next;\r\n        this.dispose = dispose;\r\n    }\r\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current();\r\n    }\r\n    [\"System.Collections.IEnumerator.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current();\r\n    }\r\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\r\n        const __ = this;\r\n        return __.next();\r\n    }\r\n    [\"System.Collections.IEnumerator.Reset\"]() {\r\n        Enumerator_noReset();\r\n    }\r\n    Dispose() {\r\n        const __ = this;\r\n        __.dispose();\r\n    }\r\n}\r\n\r\nexport function Enumerator_FromFunctions$1$reflection(gen0) {\r\n    return class_type(\"SeqModule.Enumerator.FromFunctions`1\", [gen0], Enumerator_FromFunctions$1);\r\n}\r\n\r\nexport function Enumerator_FromFunctions$1_$ctor_58C54629(current, next, dispose) {\r\n    return new Enumerator_FromFunctions$1(current, next, dispose);\r\n}\r\n\r\nexport function Enumerator_cast(e) {\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => e[\"System.Collections.IEnumerator.get_Current\"](), () => e[\"System.Collections.IEnumerator.MoveNext\"](), () => {\r\n        if (isDisposable(e)) {\r\n            e.Dispose();\r\n        }\r\n    });\r\n}\r\n\r\nexport function Enumerator_concat(sources) {\r\n    let outerOpt = void 0;\r\n    let innerOpt = void 0;\r\n    let started = false;\r\n    let finished = false;\r\n    let curr = void 0;\r\n    const finish = () => {\r\n        finished = true;\r\n        if (innerOpt != null) {\r\n            const inner = innerOpt;\r\n            try {\r\n                inner.Dispose();\r\n            }\r\n            finally {\r\n                innerOpt = (void 0);\r\n            }\r\n        }\r\n        if (outerOpt != null) {\r\n            const outer = outerOpt;\r\n            try {\r\n                outer.Dispose();\r\n            }\r\n            finally {\r\n                outerOpt = (void 0);\r\n            }\r\n        }\r\n    };\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\r\n        if (!started) {\r\n            Enumerator_notStarted();\r\n        }\r\n        else if (finished) {\r\n            Enumerator_alreadyFinished();\r\n        }\r\n        if (curr != null) {\r\n            return value_1(curr);\r\n        }\r\n        else {\r\n            return Enumerator_alreadyFinished();\r\n        }\r\n    }, () => {\r\n        let copyOfStruct;\r\n        if (!started) {\r\n            started = true;\r\n        }\r\n        if (finished) {\r\n            return false;\r\n        }\r\n        else {\r\n            let res = void 0;\r\n            while (res == null) {\r\n                const matchValue = [outerOpt, innerOpt];\r\n                if (matchValue[0] != null) {\r\n                    if (matchValue[1] != null) {\r\n                        const inner_1 = matchValue[1];\r\n                        if (inner_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                            curr = some(inner_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n                            res = true;\r\n                        }\r\n                        else {\r\n                            try {\r\n                                inner_1.Dispose();\r\n                            }\r\n                            finally {\r\n                                innerOpt = (void 0);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        const outer_1 = matchValue[0];\r\n                        if (outer_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                            const ie = outer_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                            innerOpt = ((copyOfStruct = ie, getEnumerator(copyOfStruct)));\r\n                        }\r\n                        else {\r\n                            finish();\r\n                            res = false;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    outerOpt = getEnumerator(sources);\r\n                }\r\n            }\r\n            return value_1(res);\r\n        }\r\n    }, () => {\r\n        if (!finished) {\r\n            finish();\r\n        }\r\n    });\r\n}\r\n\r\nexport function Enumerator_enumerateThenFinally(f, e) {\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => e[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), () => e[\"System.Collections.IEnumerator.MoveNext\"](), () => {\r\n        try {\r\n            e.Dispose();\r\n        }\r\n        finally {\r\n            f();\r\n        }\r\n    });\r\n}\r\n\r\nexport function Enumerator_generateWhileSome(openf, compute, closef) {\r\n    let started = false;\r\n    let curr = void 0;\r\n    let state = some(openf());\r\n    const dispose = () => {\r\n        if (state != null) {\r\n            const x_1 = value_1(state);\r\n            try {\r\n                closef(x_1);\r\n            }\r\n            finally {\r\n                state = (void 0);\r\n            }\r\n        }\r\n    };\r\n    const finish = () => {\r\n        try {\r\n            dispose();\r\n        }\r\n        finally {\r\n            curr = (void 0);\r\n        }\r\n    };\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\r\n        if (!started) {\r\n            Enumerator_notStarted();\r\n        }\r\n        if (curr != null) {\r\n            return value_1(curr);\r\n        }\r\n        else {\r\n            return Enumerator_alreadyFinished();\r\n        }\r\n    }, () => {\r\n        if (!started) {\r\n            started = true;\r\n        }\r\n        if (state != null) {\r\n            const s = value_1(state);\r\n            let matchValue_1;\r\n            try {\r\n                matchValue_1 = compute(s);\r\n            }\r\n            catch (matchValue) {\r\n                finish();\r\n                throw matchValue;\r\n            }\r\n            if (matchValue_1 != null) {\r\n                curr = matchValue_1;\r\n                return true;\r\n            }\r\n            else {\r\n                finish();\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }, dispose);\r\n}\r\n\r\nexport function Enumerator_unfold(f, state) {\r\n    let curr = void 0;\r\n    let acc = state;\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\r\n        if (curr != null) {\r\n            const x = curr[0];\r\n            const st = curr[1];\r\n            return x;\r\n        }\r\n        else {\r\n            return Enumerator_notStarted();\r\n        }\r\n    }, () => {\r\n        curr = f(acc);\r\n        if (curr != null) {\r\n            const x_1 = curr[0];\r\n            const st_1 = curr[1];\r\n            acc = st_1;\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }, () => {\r\n    });\r\n}\r\n\r\nexport function indexNotFound() {\r\n    throw (new Error(SR_keyNotFoundAlt));\r\n}\r\n\r\nexport function checkNonNull(argName, arg) {\r\n    if (arg == null) {\r\n        Operators_NullArg(argName);\r\n    }\r\n}\r\n\r\nexport function mkSeq(f) {\r\n    return Enumerator_Seq_$ctor_673A07F2(f);\r\n}\r\n\r\nexport function ofSeq(xs) {\r\n    checkNonNull(\"source\", xs);\r\n    return getEnumerator(xs);\r\n}\r\n\r\nexport function delay(generator) {\r\n    return mkSeq(() => getEnumerator(generator()));\r\n}\r\n\r\nexport function concat(sources) {\r\n    return mkSeq(() => Enumerator_concat(sources));\r\n}\r\n\r\nexport function unfold(generator, state) {\r\n    return mkSeq(() => Enumerator_unfold(generator, state));\r\n}\r\n\r\nexport function empty() {\r\n    return delay(() => (new Array(0)));\r\n}\r\n\r\nexport function singleton(x) {\r\n    return delay(() => singleton_1(x));\r\n}\r\n\r\nexport function ofArray(arr) {\r\n    return arr;\r\n}\r\n\r\nexport function toArray(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return xs;\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return toArray_1(xs);\r\n    }\r\n    else {\r\n        return Array.from(xs);\r\n    }\r\n}\r\n\r\nexport function ofList(xs) {\r\n    return xs;\r\n}\r\n\r\nexport function toList(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return ofArray_1(xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return xs;\r\n    }\r\n    else {\r\n        return ofSeq_1(xs);\r\n    }\r\n}\r\n\r\nexport function generate(create, compute, dispose) {\r\n    return mkSeq(() => Enumerator_generateWhileSome(create, compute, dispose));\r\n}\r\n\r\nexport function generateIndexed(create, compute, dispose) {\r\n    return mkSeq(() => {\r\n        let i = -1;\r\n        return Enumerator_generateWhileSome(create, (x) => {\r\n            i = ((i + 1) | 0);\r\n            return compute(i, x);\r\n        }, dispose);\r\n    });\r\n}\r\n\r\nexport function append(xs, ys) {\r\n    return concat([xs, ys]);\r\n}\r\n\r\nexport function cast(xs) {\r\n    return mkSeq(() => {\r\n        checkNonNull(\"source\", xs);\r\n        return Enumerator_cast(getEnumerator(xs));\r\n    });\r\n}\r\n\r\nexport function choose(chooser, xs) {\r\n    return generate(() => ofSeq(xs), (e) => {\r\n        let curr = void 0;\r\n        while ((curr == null) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\r\n            curr = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return curr;\r\n    }, (e_1) => {\r\n        e_1.Dispose();\r\n    });\r\n}\r\n\r\nexport function compareWith(comparer, xs, ys) {\r\n    const e1 = ofSeq(xs);\r\n    try {\r\n        const e2 = ofSeq(ys);\r\n        try {\r\n            let c = 0;\r\n            let b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\r\n            let b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\r\n            while (((c === 0) ? b1 : false) ? b2 : false) {\r\n                c = (comparer(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) | 0);\r\n                if (c === 0) {\r\n                    b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\r\n                    b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\r\n                }\r\n            }\r\n            return ((c !== 0) ? c : (b1 ? 1 : (b2 ? -1 : 0))) | 0;\r\n        }\r\n        finally {\r\n            e2.Dispose();\r\n        }\r\n    }\r\n    finally {\r\n        e1.Dispose();\r\n    }\r\n}\r\n\r\nexport function contains(value, xs, comparer) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let found = false;\r\n        while ((!found) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\r\n            found = comparer.Equals(value, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return found;\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function enumerateFromFunctions(create, moveNext, current) {\r\n    return generate(create, (x) => (moveNext(x) ? some(current(x)) : (void 0)), (x_1) => {\r\n        const matchValue = x_1;\r\n        if (isDisposable(matchValue)) {\r\n            matchValue.Dispose();\r\n        }\r\n    });\r\n}\r\n\r\nexport function enumerateThenFinally(source, compensation) {\r\n    const compensation_1 = compensation;\r\n    return mkSeq(() => {\r\n        try {\r\n            return Enumerator_enumerateThenFinally(compensation_1, ofSeq(source));\r\n        }\r\n        catch (matchValue) {\r\n            compensation_1();\r\n            throw matchValue;\r\n        }\r\n    });\r\n}\r\n\r\nexport function enumerateUsing(resource, source) {\r\n    const compensation = () => {\r\n        if (equals(resource, null)) {\r\n        }\r\n        else {\r\n            let copyOfStruct = resource;\r\n            copyOfStruct.Dispose();\r\n        }\r\n    };\r\n    return mkSeq(() => {\r\n        try {\r\n            return Enumerator_enumerateThenFinally(compensation, ofSeq(source(resource)));\r\n        }\r\n        catch (matchValue_1) {\r\n            compensation();\r\n            throw matchValue_1;\r\n        }\r\n    });\r\n}\r\n\r\nexport function enumerateWhile(guard, xs) {\r\n    return concat(unfold((i) => (guard() ? [xs, i + 1] : (void 0)), 0));\r\n}\r\n\r\nexport function filter(f, xs) {\r\n    return choose((x) => {\r\n        if (f(x)) {\r\n            return some(x);\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, xs);\r\n}\r\n\r\nexport function exists(predicate, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let found = false;\r\n        while ((!found) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\r\n            found = predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return found;\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function exists2(predicate, xs, ys) {\r\n    const e1 = ofSeq(xs);\r\n    try {\r\n        const e2 = ofSeq(ys);\r\n        try {\r\n            let found = false;\r\n            while (((!found) ? e1[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\r\n                found = predicate(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            return found;\r\n        }\r\n        finally {\r\n            e2.Dispose();\r\n        }\r\n    }\r\n    finally {\r\n        e1.Dispose();\r\n    }\r\n}\r\n\r\nexport function exactlyOne(xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                throw (new Error((SR_inputSequenceTooLong + \"\\\\nParameter name: \") + \"source\"));\r\n            }\r\n            else {\r\n                return v;\r\n            }\r\n        }\r\n        else {\r\n            throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\r\n        }\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function tryExactlyOne(xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? (void 0) : some(v);\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function tryFind(predicate, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let res = void 0;\r\n        while ((res == null) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\r\n            const c = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            if (predicate(c)) {\r\n                res = some(c);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function find(predicate, xs) {\r\n    const matchValue = tryFind(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindBack(predicate, xs) {\r\n    return tryFindBack_1(predicate, toArray(xs));\r\n}\r\n\r\nexport function findBack(predicate, xs) {\r\n    const matchValue = tryFindBack(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindIndex(predicate, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        const loop = (i_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const i = i_mut;\r\n                if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    if (predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) {\r\n                        return i;\r\n                    }\r\n                    else {\r\n                        i_mut = (i + 1);\r\n                        continue loop;\r\n                    }\r\n                }\r\n                else {\r\n                    return void 0;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(0);\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function findIndex(predicate, xs) {\r\n    const matchValue = tryFindIndex(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound() | 0;\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function tryFindIndexBack(predicate, xs) {\r\n    return tryFindIndexBack_1(predicate, toArray(xs));\r\n}\r\n\r\nexport function findIndexBack(predicate, xs) {\r\n    const matchValue = tryFindIndexBack(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound() | 0;\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function fold(folder, state, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let acc = state;\r\n        while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            acc = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return acc;\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function foldBack(folder, xs, state) {\r\n    return foldBack_1(folder, toArray(xs), state);\r\n}\r\n\r\nexport function fold2(folder, state, xs, ys) {\r\n    const e1 = ofSeq(xs);\r\n    try {\r\n        const e2 = ofSeq(ys);\r\n        try {\r\n            let acc = state;\r\n            while (e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\r\n                acc = folder(acc, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            return acc;\r\n        }\r\n        finally {\r\n            e2.Dispose();\r\n        }\r\n    }\r\n    finally {\r\n        e1.Dispose();\r\n    }\r\n}\r\n\r\nexport function foldBack2(folder, xs, ys, state) {\r\n    return foldBack2_1(folder, toArray(xs), toArray(ys), state);\r\n}\r\n\r\nexport function forAll(predicate, xs) {\r\n    return !exists((x) => (!predicate(x)), xs);\r\n}\r\n\r\nexport function forAll2(predicate, xs, ys) {\r\n    return !exists2((x, y) => (!predicate(x, y)), xs, ys);\r\n}\r\n\r\nexport function tryHead(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return tryHead_1(xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return tryHead_2(xs);\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0);\r\n        }\r\n        finally {\r\n            e.Dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport function head(xs) {\r\n    const matchValue = tryHead(xs);\r\n    if (matchValue == null) {\r\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function initialize(count, f) {\r\n    return unfold((i) => ((i < count) ? [f(i), i + 1] : (void 0)), 0);\r\n}\r\n\r\nexport function initializeInfinite(f) {\r\n    return initialize(2147483647, f);\r\n}\r\n\r\nexport function isEmpty(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return xs.length === 0;\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return isEmpty_1(xs);\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            return !e[\"System.Collections.IEnumerator.MoveNext\"]();\r\n        }\r\n        finally {\r\n            e.Dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport function tryItem(index, xs) {\r\n    if (isArrayLike(xs)) {\r\n        return tryItem_1(index, xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return tryItem_2(index, xs);\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            const loop = (index_1_mut) => {\r\n                loop:\r\n                while (true) {\r\n                    const index_1 = index_1_mut;\r\n                    if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                        return void 0;\r\n                    }\r\n                    else if (index_1 === 0) {\r\n                        return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n                    }\r\n                    else {\r\n                        index_1_mut = (index_1 - 1);\r\n                        continue loop;\r\n                    }\r\n                    break;\r\n                }\r\n            };\r\n            return loop(index);\r\n        }\r\n        finally {\r\n            e.Dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport function item(index, xs) {\r\n    const matchValue = tryItem(index, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function iterate(action, xs) {\r\n    fold((unitVar0, x) => {\r\n        action(x);\r\n    }, void 0, xs);\r\n}\r\n\r\nexport function iterate2(action, xs, ys) {\r\n    fold2((unitVar0, x, y) => {\r\n        action(x, y);\r\n    }, void 0, xs, ys);\r\n}\r\n\r\nexport function iterateIndexed(action, xs) {\r\n    void fold((i, x) => {\r\n        action(i, x);\r\n        return (i + 1) | 0;\r\n    }, 0, xs);\r\n}\r\n\r\nexport function iterateIndexed2(action, xs, ys) {\r\n    void fold2((i, x, y) => {\r\n        action(i, x, y);\r\n        return (i + 1) | 0;\r\n    }, 0, xs, ys);\r\n}\r\n\r\nexport function tryLast(xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        const loop = (acc_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const acc = acc_mut;\r\n                if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    return acc;\r\n                }\r\n                else {\r\n                    acc_mut = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                    continue loop;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function last(xs) {\r\n    const matchValue = tryLast(xs);\r\n    if (matchValue == null) {\r\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function length(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return xs.length | 0;\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return length_1(xs) | 0;\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            let count = 0;\r\n            while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                count = ((count + 1) | 0);\r\n            }\r\n            return count | 0;\r\n        }\r\n        finally {\r\n            e.Dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport function map(mapping, xs) {\r\n    return generate(() => ofSeq(xs), (e) => (e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(mapping(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0)), (e_1) => {\r\n        e_1.Dispose();\r\n    });\r\n}\r\n\r\nexport function mapIndexed(mapping, xs) {\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => (e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(mapping(i, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0)), (e_1) => {\r\n        e_1.Dispose();\r\n    });\r\n}\r\n\r\nexport function indexed(xs) {\r\n    return mapIndexed((i, x) => [i, x], xs);\r\n}\r\n\r\nexport function map2(mapping, xs, ys) {\r\n    return generate(() => [ofSeq(xs), ofSeq(ys)], (tupledArg) => {\r\n        const e1 = tupledArg[0];\r\n        const e2 = tupledArg[1];\r\n        return (e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }, (tupledArg_1) => {\r\n        try {\r\n            tupledArg_1[0].Dispose();\r\n        }\r\n        finally {\r\n            tupledArg_1[1].Dispose();\r\n        }\r\n    });\r\n}\r\n\r\nexport function mapIndexed2(mapping, xs, ys) {\r\n    return generateIndexed(() => [ofSeq(xs), ofSeq(ys)], (i, tupledArg) => {\r\n        const e1 = tupledArg[0];\r\n        const e2 = tupledArg[1];\r\n        return (e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(mapping(i, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }, (tupledArg_1) => {\r\n        try {\r\n            tupledArg_1[0].Dispose();\r\n        }\r\n        finally {\r\n            tupledArg_1[1].Dispose();\r\n        }\r\n    });\r\n}\r\n\r\nexport function map3(mapping, xs, ys, zs) {\r\n    return generate(() => [ofSeq(xs), ofSeq(ys), ofSeq(zs)], (tupledArg) => {\r\n        const e1 = tupledArg[0];\r\n        const e2 = tupledArg[1];\r\n        const e3 = tupledArg[2];\r\n        return ((e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? e3[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e3[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }, (tupledArg_1) => {\r\n        try {\r\n            tupledArg_1[0].Dispose();\r\n        }\r\n        finally {\r\n            try {\r\n                tupledArg_1[1].Dispose();\r\n            }\r\n            finally {\r\n                tupledArg_1[2].Dispose();\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function readOnly(xs) {\r\n    checkNonNull(\"source\", xs);\r\n    return map((x) => x, xs);\r\n}\r\n\r\nexport function cache(xs) {\r\n    let cached = false;\r\n    const xsCache = [];\r\n    return delay(() => {\r\n        if (!cached) {\r\n            cached = true;\r\n            return map((x) => {\r\n                void (xsCache.push(x));\r\n                return x;\r\n            }, xs);\r\n        }\r\n        else {\r\n            return xsCache;\r\n        }\r\n    });\r\n}\r\n\r\nexport function allPairs(xs, ys) {\r\n    const ysCache = cache(ys);\r\n    return delay(() => concat(map((x) => map((y) => [x, y], ysCache), xs)));\r\n}\r\n\r\nexport function mapFold(mapping, state, xs) {\r\n    const patternInput = mapFold_1(mapping, state, toArray(xs));\r\n    return [readOnly(patternInput[0]), patternInput[1]];\r\n}\r\n\r\nexport function mapFoldBack(mapping, xs, state) {\r\n    const patternInput = mapFoldBack_1(mapping, toArray(xs), state);\r\n    return [readOnly(patternInput[0]), patternInput[1]];\r\n}\r\n\r\nexport function tryPick(chooser, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let res = void 0;\r\n        while ((res == null) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\r\n            res = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return res;\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function pick(chooser, xs) {\r\n    const matchValue = tryPick(chooser, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function reduce(folder, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        const loop = (acc_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const acc = acc_mut;\r\n                if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    acc_mut = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return acc;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            return loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        else {\r\n            throw (new Error(SR_inputSequenceEmpty));\r\n        }\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function reduceBack(folder, xs) {\r\n    const arr = toArray(xs);\r\n    if (arr.length > 0) {\r\n        return arr.reduceRight(folder);\r\n    }\r\n    else {\r\n        throw (new Error(SR_inputSequenceEmpty));\r\n    }\r\n}\r\n\r\nexport function replicate(n, x) {\r\n    return initialize(n, (_arg1) => x);\r\n}\r\n\r\nexport function reverse(xs) {\r\n    return delay(() => ofArray(reverse_1(toArray(xs))));\r\n}\r\n\r\nexport function scan(folder, state, xs) {\r\n    return delay(() => {\r\n        let acc = state;\r\n        return concat([singleton(state), map((x) => {\r\n            acc = folder(acc, x);\r\n            return acc;\r\n        }, xs)]);\r\n    });\r\n}\r\n\r\nexport function scanBack(folder, xs, state) {\r\n    return delay(() => ofArray(scanBack_1(folder, toArray(xs), state)));\r\n}\r\n\r\nexport function skip(count, xs) {\r\n    return mkSeq(() => {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            for (let i = 1; i <= count; i++) {\r\n                if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\r\n                }\r\n            }\r\n            return Enumerator_enumerateThenFinally(() => {\r\n            }, e);\r\n        }\r\n        catch (matchValue) {\r\n            e.Dispose();\r\n            throw matchValue;\r\n        }\r\n    });\r\n}\r\n\r\nexport function skipWhile(predicate, xs) {\r\n    return delay(() => {\r\n        let skipped = true;\r\n        return filter((x) => {\r\n            if (skipped) {\r\n                skipped = predicate(x);\r\n            }\r\n            return !skipped;\r\n        }, xs);\r\n    });\r\n}\r\n\r\nexport function tail(xs) {\r\n    return skip(1, xs);\r\n}\r\n\r\nexport function take(count, xs) {\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\r\n        if (i < count) {\r\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            else {\r\n                throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\r\n            }\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, (e_1) => {\r\n        e_1.Dispose();\r\n    });\r\n}\r\n\r\nexport function takeWhile(predicate, xs) {\r\n    return generate(() => ofSeq(xs), (e) => ((e[\"System.Collections.IEnumerator.MoveNext\"]() ? predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : false) ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0)), (e_1) => {\r\n        e_1.Dispose();\r\n    });\r\n}\r\n\r\nexport function truncate(count, xs) {\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => (((i < count) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0)), (e_1) => {\r\n        e_1.Dispose();\r\n    });\r\n}\r\n\r\nexport function zip(xs, ys) {\r\n    return map2((x, y) => [x, y], xs, ys);\r\n}\r\n\r\nexport function zip3(xs, ys, zs) {\r\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\r\n}\r\n\r\nexport function collect(mapping, xs) {\r\n    return delay(() => concat(map(mapping, xs)));\r\n}\r\n\r\nexport function where(predicate, xs) {\r\n    return filter(predicate, xs);\r\n}\r\n\r\nexport function pairwise(xs) {\r\n    return delay(() => ofArray(pairwise_1(toArray(xs))));\r\n}\r\n\r\nexport function splitInto(chunks, xs) {\r\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), splitInto_1(chunks, toArray(xs)))));\r\n}\r\n\r\nexport function windowed(windowSize, xs) {\r\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), windowed_1(windowSize, toArray(xs)))));\r\n}\r\n\r\nexport function transpose(xss) {\r\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), transpose_1(map_1((xs_1) => toArray(xs_1), toArray(xss))))));\r\n}\r\n\r\nexport function sortWith(comparer, xs) {\r\n    return delay(() => {\r\n        const arr = toArray(xs);\r\n        arr.sort(comparer);\r\n        return ofArray(arr);\r\n    });\r\n}\r\n\r\nexport function sort(xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(x, y), xs);\r\n}\r\n\r\nexport function sortBy(projection, xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(projection(x), projection(y)), xs);\r\n}\r\n\r\nexport function sortDescending(xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(x, y) * -1), xs);\r\n}\r\n\r\nexport function sortByDescending(projection, xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(projection(x), projection(y)) * -1), xs);\r\n}\r\n\r\nexport function sum(xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\r\n}\r\n\r\nexport function sumBy(f, xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\r\n}\r\n\r\nexport function maxBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function max(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function minBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function min(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function average(xs, averager) {\r\n    let count = 0;\r\n    const total = fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, x);\r\n    }, averager.GetZero(), xs);\r\n    if (count === 0) {\r\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: xs\"));\r\n    }\r\n    else {\r\n        return averager.DivideByInt(total, count);\r\n    }\r\n}\r\n\r\nexport function averageBy(f, xs, averager) {\r\n    let count = 0;\r\n    const total = fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, f(x));\r\n    }, averager.GetZero(), xs);\r\n    if (count === 0) {\r\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: xs\"));\r\n    }\r\n    else {\r\n        return averager.DivideByInt(total, count);\r\n    }\r\n}\r\n\r\nexport function permute(f, xs) {\r\n    return delay(() => ofArray(permute_1(f, toArray(xs))));\r\n}\r\n\r\nexport function chunkBySize(chunkSize, xs) {\r\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), chunkBySize_1(chunkSize, toArray(xs)))));\r\n}\r\n\r\n","import { some } from \"../fable-library.3.4.0/Option.js\";\nimport { create, isLeapYear } from \"../fable-library.3.4.0/Date.js\";\nimport { parse } from \"../fable-library.3.4.0/Int32.js\";\nimport { split, isNullOrWhiteSpace } from \"../fable-library.3.4.0/String.js\";\nimport { equalsWith } from \"../fable-library.3.4.0/Array.js\";\nimport { comparePrimitives } from \"../fable-library.3.4.0/Util.js\";\nimport react from \"react\";\n\nexport function DateParsing_$007CBetween$007C_$007C(x, y, input) {\n    if ((input >= x) ? (input <= y) : false) {\n        return some(void 0);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function DateParsing_isLeapYear(year) {\n    return isLeapYear(year);\n}\n\nexport function DateParsing_$007CInt$007C_$007C(input) {\n    try {\n        return parse(input, 511, false, 32);\n    }\n    catch (matchValue) {\n        return void 0;\n    }\n}\n\nexport function DateParsing_parse(input) {\n    try {\n        if (isNullOrWhiteSpace(input)) {\n            return void 0;\n        }\n        else {\n            const parts = split(input, [\"-\"], null, 0);\n            let patternInput;\n            let pattern_matching_result, month, year;\n            if ((!equalsWith((x, y) => comparePrimitives(x, y), parts, null)) ? (parts.length === 2) : false) {\n                const activePatternResult3137 = DateParsing_$007CInt$007C_$007C(parts[0]);\n                if (activePatternResult3137 != null) {\n                    const activePatternResult3138 = DateParsing_$007CInt$007C_$007C(parts[1]);\n                    if (activePatternResult3138 != null) {\n                        pattern_matching_result = 0;\n                        month = activePatternResult3138;\n                        year = activePatternResult3137;\n                    }\n                    else {\n                        pattern_matching_result = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    patternInput = [year, month, 1, 0, 0];\n                    break;\n                }\n                case 1: {\n                    let pattern_matching_result_1, day, month_1, year_1;\n                    if ((!equalsWith((x_1, y_1) => comparePrimitives(x_1, y_1), parts, null)) ? (parts.length === 3) : false) {\n                        const activePatternResult3134 = DateParsing_$007CInt$007C_$007C(parts[0]);\n                        if (activePatternResult3134 != null) {\n                            const activePatternResult3135 = DateParsing_$007CInt$007C_$007C(parts[1]);\n                            if (activePatternResult3135 != null) {\n                                const activePatternResult3136 = DateParsing_$007CInt$007C_$007C(parts[2]);\n                                if (activePatternResult3136 != null) {\n                                    pattern_matching_result_1 = 0;\n                                    day = activePatternResult3136;\n                                    month_1 = activePatternResult3135;\n                                    year_1 = activePatternResult3134;\n                                }\n                                else {\n                                    pattern_matching_result_1 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                    }\n                    else {\n                        pattern_matching_result_1 = 1;\n                    }\n                    switch (pattern_matching_result_1) {\n                        case 0: {\n                            patternInput = [year_1, month_1, day, 0, 0];\n                            break;\n                        }\n                        case 1: {\n                            let pattern_matching_result_2, day_1, month_2, year_2;\n                            if ((!equalsWith((x_2, y_2) => comparePrimitives(x_2, y_2), parts, null)) ? (parts.length === 3) : false) {\n                                const activePatternResult3132 = DateParsing_$007CInt$007C_$007C(parts[0]);\n                                if (activePatternResult3132 != null) {\n                                    const activePatternResult3133 = DateParsing_$007CInt$007C_$007C(parts[1]);\n                                    if (activePatternResult3133 != null) {\n                                        pattern_matching_result_2 = 0;\n                                        day_1 = parts[2];\n                                        month_2 = activePatternResult3133;\n                                        year_2 = activePatternResult3132;\n                                    }\n                                    else {\n                                        pattern_matching_result_2 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                            switch (pattern_matching_result_2) {\n                                case 0: {\n                                    if (day_1.indexOf(\"T\") >= 0) {\n                                        const matchValue = split(day_1, [\"T\"], null, 0);\n                                        let pattern_matching_result_3, parsedDay, time;\n                                        if ((!equalsWith((x_3, y_3) => comparePrimitives(x_3, y_3), matchValue, null)) ? (matchValue.length === 2) : false) {\n                                            const activePatternResult3131 = DateParsing_$007CInt$007C_$007C(matchValue[0]);\n                                            if (activePatternResult3131 != null) {\n                                                pattern_matching_result_3 = 0;\n                                                parsedDay = activePatternResult3131;\n                                                time = matchValue[1];\n                                            }\n                                            else {\n                                                pattern_matching_result_3 = 1;\n                                            }\n                                        }\n                                        else {\n                                            pattern_matching_result_3 = 1;\n                                        }\n                                        switch (pattern_matching_result_3) {\n                                            case 0: {\n                                                const matchValue_1 = split(time, [\":\"], null, 0);\n                                                let pattern_matching_result_4, hour, minute;\n                                                if ((!equalsWith((x_4, y_4) => comparePrimitives(x_4, y_4), matchValue_1, null)) ? (matchValue_1.length === 2) : false) {\n                                                    const activePatternResult3129 = DateParsing_$007CInt$007C_$007C(matchValue_1[0]);\n                                                    if (activePatternResult3129 != null) {\n                                                        const activePatternResult3130 = DateParsing_$007CInt$007C_$007C(matchValue_1[1]);\n                                                        if (activePatternResult3130 != null) {\n                                                            pattern_matching_result_4 = 0;\n                                                            hour = activePatternResult3129;\n                                                            minute = activePatternResult3130;\n                                                        }\n                                                        else {\n                                                            pattern_matching_result_4 = 1;\n                                                        }\n                                                    }\n                                                    else {\n                                                        pattern_matching_result_4 = 1;\n                                                    }\n                                                }\n                                                else {\n                                                    pattern_matching_result_4 = 1;\n                                                }\n                                                switch (pattern_matching_result_4) {\n                                                    case 0: {\n                                                        const matchValue_2 = [hour, minute];\n                                                        let pattern_matching_result_5;\n                                                        if (DateParsing_$007CBetween$007C_$007C(0, 59, matchValue_2[0]) != null) {\n                                                            if (DateParsing_$007CBetween$007C_$007C(0, 59, matchValue_2[1]) != null) {\n                                                                pattern_matching_result_5 = 0;\n                                                            }\n                                                            else {\n                                                                pattern_matching_result_5 = 1;\n                                                            }\n                                                        }\n                                                        else {\n                                                            pattern_matching_result_5 = 1;\n                                                        }\n                                                        switch (pattern_matching_result_5) {\n                                                            case 0: {\n                                                                patternInput = [year_2, month_2, parsedDay, hour, minute];\n                                                                break;\n                                                            }\n                                                            case 1: {\n                                                                patternInput = [-1, 1, 1, 0, 0];\n                                                                break;\n                                                            }\n                                                        }\n                                                        break;\n                                                    }\n                                                    case 1: {\n                                                        patternInput = [-1, 1, 1, 0, 0];\n                                                        break;\n                                                    }\n                                                }\n                                                break;\n                                            }\n                                            case 1: {\n                                                patternInput = [-1, 1, 1, 0, 0];\n                                                break;\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        patternInput = [-1, 1, 1, 0, 0];\n                                    }\n                                    break;\n                                }\n                                case 1: {\n                                    patternInput = [-1, 1, 1, 0, 0];\n                                    break;\n                                }\n                            }\n                            break;\n                        }\n                    }\n                    break;\n                }\n            }\n            const year_3 = patternInput[0] | 0;\n            const month_3 = patternInput[1] | 0;\n            const minute_1 = patternInput[4] | 0;\n            const hour_1 = patternInput[3] | 0;\n            const day_2 = patternInput[2] | 0;\n            if (year_3 <= 0) {\n                return void 0;\n            }\n            else {\n                const matchValue_3 = [month_3, day_2];\n                let pattern_matching_result_6;\n                if (matchValue_3[0] === 2) {\n                    if (DateParsing_$007CBetween$007C_$007C(1, 29, matchValue_3[1]) != null) {\n                        if (DateParsing_isLeapYear(year_3)) {\n                            pattern_matching_result_6 = 0;\n                        }\n                        else {\n                            pattern_matching_result_6 = 1;\n                        }\n                    }\n                    else {\n                        pattern_matching_result_6 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_6 = 1;\n                }\n                switch (pattern_matching_result_6) {\n                    case 0: {\n                        return create(year_3, month_3, day_2, hour_1, minute_1, 0);\n                    }\n                    case 1: {\n                        let pattern_matching_result_7;\n                        if (matchValue_3[0] === 2) {\n                            if (DateParsing_$007CBetween$007C_$007C(1, 28, matchValue_3[1]) != null) {\n                                if (!DateParsing_isLeapYear(year_3)) {\n                                    pattern_matching_result_7 = 0;\n                                }\n                                else {\n                                    pattern_matching_result_7 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_7 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_7 = 1;\n                        }\n                        switch (pattern_matching_result_7) {\n                            case 0: {\n                                return create(year_3, month_3, day_2, hour_1, minute_1, 0);\n                            }\n                            case 1: {\n                                let pattern_matching_result_8;\n                                if (matchValue_3[0] === 1) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 3) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 5) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 7) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 8) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 10) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 12) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_8 = 1;\n                                }\n                                switch (pattern_matching_result_8) {\n                                    case 0: {\n                                        return create(year_3, month_3, day_2, hour_1, minute_1, 0);\n                                    }\n                                    case 1: {\n                                        let pattern_matching_result_9;\n                                        if (matchValue_3[0] === 4) {\n                                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\n                                                pattern_matching_result_9 = 0;\n                                            }\n                                            else {\n                                                pattern_matching_result_9 = 1;\n                                            }\n                                        }\n                                        else if (matchValue_3[0] === 6) {\n                                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\n                                                pattern_matching_result_9 = 0;\n                                            }\n                                            else {\n                                                pattern_matching_result_9 = 1;\n                                            }\n                                        }\n                                        else if (matchValue_3[0] === 9) {\n                                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\n                                                pattern_matching_result_9 = 0;\n                                            }\n                                            else {\n                                                pattern_matching_result_9 = 1;\n                                            }\n                                        }\n                                        else if (matchValue_3[0] === 11) {\n                                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\n                                                pattern_matching_result_9 = 0;\n                                            }\n                                            else {\n                                                pattern_matching_result_9 = 1;\n                                            }\n                                        }\n                                        else {\n                                            pattern_matching_result_9 = 1;\n                                        }\n                                        switch (pattern_matching_result_9) {\n                                            case 0: {\n                                                return create(year_3, month_3, day_2, hour_1, minute_1, 0);\n                                            }\n                                            case 1: {\n                                                return void 0;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    catch (matchValue_4) {\n        return void 0;\n    }\n}\n\nexport const Interop_reactApi = react;\n\n","import { useLayoutEffectWithDeps, useLayoutEffect, useEffectWithDeps, useEffect, useDebugValue } from \"./ReactInterop.js\";\nimport { class_type } from \"../fable-library.3.4.0/Reflection.js\";\nimport { iterate } from \"../fable-library.3.4.0/Seq.js\";\nimport { defaultArg, some, toArray } from \"../fable-library.3.4.0/Option.js\";\nimport { Interop_reactApi } from \"./Interop.fs.js\";\nimport { curry, uncurry } from \"../fable-library.3.4.0/Util.js\";\nimport { useState } from \"react\";\nimport * as react from \"react\";\n\nexport const ReactInterop_useDebugValueWithFormatter = useDebugValue;\n\nexport const ReactInterop_useEffect = useEffect;\n\nexport const ReactInterop_useEffectWithDeps = useEffectWithDeps;\n\nexport const ReactInterop_useLayoutEffect = useLayoutEffect;\n\nexport const ReactInterop_useLayoutEffectWithDeps = useLayoutEffectWithDeps;\n\nexport class Internal {\n    constructor() {\n    }\n}\n\nexport function Internal$reflection() {\n    return class_type(\"Feliz.Internal\", void 0, Internal);\n}\n\nexport function Internal_$ctor() {\n    return new Internal();\n}\n\n\nexport function Internal_functionComponent_Z1B155329(renderElement, name, withKey) {\n    iterate((name_1) => {\n        renderElement.displayName = name_1;\n    }, toArray(name));\n    console.warn(some(\"Feliz: using React.functionComponent in Fable 3 is obsolete, please consider using the [\\u003cReactComponent\\u003e] attribute instead which makes Feliz output better Javascript code that is compatible with react-refresh\"));\n    return (props) => Interop_reactApi.createElement(renderElement, Internal_propsWithKey(withKey, props));\n}\n\nexport function Internal_memo_Z603636D8(renderElement, name, areEqual, withKey) {\n    const memoElementType = Interop_reactApi.memo(renderElement, uncurry(2, defaultArg(curry(2, areEqual), null)));\n    iterate((name_1) => {\n        renderElement.displayName = name_1;\n    }, toArray(name));\n    return (props) => Interop_reactApi.createElement(memoElementType, Internal_propsWithKey(withKey, props));\n}\n\nfunction Internal_propsWithKey(withKey, props) {\n    if (withKey == null) {\n        return props;\n    }\n    else {\n        const f = withKey;\n        props.key = f(props);\n        return props;\n    }\n}\n\nexport class React {\n    constructor() {\n    }\n}\n\nexport function React$reflection() {\n    return class_type(\"Feliz.React\", void 0, React);\n}\n\nexport function React_createDisposable_3A5B6456(dispose) {\n    return {\n        Dispose() {\n            dispose();\n        },\n    };\n}\n\nexport function useReact_useState_FCFD9EF(initializer) {\n    return Interop_reactApi.useState(initializer);\n}\n\nexport function useReact_useReducer_2B9E6EA0(update, initialState) {\n    return Interop_reactApi.useReducer(update, initialState);\n}\n\nexport function useReact_useEffect_Z5ECA432F(effect) {\n    ReactInterop_useEffect(effect);\n}\n\nexport function useReact_useEffect_Z5234A374(effect, dependencies) {\n    ReactInterop_useEffectWithDeps(effect, dependencies);\n}\n\nexport function useReact_useLayoutEffect_Z5ECA432F(effect) {\n    ReactInterop_useLayoutEffect(effect);\n}\n\nexport function useReact_useLayoutEffect_Z5234A374(effect, dependencies) {\n    ReactInterop_useLayoutEffectWithDeps(effect, dependencies);\n}\n\nexport function useReact_useLayoutEffect_3A5B6456(effect) {\n    ReactInterop_useLayoutEffect((_arg1) => {\n        effect();\n        return React_createDisposable_3A5B6456(() => {\n        });\n    });\n}\n\nexport function useReact_useLayoutEffect_Z101E1A95(effect, dependencies) {\n    ReactInterop_useLayoutEffectWithDeps((_arg2) => {\n        effect();\n        return React_createDisposable_3A5B6456(() => {\n        });\n    }, dependencies);\n}\n\nexport function useReact_useEffectOnce_3A5B6456(effect) {\n    useReact_useEffect_Z101E1A95(effect, []);\n}\n\nexport function useReact_useEffectOnce_Z5ECA432F(effect) {\n    useReact_useEffect_Z5234A374(effect, []);\n}\n\nexport function useReact_useEffectOnce_6E825304(effect) {\n    useReact_useEffect_Z5234A374(() => {\n        const disposeOption = effect();\n        return {\n            Dispose() {\n                iterate((d) => {\n                    let copyOfStruct = d;\n                    copyOfStruct.Dispose();\n                }, toArray(disposeOption));\n            },\n        };\n    }, []);\n}\n\nexport function useReact_useEffect_3A5B6456(effect) {\n    ReactInterop_useEffect((_arg3) => {\n        effect();\n        return React_createDisposable_3A5B6456(() => {\n        });\n    });\n}\n\nexport function useReact_useEffect_Z101E1A95(effect, dependencies) {\n    ReactInterop_useEffectWithDeps((_arg4) => {\n        effect();\n        return React_createDisposable_3A5B6456(() => {\n        });\n    }, dependencies);\n}\n\nexport function useReact_useDebugValue_Z721C83C5(value) {\n    ReactInterop_useDebugValueWithFormatter(value, (x) => x);\n}\n\nexport function useReact_useDebugValue_77A55D6D(value, formatter) {\n    ReactInterop_useDebugValueWithFormatter(value, formatter);\n}\n\nexport function useReact_useCallback_93353E(callbackFunction, dependencies) {\n    return Interop_reactApi.useCallback(callbackFunction, defaultArg(dependencies, []));\n}\n\nexport function useReact_useRef_1505(initialValue) {\n    return Interop_reactApi.useRef(initialValue);\n}\n\nexport function useReact_useInputRef() {\n    return useReact_useRef_1505(void 0);\n}\n\nexport function useReact_useButtonRef() {\n    return useReact_useRef_1505(void 0);\n}\n\nexport function useReact_useElementRef() {\n    return useReact_useRef_1505(void 0);\n}\n\nexport function useReact_useMemo_CF4EA67(createFunction, dependencies) {\n    return Interop_reactApi.useMemo(createFunction, defaultArg(dependencies, []));\n}\n\nexport function React_functionComponent_2F9D7239(render, withKey) {\n    return Internal_functionComponent_Z1B155329(render, void 0, withKey);\n}\n\nexport function React_functionComponent_Z4C5FE1BE(name, render, withKey) {\n    return Internal_functionComponent_Z1B155329(render, name, withKey);\n}\n\nexport function React_functionComponent_19A12FB2(render, withKey) {\n    return Internal_functionComponent_Z1B155329((arg) => react.createElement(react.Fragment, {}, ...render(arg)), void 0, withKey);\n}\n\nexport function React_functionComponent_2E1DD889(name, render, withKey) {\n    return Internal_functionComponent_Z1B155329((arg) => react.createElement(react.Fragment, {}, ...render(arg)), name, withKey);\n}\n\nexport function React_memo_62A0F746(render, withKey, areEqual) {\n    return Internal_memo_Z603636D8(render, void 0, areEqual, withKey);\n}\n\nexport function React_memo_6648A89D(name, render, withKey, areEqual) {\n    return Internal_memo_Z603636D8(render, name, areEqual, withKey);\n}\n\nexport function React_memo_C2C6BED(render, withKey, areEqual) {\n    return Internal_memo_Z603636D8((arg) => react.createElement(react.Fragment, {}, ...render(arg)), void 0, areEqual, withKey);\n}\n\nexport function React_memo_Z4FCC584A(name, render, withKey, areEqual) {\n    return Internal_memo_Z603636D8((arg) => react.createElement(react.Fragment, {}, ...render(arg)), name, areEqual, withKey);\n}\n\nexport function React_createContext_1AE444D8(name, defaultValue) {\n    const contextObject = Interop_reactApi.createContext(defaultArg(defaultValue, void 0));\n    iterate((name_1) => {\n        contextObject.displayName = name_1;\n    }, toArray(name));\n    return contextObject;\n}\n\nexport function React_contextProvider_34D9BBBD(contextObject, contextValue, child) {\n    return Interop_reactApi.createElement(contextObject.Provider, {\n        value: contextValue,\n    }, child);\n}\n\nexport function React_contextProvider_138D2F56(contextObject, contextValue, children) {\n    return Interop_reactApi.createElement(contextObject.Provider, {\n        value: contextValue,\n    }, ...children);\n}\n\nexport function React_contextConsumer_Z68910595(contextObject, render) {\n    return Interop_reactApi.createElement(contextObject.Consumer, null, render);\n}\n\nexport function React_contextConsumer_56D53A40(contextObject, render) {\n    return Interop_reactApi.createElement(contextObject.Consumer, null, (arg) => react.createElement(react.Fragment, {}, ...render(arg)));\n}\n\nexport function useReact_useContext_37FA55CF(contextObject) {\n    return Interop_reactApi.useContext(contextObject);\n}\n\nexport function useReact_useCallbackRef_7C4B0DD6(callback) {\n    const lastRenderCallbackRef = useReact_useRef_1505(callback);\n    const callbackRef = useReact_useCallback_93353E((arg) => lastRenderCallbackRef.current(arg), []);\n    useReact_useLayoutEffect_3A5B6456(() => {\n        lastRenderCallbackRef.current = callback;\n    });\n    return callbackRef;\n}\n\nexport const React_useStateWithUpdater_1505 = useState;\n\nexport function React_forwardRef_3790D881(render) {\n    const forwardRefType = Interop_reactApi.forwardRef((props, ref) => render([props, ref]));\n    return (tupledArg) => {\n        const propsObj = Object.assign({}, tupledArg[0]);\n        propsObj.ref = tupledArg[1];\n        return Interop_reactApi.createElement(forwardRefType, propsObj);\n    };\n}\n\nexport function React_forwardRef_7DC3DB1A(name, render) {\n    const forwardRefType = Interop_reactApi.forwardRef((props, ref) => render([props, ref]));\n    render.displayName = name;\n    return (tupledArg) => {\n        const propsObj = Object.assign({}, tupledArg[0]);\n        propsObj.ref = tupledArg[1];\n        return Interop_reactApi.createElement(forwardRefType, propsObj);\n    };\n}\n\nexport function React_strictMode_6E3A73D(children) {\n    return Interop_reactApi.createElement(Interop_reactApi.StrictMode, void 0, ...children);\n}\n\nexport function React_lazy$0027_4712D3AE(dynamicImport, props) {\n    return Interop_reactApi.createElement(Interop_reactApi.lazy((() => dynamicImport)), props);\n}\n\nexport function React_lazy$0027_Z3D8450FC(dynamicImport, props) {\n    return Interop_reactApi.createElement(Interop_reactApi.lazy(dynamicImport), props);\n}\n\nexport function React_suspense_6E3A73D(children) {\n    let o;\n    return Interop_reactApi.createElement(Interop_reactApi.Suspense, (o = {\n        fallback: null,\n    }, Object.assign({}, o)), ...children);\n}\n\nexport function React_suspense_Z3796A576(children, fallback) {\n    let o;\n    return Interop_reactApi.createElement(Interop_reactApi.Suspense, (o = {\n        fallback: fallback,\n    }, Object.assign({}, o)), ...children);\n}\n\nexport function useReact_useImperativeHandle_596DDC25(ref, createHandle) {\n    Interop_reactApi.useImperativeHandle(ref, createHandle);\n}\n\nexport function useReact_useImperativeHandle_Z12F09548(ref, createHandle, dependencies) {\n    Interop_reactApi.useImperativeHandle(ref, createHandle, dependencies);\n}\n\nexport function useFeliz_React__React_useState_Static_1505(initial) {\n    return Interop_reactApi.useState(initial);\n}\n\nexport const Feliz_React__React_useStateWithUpdater_Static_FCFD9EF = useState;\n\n","import {\r\n    useEffect as useEffectReact,\r\n    useLayoutEffect as useLayoutEffectReact,\r\n    useDebugValue as useDebugValueReact } from 'react'\r\n\r\nexport const useEffect = getDisposable => {\r\n    useEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    })\r\n}\r\n\r\nexport const useEffectWithDeps = (getDisposable, deps) => {\r\n    useEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    }, deps)\r\n}\r\n\r\nexport const useLayoutEffect = getDisposable => {\r\n    useLayoutEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    })\r\n}\r\n\r\nexport const useLayoutEffectWithDeps = (getDisposable, deps) => {\r\n    useLayoutEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    }, deps)\r\n}\r\n\r\nexport const useDebugValue = (value, formatter) => useDebugValueReact(value, formatter)","import { bind, map } from \"../fable-library.3.4.0/Option.js\";\n\nexport const Impl_allowsPassiveEvents = (() => {\n    let passive = false;\n    try {\n        if ((typeof window !== 'undefined') ? (typeof window.addEventListener === 'function') : false) {\n            window.addEventListener(\"testPassiveEventSupport\", (value) => {\n            }, {\n                passive: true,\n            });\n            window.removeEventListener(\"testPassiveEventSupport\", (value_1) => {\n            });\n        }\n    }\n    catch (matchValue) {\n    }\n    return passive;\n})();\n\nexport const Impl_defaultPassive = {\n    passive: true,\n};\n\nexport function Impl_adjustPassive(maybeOptions) {\n    return map((options) => {\n        if (options.passive ? (!Impl_allowsPassiveEvents) : false) {\n            return {\n                capture: options.capture,\n                once: options.once,\n                passive: false,\n            };\n        }\n        else {\n            return options;\n        }\n    }, maybeOptions);\n}\n\nexport function Impl_createRemoveOptions(maybeOptions) {\n    return bind((options) => {\n        if (options.capture) {\n            return {\n                capture: true,\n            };\n        }\n        else {\n            return void 0;\n        }\n    }, maybeOptions);\n}\n\n","import { trim } from \"./String.js\";\n// RFC 4122 compliant. From https://stackoverflow.com/a/13653180/3922220\n// const guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/;\n// Relax GUID parsing, see #1637\nconst guidRegex = /^[\\(\\{]{0,2}[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}[\\)\\}]{0,2}$/;\nconst guidRegexNoHyphen = /^([0-9a-f]{8})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{12})$/;\nconst guidRegexHex = /^\\{0x[0-9a-f]{8},(0x[0-9a-f]{4},){2}\\{(0x[0-9a-f]{2},){7}0x[0-9a-f]{2}\\}\\}$/;\nconst guidHexCaptures = /^([0-9a-f]{8})-(([0-9a-f]{4})-)(([0-9a-f]{4})-)([0-9a-f]{2})([0-9a-f]{2})-([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/;\nexport function toString(str, format, _provider) {\n    if (format && (format === null || format === void 0 ? void 0 : format.length) > 0) {\n        switch (format) {\n            case \"N\":\n                return str.replace(/-/g, '');\n            case \"D\":\n                return str;\n            case \"B\":\n                return \"{\" + str + \"}\";\n            case \"P\":\n                return \"(\" + str + \")\";\n            case \"X\":\n                return str.replace(guidHexCaptures, \"{0x$1,0x$3,0x$5,{0x$6,0x$7,0x$8,0x$9,0x$10,0x$11,0x$12,0x$13}}\");\n            default:\n                throw new Error(\"Unrecognized Guid print format\");\n        }\n    }\n    else {\n        return str;\n    }\n}\n/** Validates UUID as specified in RFC4122 (versions 1-5). */\nexport function parse(str) {\n    function hyphenateGuid(str) {\n        return str.replace(guidRegexNoHyphen, \"$1-$2-$3-$4-$5\");\n    }\n    const wsTrimAndLowered = str.trim().toLowerCase();\n    if (guidRegex.test(wsTrimAndLowered)) {\n        return trim(wsTrimAndLowered, \"{\", \"}\", \"(\", \")\");\n    }\n    else if (guidRegexNoHyphen.test(wsTrimAndLowered)) {\n        return hyphenateGuid(wsTrimAndLowered);\n    }\n    else if (guidRegexHex.test(wsTrimAndLowered)) {\n        return hyphenateGuid(wsTrimAndLowered.replace(/[\\{\\},]|0x/g, ''));\n    }\n    else {\n        throw new Error(\"Guid should contain 32 digits with 4 dashes: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\");\n    }\n}\nexport function tryParse(str, defValue) {\n    try {\n        defValue.contents = parse(str);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n// From https://gist.github.com/LeverOne/1308368\nexport function newGuid() {\n    let b = \"\";\n    for (let a = 0; a++ < 36;) {\n        b += a * 51 & 52\n            ? (a ^ 15 ? 8 ^ Math.random() * (a ^ 20 ? 16 : 4) : 4).toString(16)\n            : \"-\";\n    }\n    return b;\n}\n// Maps for number <-> hex string conversion\nlet _convertMapsInitialized = false;\nlet _byteToHex;\nlet _hexToByte;\nfunction initConvertMaps() {\n    _byteToHex = new Array(256);\n    _hexToByte = {};\n    for (let i = 0; i < 256; i++) {\n        _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n        _hexToByte[_byteToHex[i]] = i;\n    }\n    _convertMapsInitialized = true;\n}\n/** Parse a UUID into it's component bytes */\n// Adapted from https://github.com/zefferus/uuid-parse\nexport function guidToArray(s) {\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    let i = 0;\n    const buf = new Uint8Array(16);\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, ((oct) => {\n        switch (i) {\n            // .NET saves first three byte groups with different endianness\n            // See https://stackoverflow.com/a/16722909/3922220\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n                buf[3 - i++] = _hexToByte[oct];\n                break;\n            case 4:\n            case 5:\n                buf[9 - i++] = _hexToByte[oct];\n                break;\n            case 6:\n            case 7:\n                buf[13 - i++] = _hexToByte[oct];\n                break;\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n                buf[i++] = _hexToByte[oct];\n                break;\n        }\n    }));\n    // Zero out remaining bytes if string was short\n    while (i < 16) {\n        buf[i++] = 0;\n    }\n    return buf;\n}\n/** Convert UUID byte array into a string */\nexport function arrayToGuid(buf) {\n    if (buf.length !== 16) {\n        throw new Error(\"Byte array for GUID must be exactly 16 bytes long\");\n    }\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    const guid = _byteToHex[buf[3]] + _byteToHex[buf[2]] +\n        _byteToHex[buf[1]] + _byteToHex[buf[0]] + \"-\" +\n        _byteToHex[buf[5]] + _byteToHex[buf[4]] + \"-\" +\n        _byteToHex[buf[7]] + _byteToHex[buf[6]] + \"-\" +\n        _byteToHex[buf[8]] + _byteToHex[buf[9]] + \"-\" +\n        _byteToHex[buf[10]] + _byteToHex[buf[11]] +\n        _byteToHex[buf[12]] + _byteToHex[buf[13]] +\n        _byteToHex[buf[14]] + _byteToHex[buf[15]];\n    return guid;\n}\n","// Adapted from https://github.com/MikeMcl/big.js/blob/0f94dc9110d55c4f324a47ba6a2e832ce23ac589/big.mjs\n/* tslint:disable */\nimport { combineHashCodes } from \"../Util.js\";\nimport { symbol } from \"../Numeric.js\";\n// The shared prototype object.\nvar P = {\n    GetHashCode() { return combineHashCodes([this.s, this.e].concat(this.c)); },\n    Equals(x) { return !this.cmp(x); },\n    CompareTo(x) { return this.cmp(x); },\n    [symbol]() {\n        const _this = this;\n        return {\n            multiply: y => _this.mul(y),\n            toPrecision: sd => _this.toPrecision(sd),\n            toExponential: dp => _this.toExponential(dp),\n            toFixed: dp => _this.toFixed(dp),\n            toHex: () => (Number(_this) >>> 0).toString(16),\n        };\n    }\n};\n/*\n *  big.js v6.0.3\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\n *  Copyright (c) 2020 Michael Mclaughlin\n *  https://github.com/MikeMcl/big.js/LICENCE.md\n */\n/************************************** EDITABLE DEFAULTS *****************************************/\n// The default values below must be integers within the stated ranges.\n/*\n * The maximum number of decimal places (DP) of the results of operations involving division:\n * div and sqrt, and pow with negative exponents.\n */\nvar DP = 28, // 0 to MAX_DP\n/*\n * The rounding mode (RM) used when rounding to the above decimal places.\n *\n *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\n *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\n *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\n *  3  Away from zero.                                  (ROUND_UP)\n */\nRM = 1, // 0, 1, 2 or 3\n// The maximum value of DP and Big.DP.\nMAX_DP = 1E6, // 0 to 1000000\n// The maximum magnitude of the exponent argument to the pow method.\nMAX_POWER = 1E6, // 1 to 1000000\n/*\n * The negative exponent (NE) at and beneath which toString returns exponential notation.\n * (JavaScript numbers: -7)\n * -1000000 is the minimum recommended exponent value of a Big.\n */\nNE = -29, // 0 to -1000000\n/*\n * The positive exponent (PE) at and above which toString returns exponential notation.\n * (JavaScript numbers: 21)\n * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\n */\nPE = 29, // 0 to 1000000\n/*\n * When true, an error will be thrown if a primitive number is passed to the Big constructor,\n * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\n * primitive number without a loss of precision.\n */\nSTRICT = false, // true or false\n/**************************************************************************************************/\n// Error messages.\nNAME = '[big.js] ', INVALID = NAME + 'Invalid ', INVALID_DP = INVALID + 'decimal places', INVALID_RM = INVALID + 'rounding mode', DIV_BY_ZERO = NAME + 'Division by zero', UNDEFINED = void 0, NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n/*\n * Create and return a Big constructor.\n */\nfunction _Big_() {\n    /*\n     * The Big constructor and exported function.\n     * Create and return a new instance of a Big number object.\n     *\n     * n {number|string|Big} A numeric value.\n     */\n    function Big(n) {\n        var x = this;\n        // Enable constructor usage without new.\n        if (!(x instanceof Big))\n            return n === UNDEFINED ? _Big_() : new Big(n);\n        // Duplicate.\n        if (n instanceof Big) {\n            x.s = n.s;\n            x.e = n.e;\n            x.c = n.c.slice();\n            normalize(x);\n        }\n        else {\n            if (typeof n !== 'string') {\n                if (Big.strict === true) {\n                    throw TypeError(INVALID + 'number');\n                }\n                // Minus zero?\n                n = n === 0 && 1 / n < 0 ? '-0' : String(n);\n            }\n            parse(x, n);\n        }\n        // Retain a reference to this Big constructor.\n        // Shadow Big.prototype.constructor which points to Object.\n        x.constructor = Big;\n    }\n    Big.prototype = P;\n    Big.DP = DP;\n    Big.RM = RM;\n    Big.NE = NE;\n    Big.PE = PE;\n    Big.strict = STRICT;\n    return Big;\n}\nfunction normalize(x) {\n    // x = round(x, DP, 0);\n    if (x.c.length > 1 && !x.c[0]) {\n        let i = x.c.findIndex(x => x);\n        x.c = x.c.slice(i);\n        x.e = x.e - i;\n    }\n}\n/*\n * Parse the number or string value passed to a Big constructor.\n *\n * x {Big} A Big number instance.\n * n {number|string} A numeric value.\n */\nfunction parse(x, n) {\n    var e, i, nl;\n    if (!NUMERIC.test(n)) {\n        throw Error(INVALID + 'number');\n    }\n    // Determine sign.\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\n    // Decimal point?\n    if ((e = n.indexOf('.')) > -1)\n        n = n.replace('.', '');\n    // Exponential form?\n    if ((i = n.search(/e/i)) > 0) {\n        // Determine exponent.\n        if (e < 0)\n            e = i;\n        e += +n.slice(i + 1);\n        n = n.substring(0, i);\n    }\n    else if (e < 0) {\n        // Integer.\n        e = n.length;\n    }\n    nl = n.length;\n    // Determine leading zeros before decimal point.\n    for (i = 0; i < e && i < nl && n.charAt(i) == '0';)\n        ++i;\n    // original version (ignores decimal point).\n    // // Determine leading zeros.\n    // for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\n    if (i == nl) {\n        // Zero.\n        x.c = [x.e = 0];\n    }\n    else {\n        x.e = e - i - 1;\n        x.c = [];\n        // Convert string to array of digits without leading zeros\n        for (e = 0; i < nl;)\n            x.c[e++] = +n.charAt(i++);\n        // older version (doesn't keep trailing zeroes).\n        // // Determine trailing zeros.\n        // for (; nl > 0 && n.charAt(--nl) == '0';);\n        // // Convert string to array of digits without leading/trailing zeros.\n        // for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\n    }\n    x = round(x, Big.DP + 1, Big.RM);\n    return x;\n}\n/*\n * Round Big x to a maximum of sd significant digits using rounding mode rm.\n *\n * x {Big} The Big to round.\n * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\n * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n * [more] {boolean} Whether the result of division was truncated.\n */\nfunction round(x, sd, rm, more) {\n    var xc = x.c;\n    if (rm === UNDEFINED)\n        rm = Big.RM;\n    if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\n        throw Error(INVALID_RM);\n    }\n    if (sd < 1) {\n        more =\n            rm === 3 && (more || !!xc[0]) || sd === 0 && (rm === 1 && xc[0] >= 5 ||\n                rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED)));\n        xc.length = 1;\n        if (more) {\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n            x.e = x.e - sd + 1;\n            xc[0] = 1;\n        }\n        else {\n            // Zero.\n            xc[0] = x.e = 0;\n        }\n    }\n    else if (sd < xc.length) {\n        // xc[sd] is the digit after the digit that may be rounded up.\n        const isZero = xc.findIndex((xci, idx) => idx >= sd && xci > 0) < 0;\n        more =\n            rm === 1 && xc[sd] >= 5 ||\n                rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&\n                    (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||\n                rm === 3 && (more || !isZero);\n        // Remove any digits after the required precision.\n        xc.length = sd--;\n        // Round up?\n        if (more) {\n            // Rounding up may mean the previous digit has to be rounded up.\n            for (; ++xc[sd] > 9;) {\n                xc[sd] = 0;\n                if (!sd--) {\n                    ++x.e;\n                    xc.unshift(1);\n                }\n            }\n        }\n        // Remove trailing zeros.\n        for (sd = xc.length; !xc[--sd];)\n            xc.pop();\n    }\n    return x;\n}\n/*\n * Return a string representing the value of Big x in normal or exponential notation.\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\n */\nfunction stringify(x, doExponential, isNonzero) {\n    var e = x.e, s = x.c.join(''), n = s.length;\n    // Exponential notation?\n    if (doExponential) {\n        s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\n        // Normal notation.\n    }\n    else if (e < 0) {\n        for (; ++e;)\n            s = '0' + s;\n        s = '0.' + s;\n    }\n    else if (e > 0) {\n        if (++e > n) {\n            for (e -= n; e--;)\n                s += '0';\n        }\n        else if (e < n) {\n            s = s.slice(0, e) + '.' + s.slice(e);\n        }\n    }\n    else if (n > 1) {\n        s = s.charAt(0) + '.' + s.slice(1);\n    }\n    return x.s < 0 && isNonzero ? '-' + s : s;\n}\n// Prototype/instance methods\n/*\n * Return a new Big whose value is the absolute value of this Big.\n */\nP.abs = function () {\n    var x = new this.constructor(this);\n    x.s = 1;\n    return x;\n};\n/*\n * Return 1 if the value of this Big is greater than the value of Big y,\n *       -1 if the value of this Big is less than the value of Big y, or\n *        0 if they have the same value.\n */\nP.cmp = function (y) {\n    var isneg, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, i = x.s, j = y.s, k = x.e, l = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0])\n        return !xc[0] ? !yc[0] ? 0 : -j : i;\n    // Signs differ?\n    if (i != j)\n        return i;\n    isneg = i < 0;\n    // Compare exponents.\n    if (k != l)\n        return k > l ^ isneg ? 1 : -1;\n    // Compare digit by digit.\n    j = Math.max(xc.length, yc.length);\n    for (i = 0; i < j; i++) {\n        k = i < xc.length ? xc[i] : 0;\n        l = i < yc.length ? yc[i] : 0;\n        if (k != l)\n            return k > l ^ isneg ? 1 : -1;\n    }\n    return 0;\n    // original version (doesn't compare well trailing zeroes, e.g. 1.0 with 1.00)\n    // j = (k = xc.length) < (l = yc.length) ? k : l;\n    // // Compare digit by digit.\n    // for (i = -1; ++i < j;) {\n    //   if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\n    // }\n    // // Compare lengths.\n    // return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n};\n/*\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.div = function (y) {\n    var Big = this.constructor, x = new Big(this), y = new Big(y), a = x.c, // dividend\n    b = y.c, // divisor\n    k = x.s == y.s ? 1 : -1, dp = Big.DP;\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n        throw Error(INVALID_DP);\n    }\n    // Divisor is zero?\n    if (!b[0]) {\n        throw Error(DIV_BY_ZERO);\n    }\n    // Dividend is 0? Return +-0.\n    if (!a[0]) {\n        y.s = k;\n        y.c = [y.e = 0];\n        return y;\n    }\n    var bl, bt, n, cmp, ri, bz = b.slice(), ai = bl = b.length, al = a.length, r = a.slice(0, bl), // remainder\n    rl = r.length, q = y, // quotient\n    qc = q.c = [], qi = 0, p = dp + (q.e = x.e - y.e) + 1; // precision of the result\n    q.s = k;\n    k = p < 0 ? 0 : p;\n    // Create version of divisor with leading zero.\n    bz.unshift(0);\n    // Add zeros to make remainder as long as divisor.\n    for (; rl++ < bl;)\n        r.push(0);\n    do {\n        // n is how many times the divisor goes into current remainder.\n        for (n = 0; n < 10; n++) {\n            // Compare divisor and remainder.\n            if (bl != (rl = r.length)) {\n                cmp = bl > rl ? 1 : -1;\n            }\n            else {\n                for (ri = -1, cmp = 0; ++ri < bl;) {\n                    if (b[ri] != r[ri]) {\n                        cmp = b[ri] > r[ri] ? 1 : -1;\n                        break;\n                    }\n                }\n            }\n            // If divisor < remainder, subtract divisor from remainder.\n            if (cmp < 0) {\n                // Remainder can't be more than 1 digit longer than divisor.\n                // Equalise lengths using divisor with extra leading zero?\n                for (bt = rl == bl ? b : bz; rl;) {\n                    if (r[--rl] < bt[rl]) {\n                        ri = rl;\n                        for (; ri && !r[--ri];)\n                            r[ri] = 9;\n                        --r[ri];\n                        r[rl] += 10;\n                    }\n                    r[rl] -= bt[rl];\n                }\n                for (; !r[0];)\n                    r.shift();\n            }\n            else {\n                break;\n            }\n        }\n        // Add the digit n to the result array.\n        qc[qi++] = cmp ? n : ++n;\n        // Update the remainder.\n        if (r[0] && cmp)\n            r[rl] = a[ai] || 0;\n        else\n            r = [a[ai]];\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\n    if (!qc[0] && qi != 1) {\n        // There can't be more than one zero.\n        qc.shift();\n        q.e--;\n        p--;\n    }\n    // Round?\n    if (qi > p)\n        round(q, p, Big.RM, r[0] !== UNDEFINED);\n    return q;\n};\n/*\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\n */\nP.eq = function (y) {\n    return this.cmp(y) === 0;\n};\n/*\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\n * false.\n */\nP.gt = function (y) {\n    return this.cmp(y) > 0;\n};\n/*\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\n * return false.\n */\nP.gte = function (y) {\n    return this.cmp(y) > -1;\n};\n/*\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\n */\nP.lt = function (y) {\n    return this.cmp(y) < 0;\n};\n/*\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\n * return false.\n */\nP.lte = function (y) {\n    return this.cmp(y) < 1;\n};\n/*\n * Return a new Big whose value is the value of this Big minus the value of Big y.\n */\nP.minus = P.sub = function (y) {\n    var i, j, t, xlty, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.plus(y);\n    }\n    var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        if (yc[0]) {\n            y.s = -b;\n        }\n        else if (xc[0]) {\n            y = new Big(x);\n        }\n        else {\n            y.s = 1;\n        }\n        return y;\n    }\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\n    if (a = xe - ye) {\n        if (xlty = a < 0) {\n            a = -a;\n            t = xc;\n        }\n        else {\n            ye = xe;\n            t = yc;\n        }\n        t.reverse();\n        for (b = a; b--;)\n            t.push(0);\n        t.reverse();\n    }\n    else {\n        // Exponents equal. Check digit by digit.\n        j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n        for (a = b = 0; b < j; b++) {\n            if (xc[b] != yc[b]) {\n                xlty = xc[b] < yc[b];\n                break;\n            }\n        }\n    }\n    // x < y? Point xc to the array of the bigger number.\n    if (xlty) {\n        t = xc;\n        xc = yc;\n        yc = t;\n        y.s = -y.s;\n    }\n    /*\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\n     * needs to start at yc.length.\n     */\n    if ((b = (j = yc.length) - (i = xc.length)) > 0)\n        for (; b--;)\n            xc[i++] = 0;\n    // Subtract yc from xc.\n    for (b = i; j > a;) {\n        if (xc[--j] < yc[j]) {\n            for (i = j; i && !xc[--i];)\n                xc[i] = 9;\n            --xc[i];\n            xc[j] += 10;\n        }\n        xc[j] -= yc[j];\n    }\n    // Remove trailing zeros.\n    for (; xc[--b] === 0;)\n        xc.pop();\n    // Remove leading zeros and adjust exponent accordingly.\n    for (; xc[0] === 0;) {\n        xc.shift();\n        --ye;\n    }\n    if (!xc[0]) {\n        // n - n = +0\n        y.s = 1;\n        // Result must be zero.\n        xc = [ye = 0];\n    }\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\n */\nP.mod = function (y) {\n    var ygtx, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    if (!y.c[0]) {\n        throw Error(DIV_BY_ZERO);\n    }\n    x.s = y.s = 1;\n    ygtx = y.cmp(x) == 1;\n    x.s = a;\n    y.s = b;\n    if (ygtx)\n        return new Big(x);\n    a = Big.DP;\n    b = Big.RM;\n    Big.DP = Big.RM = 0;\n    x = x.div(y);\n    Big.DP = a;\n    Big.RM = b;\n    return this.minus(x.times(y));\n};\n/*\n * Return a new Big whose value is the value of this Big plus the value of Big y.\n */\nP.plus = P.add = function (y) {\n    var e, k, t, Big = this.constructor, x = new Big(this), y = new Big(y);\n    // Signs differ?\n    if (x.s != y.s) {\n        y.s = -y.s;\n        return x.minus(y);\n    }\n    var xe = x.e, xc = x.c, ye = y.e, yc = y.c;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        if (!yc[0]) {\n            if (xc[0]) {\n                y = new Big(x);\n            }\n            else {\n                y.s = x.s;\n            }\n        }\n        return y;\n    }\n    xc = xc.slice();\n    // Prepend zeros to equalise exponents.\n    // Note: reverse faster than unshifts.\n    if (e = xe - ye) {\n        if (e > 0) {\n            ye = xe;\n            t = yc;\n        }\n        else {\n            e = -e;\n            t = xc;\n        }\n        t.reverse();\n        for (; e--;)\n            t.push(0);\n        t.reverse();\n    }\n    // Point xc to the longer array.\n    if (xc.length - yc.length < 0) {\n        t = yc;\n        yc = xc;\n        xc = t;\n    }\n    e = yc.length;\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\n    for (k = 0; e; xc[e] %= 10)\n        k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n    if (k) {\n        xc.unshift(k);\n        ++ye;\n    }\n    // Remove trailing zeros.\n    for (e = xc.length; xc[--e] === 0;)\n        xc.pop();\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a Big whose value is the value of this Big raised to the power n.\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\n * mode Big.RM.\n *\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n */\nP.pow = function (n) {\n    var Big = this.constructor, x = new Big(this), y = new Big('1'), one = new Big('1'), isneg = n < 0;\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\n        throw Error(INVALID + 'exponent');\n    }\n    if (isneg)\n        n = -n;\n    for (;;) {\n        if (n & 1)\n            y = y.times(x);\n        n >>= 1;\n        if (!n)\n            break;\n        x = x.times(x);\n    }\n    return isneg ? one.div(y) : y;\n};\n/*\n * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\n * significant digits using rounding mode rm, or Big.RM if rm is not specified.\n *\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.prec = function (sd, rm) {\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\n        throw Error(INVALID + 'precision');\n    }\n    return round(new this.constructor(this), sd, rm);\n};\n/*\n * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\n * using rounding mode rm, or Big.RM if rm is not specified.\n * If dp is negative, round to an integer which is a multiple of 10**-dp.\n * If dp is not specified, round to 0 decimal places.\n *\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.round = function (dp, rm) {\n    if (dp === UNDEFINED)\n        dp = 0;\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\n        throw Error(INVALID_DP);\n    }\n    return round(new this.constructor(this), dp + this.e + 1, rm);\n};\n/*\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.sqrt = function () {\n    var r, c, t, Big = this.constructor, x = new Big(this), s = x.s, e = x.e, half = new Big('0.5');\n    // Zero?\n    if (!x.c[0])\n        return new Big(x);\n    // Negative?\n    if (s < 0) {\n        throw Error(NAME + 'No square root');\n    }\n    // Estimate.\n    s = Math.sqrt(x + '');\n    // Math.sqrt underflow/overflow?\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\n    if (s === 0 || s === 1 / 0) {\n        c = x.c.join('');\n        if (!(c.length + e & 1))\n            c += '0';\n        s = Math.sqrt(c);\n        e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n        r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\n    }\n    else {\n        r = new Big(s + '');\n    }\n    e = r.e + (Big.DP += 4);\n    // Newton-Raphson iteration.\n    do {\n        t = r;\n        r = half.times(t.plus(x.div(t)));\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\n    return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\n};\n/*\n * Return a new Big whose value is the value of this Big times the value of Big y.\n */\nP.times = P.mul = function (y) {\n    var c, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, a = xc.length, b = yc.length, i = x.e, j = y.e;\n    // Determine sign of result.\n    y.s = x.s == y.s ? 1 : -1;\n    // Return signed 0 if either 0.\n    if (!xc[0] || !yc[0]) {\n        y.c = [y.e = 0];\n        return y;\n    }\n    // Initialise exponent of result as x.e + y.e.\n    y.e = i + j;\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\n    if (a < b) {\n        c = xc;\n        xc = yc;\n        yc = c;\n        j = a;\n        a = b;\n        b = j;\n    }\n    // Initialise coefficient array of result with zeros.\n    for (c = new Array(j = a + b); j--;)\n        c[j] = 0;\n    // Multiply.\n    // i is initially xc.length.\n    for (i = b; i--;) {\n        b = 0;\n        // a is yc.length.\n        for (j = a + i; j > i;) {\n            // Current sum of products at this digit position, plus carry.\n            b = c[j] + yc[i] * xc[j - i - 1] + b;\n            c[j--] = b % 10;\n            // carry\n            b = b / 10 | 0;\n        }\n        c[j] = b;\n    }\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\n    if (b)\n        ++y.e;\n    else\n        c.shift();\n    // Remove trailing zeros.\n    for (i = c.length; !c[--i];)\n        c.pop();\n    y.c = c;\n    return y;\n};\n/*\n * Return a string representing the value of this Big in exponential notation rounded to dp fixed\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\n *\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.toExponential = function (dp, rm) {\n    var x = this, n = x.c[0];\n    if (dp !== UNDEFINED) {\n        if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n            throw Error(INVALID_DP);\n        }\n        x = round(new x.constructor(x), ++dp, rm);\n        for (; x.c.length < dp;)\n            x.c.push(0);\n    }\n    return stringify(x, true, !!n);\n};\n/*\n * Return a string representing the value of this Big in normal notation rounded to dp fixed\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\n *\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n *\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n */\nP.toFixed = function (dp, rm) {\n    var x = this, n = x.c[0];\n    if (dp !== UNDEFINED) {\n        if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n            throw Error(INVALID_DP);\n        }\n        x = round(new x.constructor(x), dp + x.e + 1, rm);\n        // x.e may have changed if the value is rounded up.\n        for (dp = dp + x.e + 1; x.c.length < dp;)\n            x.c.push(0);\n    }\n    return stringify(x, false, !!n);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Omit the sign for negative zero.\n */\nP.toJSON = P.toString = function () {\n    var x = this, Big = x.constructor;\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\n};\n/*\n * Return the value of this Big as a primitve number.\n */\nP.toNumber = function () {\n    var n = Number(stringify(this, true, true));\n    if (this.constructor.strict === true && !this.eq(n.toString())) {\n        throw Error(NAME + 'Imprecise conversion');\n    }\n    return n;\n};\n/*\n * Return a string representing the value of this Big rounded to sd significant digits using\n * rounding mode rm, or Big.RM if rm is not specified.\n * Use exponential notation if sd is less than the number of digits necessary to represent\n * the integer part of the value in normal notation.\n *\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.toPrecision = function (sd, rm) {\n    var x = this, Big = x.constructor, n = x.c[0];\n    if (sd !== UNDEFINED) {\n        if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\n            throw Error(INVALID + 'precision');\n        }\n        x = round(new Big(x), sd, rm);\n        for (; x.c.length < sd;)\n            x.c.push(0);\n    }\n    return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Include the sign for negative zero.\n */\nP.valueOf = function () {\n    var x = this, Big = x.constructor;\n    if (Big.strict === true) {\n        throw Error(NAME + 'valueOf disallowed');\n    }\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\n};\n// Export\nexport var Big = _Big_();\n/// <reference types=\"https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/master/types/big.js/index.d.ts\" />\nexport default Big;\n","import Decimal from \"./lib/big.js\";\nimport { FSharpRef } from \"./Types.js\";\nexport default Decimal;\nexport const get_Zero = new Decimal(0);\nexport const get_One = new Decimal(1);\nexport const get_MinusOne = new Decimal(-1);\nexport const get_MaxValue = new Decimal(\"79228162514264337593543950335\");\nexport const get_MinValue = new Decimal(\"-79228162514264337593543950335\");\nexport function compare(x, y) {\n    return x.cmp(y);\n}\nexport function equals(x, y) {\n    return !x.cmp(y);\n}\nexport function abs(x) {\n    return x.abs();\n}\nexport function round(x, digits = 0) {\n    return x.round(digits, 2 /* ROUND_HALF_EVEN */);\n}\nexport function truncate(x) {\n    return x.round(0, 0 /* ROUND_DOWN */);\n}\nexport function ceiling(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 3 /* ROUND_UP */ : 0 /* ROUND_DOWN */);\n}\nexport function floor(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 0 /* ROUND_DOWN */ : 3 /* ROUND_UP */);\n}\nexport function pow(x, n) {\n    return x.pow(n);\n}\nexport function sqrt(x) {\n    return x.sqrt();\n}\nexport function op_Addition(x, y) {\n    return x.add(y);\n}\nexport function op_Subtraction(x, y) {\n    return x.sub(y);\n}\nexport function op_Multiply(x, y) {\n    return x.mul(y);\n}\nexport function op_Division(x, y) {\n    return x.div(y);\n}\nexport function op_Modulus(x, y) {\n    return x.mod(y);\n}\nexport function op_UnaryNegation(x) {\n    const x2 = new Decimal(x);\n    x2.s = -x2.s || 0;\n    return x2;\n}\nexport const add = op_Addition;\nexport const subtract = op_Subtraction;\nexport const multiply = op_Multiply;\nexport const divide = op_Division;\nexport const remainder = op_Modulus;\nexport const negate = op_UnaryNegation;\nexport function toString(x) {\n    return x.toString();\n}\nexport function tryParse(str, defValue) {\n    try {\n        defValue.contents = new Decimal(str.trim());\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(get_Zero);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\nexport function toNumber(x) {\n    return +x;\n}\nfunction decimalToHex(dec, bitSize) {\n    const hex = new Uint8Array(bitSize / 4 | 0);\n    let hexCount = 1;\n    for (let d = 0; d < dec.length; d++) {\n        let value = dec[d];\n        for (let i = 0; i < hexCount; i++) {\n            const digit = hex[i] * 10 + value | 0;\n            hex[i] = digit & 0xF;\n            value = digit >> 4;\n        }\n        if (value !== 0) {\n            hex[hexCount++] = value;\n        }\n    }\n    return hex.slice(0, hexCount); // digits in reverse order\n}\nfunction hexToDecimal(hex, bitSize) {\n    const dec = new Uint8Array(bitSize * 301 / 1000 + 1 | 0);\n    let decCount = 1;\n    for (let d = hex.length - 1; d >= 0; d--) {\n        let carry = hex[d];\n        for (let i = 0; i < decCount; i++) {\n            const val = dec[i] * 16 + carry | 0;\n            dec[i] = (val % 10) | 0;\n            carry = (val / 10) | 0;\n        }\n        while (carry > 0) {\n            dec[decCount++] = (carry % 10) | 0;\n            carry = (carry / 10) | 0;\n        }\n    }\n    return dec.slice(0, decCount); // digits in reverse order\n}\nfunction setInt32Bits(hexDigits, bits, offset) {\n    for (let i = 0; i < 8; i++) {\n        hexDigits[offset + i] = (bits >> (i * 4)) & 0xF;\n    }\n}\nfunction getInt32Bits(hexDigits, offset) {\n    let bits = 0;\n    for (let i = 0; i < 8; i++) {\n        bits = bits | (hexDigits[offset + i] << (i * 4));\n    }\n    return bits;\n}\nexport function fromIntArray(bits) {\n    return fromInts(bits[0], bits[1], bits[2], bits[3]);\n}\nexport function fromInts(low, mid, high, signExp) {\n    const isNegative = signExp < 0;\n    const scale = (signExp >> 16) & 0x7F;\n    return fromParts(low, mid, high, isNegative, scale);\n}\nexport function fromParts(low, mid, high, isNegative, scale) {\n    const bitSize = 96;\n    const hexDigits = new Uint8Array(bitSize / 4);\n    setInt32Bits(hexDigits, low, 0);\n    setInt32Bits(hexDigits, mid, 8);\n    setInt32Bits(hexDigits, high, 16);\n    const decDigits = hexToDecimal(hexDigits, bitSize);\n    scale = scale & 0x7F;\n    const big = new Decimal(0);\n    big.c = Array.from(decDigits.reverse());\n    big.e = decDigits.length - scale - 1;\n    big.s = isNegative ? -1 : 1;\n    const d = new Decimal(big);\n    return d;\n}\nexport function getBits(d) {\n    const bitSize = 96;\n    const decDigits = Uint8Array.from(d.c);\n    const hexDigits = decimalToHex(decDigits, bitSize);\n    const low = getInt32Bits(hexDigits, 0);\n    const mid = getInt32Bits(hexDigits, 8);\n    const high = getInt32Bits(hexDigits, 16);\n    const decStr = d.toString();\n    const dotPos = decStr.indexOf(\".\");\n    const scale = dotPos < 0 ? 0 : decStr.length - dotPos - 1;\n    const signExp = ((scale & 0x7F) << 16) | (d.s < 0 ? 0x80000000 : 0);\n    return [low, mid, high, signExp];\n}\n// export function makeRangeStepFunction(step: Decimal, last: Decimal) {\n//   const stepComparedWithZero = step.cmp(get_Zero);\n//   if (stepComparedWithZero === 0) {\n//     throw new Error(\"The step of a range cannot be zero\");\n//   }\n//   const stepGreaterThanZero = stepComparedWithZero > 0;\n//   return (x: Decimal) => {\n//     const comparedWithLast = x.cmp(last);\n//     if ((stepGreaterThanZero && comparedWithLast <= 0)\n//       || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n//       return [x, op_Addition(x, step)];\n//     } else {\n//       return undefined;\n//     }\n//   };\n// }\n","import { split, trimEnd, isNullOrWhiteSpace, substring, join, endsWith } from \"../fable-library.3.4.0/String.js\";\nimport { ofArray, singleton, collect, head, empty, tail, isEmpty, reverse, map } from \"../fable-library.3.4.0/List.js\";\nimport { equalsWith } from \"../fable-library.3.4.0/Array.js\";\nimport { comparePrimitives } from \"../fable-library.3.4.0/Util.js\";\nimport { React_createDisposable_3A5B6456, useReact_useEffect_Z5ECA432F, useReact_useMemo_CF4EA67, useReact_useCallbackRef_7C4B0DD6, React_memo_62A0F746 } from \"../Feliz.1.53.0/React.fs.js\";\nimport { defaultArg } from \"../fable-library.3.4.0/Option.js\";\nimport { Impl_createRemoveOptions, Impl_adjustPassive } from \"../Feliz.UseListener.0.6.3/Listener.fs.js\";\nimport { tryParse } from \"../fable-library.3.4.0/Int32.js\";\nimport { FSharpRef } from \"../fable-library.3.4.0/Types.js\";\nimport { tryParse as tryParse_1, fromInt } from \"../fable-library.3.4.0/Long.js\";\nimport { tryParse as tryParse_2 } from \"../fable-library.3.4.0/Guid.js\";\nimport { tryParse as tryParse_3 } from \"../fable-library.3.4.0/Double.js\";\nimport { tryParse as tryParse_4 } from \"../fable-library.3.4.0/Decimal.js\";\nimport Decimal from \"../fable-library.3.4.0/Decimal.js\";\nimport { map as map_1, delay, toList } from \"../fable-library.3.4.0/Seq.js\";\n\nexport function RouterModule_String_$007CPrefix$007C(prefix, str) {\n    if (str.indexOf(prefix) === 0) {\n        return str;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function RouterModule_String_$007CSuffix$007C(suffix, str) {\n    if (endsWith(str, suffix)) {\n        return str;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function RouterModule_encodeQueryString(queryStringPairs) {\n    const _arg1 = join(\"\\u0026\", map((tupledArg) => join(\"=\", [encodeURIComponent(tupledArg[0]), encodeURIComponent(tupledArg[1])]), queryStringPairs));\n    if (_arg1 === \"\") {\n        return \"\";\n    }\n    else {\n        return \"?\" + _arg1;\n    }\n}\n\nexport function RouterModule_encodeQueryStringInts(queryStringIntPairs) {\n    const _arg1 = join(\"\\u0026\", map((tupledArg) => join(\"=\", [encodeURIComponent(tupledArg[0]), tupledArg[1]]), queryStringIntPairs));\n    if (_arg1 === \"\") {\n        return \"\";\n    }\n    else {\n        return \"?\" + _arg1;\n    }\n}\n\nfunction RouterModule_normalizeRoute(routeMode) {\n    if (routeMode === 1) {\n        return (_arg1) => {\n            let activePatternResult11897, path, activePatternResult11898, path_1, activePatternResult11899, path_2;\n            return (activePatternResult11897 = RouterModule_String_$007CPrefix$007C(\"/\", _arg1), (activePatternResult11897 != null) ? ((path = activePatternResult11897, \"#\" + path)) : ((activePatternResult11898 = RouterModule_String_$007CPrefix$007C(\"#/\", _arg1), (activePatternResult11898 != null) ? ((path_1 = activePatternResult11898, path_1)) : ((activePatternResult11899 = RouterModule_String_$007CPrefix$007C(\"#\", _arg1), (activePatternResult11899 != null) ? ((path_2 = activePatternResult11899, \"#/\" + substring(path_2, 1, path_2.length - 1))) : (\"#/\" + _arg1))))));\n        };\n    }\n    else {\n        return (_arg2) => {\n            let activePatternResult11902, path_4;\n            return (activePatternResult11902 = RouterModule_String_$007CPrefix$007C(\"/\", _arg2), (activePatternResult11902 != null) ? ((path_4 = activePatternResult11902, path_4)) : (\"/\" + _arg2));\n        };\n    }\n}\n\nexport function RouterModule_encodeParts(xs, routeMode) {\n    return RouterModule_normalizeRoute(routeMode)(join(\"/\", map((part) => {\n        if (((part.indexOf(\"?\") >= 0) ? true : (part.indexOf(\"#\") === 0)) ? true : (part.indexOf(\"/\") === 0)) {\n            return part;\n        }\n        else {\n            return encodeURIComponent(part);\n        }\n    }, xs)));\n}\n\nexport function RouterModule_trySeparateLast(xs) {\n    const matchValue = reverse(xs);\n    if (!isEmpty(matchValue)) {\n        if (isEmpty(tail(matchValue))) {\n            return [empty(), head(matchValue)];\n        }\n        else {\n            return [reverse(tail(matchValue)), head(matchValue)];\n        }\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function RouterModule_nav(xs, mode, routeMode) {\n    if (mode === 1) {\n        history.pushState(void 0, \"\", RouterModule_encodeParts(xs, routeMode));\n    }\n    else {\n        history.replaceState(void 0, \"\", RouterModule_encodeParts(xs, routeMode));\n    }\n    const ev = document.createEvent(\"CustomEvent\");\n    ev.initEvent(\"CUSTOM_NAVIGATION_EVENT\", true, true);\n    void window.dispatchEvent(ev);\n}\n\nexport function RouterModule_urlSegments(path, mode) {\n    return collect((segment) => {\n        if (isNullOrWhiteSpace(segment)) {\n            return empty();\n        }\n        else {\n            const segment_1 = trimEnd(segment, \"#\");\n            if (segment_1 === \"?\") {\n                return empty();\n            }\n            else if (RouterModule_String_$007CPrefix$007C(\"?\", segment_1) != null) {\n                return singleton(segment_1);\n            }\n            else {\n                const matchValue = segment_1.split(\"?\");\n                if ((!equalsWith((x, y) => comparePrimitives(x, y), matchValue, null)) ? (matchValue.length === 1) : false) {\n                    const value = matchValue[0];\n                    return singleton(decodeURIComponent(value));\n                }\n                else if ((!equalsWith((x_1, y_1) => comparePrimitives(x_1, y_1), matchValue, null)) ? (matchValue.length === 2) : false) {\n                    if (matchValue[1] === \"\") {\n                        const value_1 = matchValue[0];\n                        return singleton(decodeURIComponent(value_1));\n                    }\n                    else {\n                        const value_2 = matchValue[0];\n                        const query = matchValue[1];\n                        return ofArray([decodeURIComponent(value_2), \"?\" + query]);\n                    }\n                }\n                else {\n                    return empty();\n                }\n            }\n        }\n    }, ofArray(split((RouterModule_String_$007CPrefix$007C(\"#\", path) != null) ? substring(path, 1, path.length - 1) : ((mode === 1) ? ((RouterModule_String_$007CSuffix$007C(\"#\", path) != null) ? \"\" : ((RouterModule_String_$007CSuffix$007C(\"#/\", path) != null) ? \"\" : path)) : path), [\"/\"], null, 0)));\n}\n\nexport function RouterModule_onUrlChange(routeMode, urlChanged, ev) {\n    return urlChanged(RouterModule_urlSegments((routeMode === 2) ? (window.location.pathname + window.location.search) : window.location.hash, routeMode));\n}\n\nexport const RouterModule_router = React_memo_62A0F746((input) => {\n    const onChange = useReact_useCallbackRef_7C4B0DD6((ev) => {\n        const urlChanged = defaultArg(input.onUrlChanged, (value) => {\n        });\n        RouterModule_onUrlChange(defaultArg(input.hashMode, 1), urlChanged, ev);\n    });\n    if (((window.navigator.userAgent).indexOf(\"Trident\") >= 0) ? true : ((window.navigator.userAgent).indexOf(\"MSIE\") >= 0)) {\n        const eventType = \"hashchange\";\n        const action_1 = (arg00) => {\n            onChange(arg00);\n        };\n        const options_1 = void 0;\n        const addOptions = useReact_useMemo_CF4EA67(() => Impl_adjustPassive(options_1), [options_1]);\n        const removeOptions = useReact_useMemo_CF4EA67(() => Impl_createRemoveOptions(options_1), [options_1]);\n        const fn = useReact_useMemo_CF4EA67(() => ((arg) => {\n            action_1(arg);\n        }), [action_1]);\n        useReact_useEffect_Z5ECA432F(useReact_useCallbackRef_7C4B0DD6(() => {\n            if (addOptions == null) {\n                window.addEventListener(eventType, fn);\n            }\n            else {\n                window.addEventListener(eventType, fn, addOptions);\n            }\n            return React_createDisposable_3A5B6456(() => {\n                if (removeOptions == null) {\n                    window.removeEventListener(eventType, fn);\n                }\n                else {\n                    window.removeEventListener(eventType, fn, removeOptions);\n                }\n            });\n        }));\n    }\n    else {\n        const eventType_1 = \"popstate\";\n        const action_3 = onChange;\n        const options_5 = void 0;\n        const addOptions_1 = useReact_useMemo_CF4EA67(() => Impl_adjustPassive(options_5), [options_5]);\n        const removeOptions_1 = useReact_useMemo_CF4EA67(() => Impl_createRemoveOptions(options_5), [options_5]);\n        const fn_1 = useReact_useMemo_CF4EA67(() => ((arg_1) => {\n            action_3(arg_1);\n        }), [action_3]);\n        useReact_useEffect_Z5ECA432F(useReact_useCallbackRef_7C4B0DD6(() => {\n            if (addOptions_1 == null) {\n                window.addEventListener(eventType_1, fn_1);\n            }\n            else {\n                window.addEventListener(eventType_1, fn_1, addOptions_1);\n            }\n            return React_createDisposable_3A5B6456(() => {\n                if (removeOptions_1 == null) {\n                    window.removeEventListener(eventType_1, fn_1);\n                }\n                else {\n                    window.removeEventListener(eventType_1, fn_1, removeOptions_1);\n                }\n            });\n        }));\n    }\n    const eventType_2 = \"CUSTOM_NAVIGATION_EVENT\";\n    const action_4 = onChange;\n    const options_8 = void 0;\n    const addOptions_2 = useReact_useMemo_CF4EA67(() => Impl_adjustPassive(options_8), [options_8]);\n    const removeOptions_2 = useReact_useMemo_CF4EA67(() => Impl_createRemoveOptions(options_8), [options_8]);\n    const fn_2 = useReact_useMemo_CF4EA67(() => ((arg_2) => {\n        action_4(arg_2);\n    }), [action_4]);\n    useReact_useEffect_Z5ECA432F(useReact_useCallbackRef_7C4B0DD6(() => {\n        if (addOptions_2 == null) {\n            window.addEventListener(eventType_2, fn_2);\n        }\n        else {\n            window.addEventListener(eventType_2, fn_2, addOptions_2);\n        }\n        return React_createDisposable_3A5B6456(() => {\n            if (removeOptions_2 == null) {\n                window.removeEventListener(eventType_2, fn_2);\n            }\n            else {\n                window.removeEventListener(eventType_2, fn_2, removeOptions_2);\n            }\n        });\n    }));\n    const matchValue = input.application;\n    return (matchValue == null) ? null : matchValue;\n});\n\nexport function Route_$007CInt$007C_$007C(input) {\n    let matchValue;\n    let outArg = 0;\n    matchValue = [tryParse(input, 511, false, 32, new FSharpRef(() => outArg, (v) => {\n        outArg = (v | 0);\n    })), outArg];\n    if (matchValue[0]) {\n        return matchValue[1];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function Route_$007CInt64$007C_$007C(input) {\n    let matchValue;\n    let outArg = fromInt(0);\n    matchValue = [tryParse_1(input, 511, false, 64, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return matchValue[1];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function Route_$007CGuid$007C_$007C(input) {\n    let matchValue;\n    let outArg = \"00000000-0000-0000-0000-000000000000\";\n    matchValue = [tryParse_2(input, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return matchValue[1];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function Route_$007CNumber$007C_$007C(input) {\n    let matchValue;\n    let outArg = 0;\n    matchValue = [tryParse_3(input, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return matchValue[1];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function Route_$007CDecimal$007C_$007C(input) {\n    let matchValue;\n    let outArg = new Decimal(0);\n    matchValue = [tryParse_4(input, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return matchValue[1];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function Route_$007CBool$007C_$007C(input) {\n    const matchValue = input.toLocaleLowerCase();\n    switch (matchValue) {\n        case \"1\":\n        case \"true\": {\n            return true;\n        }\n        case \"0\":\n        case \"false\": {\n            return false;\n        }\n        case \"\": {\n            return true;\n        }\n        default: {\n            return void 0;\n        }\n    }\n}\n\nexport function Route_$007CQuery$007C_$007C(input) {\n    try {\n        const urlParams = new URLSearchParams(input);\n        return toList(delay(() => map_1((entry) => [entry[0], entry[1]], urlParams.entries())));\n    }\n    catch (matchValue) {\n        return void 0;\n    }\n}\n\n","import { FSharpRef, Record, Union } from \"../fable-library.3.4.0/Types.js\";\nimport { record_type, class_type, tuple_type, lambda_type, union_type, list_type, obj_type, string_type } from \"../fable-library.3.4.0/Reflection.js\";\nimport { FSharpResult$2 } from \"../fable-library.3.4.0/Choice.js\";\nimport { addToDict, tryGetValue } from \"../fable-library.3.4.0/MapUtil.js\";\nimport { replace } from \"../fable-library.3.4.0/RegExp.js\";\n\nexport class ErrorReason extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"BadPrimitive\", \"BadPrimitiveExtra\", \"BadType\", \"BadField\", \"BadPath\", \"TooSmallArray\", \"FailMessage\", \"BadOneOf\"];\n    }\n}\n\nexport function ErrorReason$reflection() {\n    return union_type(\"Thoth.Json.ErrorReason\", [], ErrorReason, () => [[[\"Item1\", string_type], [\"Item2\", obj_type]], [[\"Item1\", string_type], [\"Item2\", obj_type], [\"Item3\", string_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]], [[\"Item1\", string_type], [\"Item2\", obj_type], [\"Item3\", string_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]], [[\"Item\", string_type]], [[\"Item\", list_type(string_type)]]]);\n}\n\nexport class CaseStrategy extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"PascalCase\", \"CamelCase\", \"SnakeCase\"];\n    }\n}\n\nexport function CaseStrategy$reflection() {\n    return union_type(\"Thoth.Json.CaseStrategy\", [], CaseStrategy, () => [[], [], []]);\n}\n\nexport class ExtraCoders extends Record {\n    constructor(Hash, Coders) {\n        super();\n        this.Hash = Hash;\n        this.Coders = Coders;\n    }\n}\n\nexport function ExtraCoders$reflection() {\n    return record_type(\"Thoth.Json.ExtraCoders\", [], ExtraCoders, () => [[\"Hash\", string_type], [\"Coders\", class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [string_type, tuple_type(lambda_type(obj_type, obj_type), lambda_type(string_type, lambda_type(obj_type, union_type(\"Microsoft.FSharp.Core.FSharpResult`2\", [obj_type, tuple_type(string_type, ErrorReason$reflection())], FSharpResult$2, () => [[[\"ResultValue\", obj_type]], [[\"ErrorValue\", tuple_type(string_type, ErrorReason$reflection())]]]))))])]]);\n}\n\nexport class Util_Cache$1 {\n    constructor() {\n        this.cache = (new Map([]));\n    }\n}\n\nexport function Util_Cache$1$reflection(gen0) {\n    return class_type(\"Thoth.Json.Util.Cache`1\", [gen0], Util_Cache$1);\n}\n\nexport function Util_Cache$1_$ctor() {\n    return new Util_Cache$1();\n}\n\nexport function Util_Cache$1__GetOrAdd_43981464(__, key, factory) {\n    let matchValue;\n    let outArg = null;\n    matchValue = [tryGetValue(__.cache, key, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return matchValue[1];\n    }\n    else {\n        const x_1 = factory();\n        addToDict(__.cache, key, x_1);\n        return x_1;\n    }\n}\n\nexport const Util_CachedEncoders = Util_Cache$1_$ctor();\n\nexport const Util_CachedDecoders = Util_Cache$1_$ctor();\n\nexport function Util_Casing_lowerFirst(str) {\n    return str.slice(void 0, 0 + 1).toLowerCase() + str.slice(1, str.length);\n}\n\nexport function Util_Casing_convert(caseStrategy, fieldName) {\n    switch (caseStrategy.tag) {\n        case 2: {\n            return replace(Util_Casing_lowerFirst(fieldName), \"[A-Z]\", \"_$0\").toLowerCase();\n        }\n        case 0: {\n            return fieldName;\n        }\n        default: {\n            return Util_Casing_lowerFirst(fieldName);\n        }\n    }\n}\n\n","import { Record } from \"../Types.js\";\r\nimport { record_type, array_type, int32_type } from \"../Reflection.js\";\r\nimport { op_LeftShift, op_BitwiseAnd, op_Addition, compare, op_Subtraction, op_Division, equals, fromInteger, op_Multiply, op_Modulus, toInt, fromBits } from \"../Long.js\";\r\nimport { copy, initialize, map, fill } from \"../Array.js\";\r\nimport { toArray, empty, head, tail, isEmpty, cons } from \"../List.js\";\r\nimport { int32ToString } from \"../Util.js\";\r\nimport { isNullOrEmpty, join } from \"../String.js\";\r\n\r\nexport class BigNat extends Record {\r\n    constructor(bound, digits) {\r\n        super();\r\n        this.bound = (bound | 0);\r\n        this.digits = digits;\r\n    }\r\n}\r\n\r\nexport function BigNat$reflection() {\r\n    return record_type(\"BigInt.BigNat\", [], BigNat, () => [[\"bound\", int32_type], [\"digits\", array_type(int32_type)]]);\r\n}\r\n\r\nexport function BigNatModule_FFT_pow32(x_mut, n_mut) {\r\n    BigNatModule_FFT_pow32:\r\n    while (true) {\r\n        const x = x_mut, n = n_mut;\r\n        if (n === 0) {\r\n            return 1;\r\n        }\r\n        else if ((n % 2) === 0) {\r\n            x_mut = (x * x);\r\n            n_mut = (~(~(n / 2)));\r\n            continue BigNatModule_FFT_pow32;\r\n        }\r\n        else {\r\n            return (x * BigNatModule_FFT_pow32(x * x, ~(~(n / 2)))) | 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_FFT_leastBounding2Power(b) {\r\n    const findBounding2Power = (b_1_mut, tp_mut, i_mut) => {\r\n        findBounding2Power:\r\n        while (true) {\r\n            const b_1 = b_1_mut, tp = tp_mut, i = i_mut;\r\n            if (b_1 <= tp) {\r\n                return [tp, i];\r\n            }\r\n            else {\r\n                b_1_mut = b_1;\r\n                tp_mut = (tp * 2);\r\n                i_mut = (i + 1);\r\n                continue findBounding2Power;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return findBounding2Power(b, 1, 0);\r\n}\r\n\r\nexport const BigNatModule_FFT_p = fromBits(2013265921, 0, false);\r\n\r\nconst BigNatModule_FFT_patternInput$004075 = [27, 15, 31, 440564289];\r\n\r\nexport const BigNatModule_FFT_w = BigNatModule_FFT_patternInput$004075[3];\r\n\r\nexport const BigNatModule_FFT_m = BigNatModule_FFT_patternInput$004075[1];\r\n\r\nexport const BigNatModule_FFT_k = BigNatModule_FFT_patternInput$004075[0];\r\n\r\nexport const BigNatModule_FFT_g = BigNatModule_FFT_patternInput$004075[2];\r\n\r\nexport const BigNatModule_FFT_primeP = BigNatModule_FFT_p;\r\n\r\nexport const BigNatModule_FFT_maxBitsInsideFp = 30;\r\n\r\nexport const BigNatModule_FFT_Fp_p = 2013265921;\r\n\r\nexport const BigNatModule_FFT_Fp_p64 = fromBits(2013265921, 0, true);\r\n\r\nexport function BigNatModule_FFT_Fp_toInt(x) {\r\n    return ~(~x);\r\n}\r\n\r\nexport function BigNatModule_FFT_Fp_ofInt32(x) {\r\n    return x >>> 0;\r\n}\r\n\r\nexport const BigNatModule_FFT_Fp_mzero = 0;\r\n\r\nexport const BigNatModule_FFT_Fp_mone = 1;\r\n\r\nexport const BigNatModule_FFT_Fp_mtwo = 2;\r\n\r\nexport function BigNatModule_FFT_Fp_mpow(x_mut, n_mut) {\r\n    BigNatModule_FFT_Fp_mpow:\r\n    while (true) {\r\n        const x = x_mut, n = n_mut;\r\n        if (n === 0) {\r\n            return BigNatModule_FFT_Fp_mone;\r\n        }\r\n        else if ((n % 2) === 0) {\r\n            x_mut = (toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\r\n            n_mut = (~(~(n / 2)));\r\n            continue BigNatModule_FFT_Fp_mpow;\r\n        }\r\n        else {\r\n            const y_2 = BigNatModule_FFT_Fp_mpow(toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, ~(~(n / 2)));\r\n            return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_FFT_Fp_mpowL(x_mut, n_mut) {\r\n    BigNatModule_FFT_Fp_mpowL:\r\n    while (true) {\r\n        const x = x_mut, n = n_mut;\r\n        if (equals(n, fromBits(0, 0, false))) {\r\n            return BigNatModule_FFT_Fp_mone;\r\n        }\r\n        else if (equals(op_Modulus(n, fromBits(2, 0, false)), fromBits(0, 0, false))) {\r\n            x_mut = (toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\r\n            n_mut = op_Division(n, fromBits(2, 0, false));\r\n            continue BigNatModule_FFT_Fp_mpowL;\r\n        }\r\n        else {\r\n            const y_2 = BigNatModule_FFT_Fp_mpowL(toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, op_Division(n, fromBits(2, 0, false)));\r\n            return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_FFT_Fp_m2PowNthRoot(n) {\r\n    return BigNatModule_FFT_Fp_mpow(BigNatModule_FFT_w >>> 0, BigNatModule_FFT_pow32(2, BigNatModule_FFT_k - n));\r\n}\r\n\r\nexport function BigNatModule_FFT_Fp_minv(x) {\r\n    return BigNatModule_FFT_Fp_mpowL(x, op_Subtraction(BigNatModule_FFT_primeP, fromBits(2, 0, false)));\r\n}\r\n\r\nexport function BigNatModule_FFT_computeFFT(lambda, mu, n, w, u, res, offset) {\r\n    let x_1, x_3, y_5;\r\n    if (n === 1) {\r\n        res[offset] = u[mu];\r\n    }\r\n    else {\r\n        const halfN = (~(~(n / 2))) | 0;\r\n        const ww = toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(w, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\r\n        const offsetHalfN = (offset + halfN) | 0;\r\n        BigNatModule_FFT_computeFFT(lambda * 2, mu, halfN, ww, u, res, offset);\r\n        BigNatModule_FFT_computeFFT(lambda * 2, lambda + mu, halfN, ww, u, res, offsetHalfN);\r\n        let wj = BigNatModule_FFT_Fp_mone;\r\n        for (let j = 0; j <= (halfN - 1); j++) {\r\n            const even = res[offset + j];\r\n            const odd = res[offsetHalfN + j];\r\n            res[offset + j] = ((even + ((x_1 = wj, toInt(op_Modulus(op_Multiply(fromInteger(x_1, true, 6), fromInteger(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0))) % BigNatModule_FFT_Fp_p);\r\n            res[offsetHalfN + j] = (((even + BigNatModule_FFT_Fp_p) - ((x_3 = wj, toInt(op_Modulus(op_Multiply(fromInteger(x_3, true, 6), fromInteger(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0))) % BigNatModule_FFT_Fp_p);\r\n            wj = ((y_5 = wj, toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(y_5, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigNatModule_FFT_computFftInPlace(n, w, u) {\r\n    const res = fill(new Uint32Array(n), 0, n, BigNatModule_FFT_Fp_mzero);\r\n    BigNatModule_FFT_computeFFT(1, 0, n, w, u, res, 0);\r\n    return res;\r\n}\r\n\r\nexport function BigNatModule_FFT_computeInverseFftInPlace(n, w, uT) {\r\n    const bigKInv = BigNatModule_FFT_Fp_minv(n >>> 0);\r\n    return map((y) => (toInt(op_Modulus(op_Multiply(fromInteger(bigKInv, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0), BigNatModule_FFT_computFftInPlace(n, BigNatModule_FFT_Fp_minv(w), uT), Uint32Array);\r\n}\r\n\r\nexport const BigNatModule_FFT_maxTwoPower = 29;\r\n\r\nexport const BigNatModule_FFT_twoPowerTable = initialize(BigNatModule_FFT_maxTwoPower - 1, (i) => BigNatModule_FFT_pow32(2, i), Int32Array);\r\n\r\nexport function BigNatModule_FFT_computeFftPaddedPolynomialProduct(bigK, k, u, v) {\r\n    const w = BigNatModule_FFT_Fp_m2PowNthRoot(k);\r\n    const n = bigK | 0;\r\n    const uT = BigNatModule_FFT_computFftInPlace(n, w, u);\r\n    const vT = BigNatModule_FFT_computFftInPlace(n, w, v);\r\n    return BigNatModule_FFT_computeInverseFftInPlace(n, w, initialize(n, (i) => {\r\n        const x = uT[i];\r\n        const y = vT[i];\r\n        return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\r\n    }, Uint32Array));\r\n}\r\n\r\nexport function BigNatModule_FFT_padTo(n, u) {\r\n    const uBound = u.length | 0;\r\n    return initialize(n, (i) => ((i < uBound) ? BigNatModule_FFT_Fp_ofInt32(u[i]) : BigNatModule_FFT_Fp_mzero), Uint32Array);\r\n}\r\n\r\nexport function BigNatModule_FFT_computeFftPolynomialProduct(degu, u, degv, v) {\r\n    const patternInput = BigNatModule_FFT_leastBounding2Power((degu + degv) + 1);\r\n    const bigK = patternInput[0] | 0;\r\n    const w = BigNatModule_FFT_Fp_m2PowNthRoot(patternInput[1]);\r\n    const u_1 = BigNatModule_FFT_padTo(bigK, u);\r\n    const v_1 = BigNatModule_FFT_padTo(bigK, v);\r\n    const n = bigK | 0;\r\n    const uT = BigNatModule_FFT_computFftInPlace(n, w, u_1);\r\n    const vT = BigNatModule_FFT_computFftInPlace(n, w, v_1);\r\n    return map((x_1) => BigNatModule_FFT_Fp_toInt(x_1), BigNatModule_FFT_computeInverseFftInPlace(n, w, initialize(n, (i) => {\r\n        const x = uT[i];\r\n        const y = vT[i];\r\n        return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\r\n    }, Uint32Array)), Int32Array);\r\n}\r\n\r\nexport const BigNatModule_FFT_mzero = BigNatModule_FFT_Fp_mzero;\r\n\r\nexport const BigNatModule_FFT_mone = BigNatModule_FFT_Fp_mone;\r\n\r\nexport const BigNatModule_FFT_maxFp = ((BigNatModule_FFT_Fp_p + BigNatModule_FFT_Fp_p) - BigNatModule_FFT_mone) % BigNatModule_FFT_Fp_p;\r\n\r\nexport function BigNatModule_bound(n) {\r\n    return n.bound;\r\n}\r\n\r\nexport function BigNatModule_setBound(n, v) {\r\n    n.bound = (v | 0);\r\n}\r\n\r\nexport function BigNatModule_coeff(n, i) {\r\n    return n.digits[i];\r\n}\r\n\r\nexport function BigNatModule_coeff64(n, i) {\r\n    return fromInteger(BigNatModule_coeff(n, i), false, 2);\r\n}\r\n\r\nexport function BigNatModule_setCoeff(n, i, v) {\r\n    n.digits[i] = (v | 0);\r\n}\r\n\r\nexport function BigNatModule_pow64(x_mut, n_mut) {\r\n    BigNatModule_pow64:\r\n    while (true) {\r\n        const x = x_mut, n = n_mut;\r\n        if (n === 0) {\r\n            return fromBits(1, 0, false);\r\n        }\r\n        else if ((n % 2) === 0) {\r\n            x_mut = op_Multiply(x, x);\r\n            n_mut = (~(~(n / 2)));\r\n            continue BigNatModule_pow64;\r\n        }\r\n        else {\r\n            return op_Multiply(x, BigNatModule_pow64(op_Multiply(x, x), ~(~(n / 2))));\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_pow32(x_mut, n_mut) {\r\n    BigNatModule_pow32:\r\n    while (true) {\r\n        const x = x_mut, n = n_mut;\r\n        if (n === 0) {\r\n            return 1;\r\n        }\r\n        else if ((n % 2) === 0) {\r\n            x_mut = (x * x);\r\n            n_mut = (~(~(n / 2)));\r\n            continue BigNatModule_pow32;\r\n        }\r\n        else {\r\n            return (x * BigNatModule_pow32(x * x, ~(~(n / 2)))) | 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_hash(n) {\r\n    let res = 0;\r\n    for (let i = 0; i <= (n.bound - 1); i++) {\r\n        res = ((n.digits[i] + (res << 3)) | 0);\r\n    }\r\n    return res | 0;\r\n}\r\n\r\nexport function BigNatModule_maxInt(a, b) {\r\n    if (a < b) {\r\n        return b | 0;\r\n    }\r\n    else {\r\n        return a | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_minInt(a, b) {\r\n    if (a < b) {\r\n        return a | 0;\r\n    }\r\n    else {\r\n        return b | 0;\r\n    }\r\n}\r\n\r\nexport const BigNatModule_baseBits = 24;\r\n\r\nexport const BigNatModule_baseN = 16777216;\r\n\r\nexport const BigNatModule_baseMask = 16777215;\r\n\r\nexport const BigNatModule_baseNi64 = fromBits(16777216, 0, false);\r\n\r\nexport const BigNatModule_baseMaski64 = fromBits(16777215, 0, false);\r\n\r\nexport const BigNatModule_baseMaskU = fromBits(16777215, 0, true);\r\n\r\nexport const BigNatModule_baseMask32A = 16777215;\r\n\r\nexport const BigNatModule_baseMask32B = 255;\r\n\r\nexport const BigNatModule_baseShift32B = 24;\r\n\r\nexport const BigNatModule_baseMask64A = 16777215;\r\n\r\nexport const BigNatModule_baseMask64B = 16777215;\r\n\r\nexport const BigNatModule_baseMask64C = 65535;\r\n\r\nexport const BigNatModule_baseShift64B = 24;\r\n\r\nexport const BigNatModule_baseShift64C = 48;\r\n\r\nexport function BigNatModule_divbase(x) {\r\n    return ~(~((x >>> 0) >>> BigNatModule_baseBits));\r\n}\r\n\r\nexport function BigNatModule_modbase(x) {\r\n    return x & BigNatModule_baseMask;\r\n}\r\n\r\nexport function BigNatModule_createN(b) {\r\n    return new BigNat(b, new Int32Array(b));\r\n}\r\n\r\nexport function BigNatModule_copyN(x) {\r\n    return new BigNat(x.bound, copy(x.digits));\r\n}\r\n\r\nexport function BigNatModule_normN(n) {\r\n    const findLeastBound = (na_mut, i_mut) => {\r\n        findLeastBound:\r\n        while (true) {\r\n            const na = na_mut, i = i_mut;\r\n            if ((i === -1) ? true : (na[i] !== 0)) {\r\n                return (i + 1) | 0;\r\n            }\r\n            else {\r\n                na_mut = na;\r\n                i_mut = (i - 1);\r\n                continue findLeastBound;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const bound = findLeastBound(n.digits, n.bound - 1) | 0;\r\n    n.bound = (bound | 0);\r\n    return n;\r\n}\r\n\r\nexport const BigNatModule_boundInt = 2;\r\n\r\nexport const BigNatModule_boundInt64 = 3;\r\n\r\nexport const BigNatModule_boundBase = 1;\r\n\r\nexport function BigNatModule_embed(x) {\r\n    const x_1 = ((x < 0) ? 0 : x) | 0;\r\n    if (x_1 < BigNatModule_baseN) {\r\n        const r = BigNatModule_createN(1);\r\n        r.digits[0] = (x_1 | 0);\r\n        return BigNatModule_normN(r);\r\n    }\r\n    else {\r\n        const r_1 = BigNatModule_createN(BigNatModule_boundInt);\r\n        for (let i = 0; i <= (BigNatModule_boundInt - 1); i++) {\r\n            r_1.digits[i] = (((~(~(x_1 / BigNatModule_pow32(BigNatModule_baseN, i)))) % BigNatModule_baseN) | 0);\r\n        }\r\n        return BigNatModule_normN(r_1);\r\n    }\r\n}\r\n\r\nexport function BigNatModule_embed64(x) {\r\n    const x_1 = (compare(x, fromBits(0, 0, false)) < 0) ? fromBits(0, 0, false) : x;\r\n    const r = BigNatModule_createN(BigNatModule_boundInt64);\r\n    for (let i = 0; i <= (BigNatModule_boundInt64 - 1); i++) {\r\n        r.digits[i] = ((~(~toInt(op_Modulus(op_Division(x_1, BigNatModule_pow64(BigNatModule_baseNi64, i)), BigNatModule_baseNi64)))) | 0);\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_eval32(n) {\r\n    if (n.bound === 1) {\r\n        return n.digits[0] | 0;\r\n    }\r\n    else {\r\n        let acc = 0;\r\n        for (let i = n.bound - 1; i >= 0; i--) {\r\n            acc = ((n.digits[i] + (BigNatModule_baseN * acc)) | 0);\r\n        }\r\n        return acc | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_eval64(n) {\r\n    if (n.bound === 1) {\r\n        return fromInteger(n.digits[0], false, 2);\r\n    }\r\n    else {\r\n        let acc = fromBits(0, 0, false);\r\n        for (let i = n.bound - 1; i >= 0; i--) {\r\n            acc = op_Addition(fromInteger(n.digits[i], false, 2), op_Multiply(BigNatModule_baseNi64, acc));\r\n        }\r\n        return acc;\r\n    }\r\n}\r\n\r\nexport const BigNatModule_one = BigNatModule_embed(1);\r\n\r\nexport const BigNatModule_zero = BigNatModule_embed(0);\r\n\r\nexport function BigNatModule_restrictTo(d, n) {\r\n    return new BigNat(BigNatModule_minInt(d, n.bound), n.digits);\r\n}\r\n\r\nexport function BigNatModule_shiftUp(d, n) {\r\n    const m = BigNatModule_createN(n.bound + d);\r\n    for (let i = 0; i <= (n.bound - 1); i++) {\r\n        m.digits[i + d] = (n.digits[i] | 0);\r\n    }\r\n    return m;\r\n}\r\n\r\nexport function BigNatModule_shiftDown(d, n) {\r\n    if ((n.bound - d) <= 0) {\r\n        return BigNatModule_zero;\r\n    }\r\n    else {\r\n        const m = BigNatModule_createN(n.bound - d);\r\n        for (let i = 0; i <= (m.bound - 1); i++) {\r\n            m.digits[i] = (n.digits[i + d] | 0);\r\n        }\r\n        return m;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_degree(n) {\r\n    return n.bound - 1;\r\n}\r\n\r\nexport function BigNatModule_addP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\r\n    let z, i_1, z_1, i_2;\r\n    BigNatModule_addP:\r\n    while (true) {\r\n        const i = i_mut, n = n_mut, c = c_mut, p = p_mut, q = q_mut, r = r_mut;\r\n        if (i < n) {\r\n            const x = ((((z = p, (i_1 = (i | 0), (i_1 < z.bound) ? z.digits[i_1] : 0))) + ((z_1 = q, (i_2 = (i | 0), (i_2 < z_1.bound) ? z_1.digits[i_2] : 0)))) + c) | 0;\r\n            r.digits[i] = (BigNatModule_modbase(x) | 0);\r\n            i_mut = (i + 1);\r\n            n_mut = n;\r\n            c_mut = BigNatModule_divbase(x);\r\n            p_mut = p;\r\n            q_mut = q;\r\n            r_mut = r;\r\n            continue BigNatModule_addP;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_add(p, q) {\r\n    const rbound = (1 + BigNatModule_maxInt(p.bound, q.bound)) | 0;\r\n    const r = BigNatModule_createN(rbound);\r\n    BigNatModule_addP(0, rbound, 0, p, q, r);\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_subP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\r\n    let z, i_1, z_1, i_2;\r\n    BigNatModule_subP:\r\n    while (true) {\r\n        const i = i_mut, n = n_mut, c = c_mut, p = p_mut, q = q_mut, r = r_mut;\r\n        if (i < n) {\r\n            const x = ((((z = p, (i_1 = (i | 0), (i_1 < z.bound) ? z.digits[i_1] : 0))) - ((z_1 = q, (i_2 = (i | 0), (i_2 < z_1.bound) ? z_1.digits[i_2] : 0)))) + c) | 0;\r\n            if (x > 0) {\r\n                r.digits[i] = (BigNatModule_modbase(x) | 0);\r\n                i_mut = (i + 1);\r\n                n_mut = n;\r\n                c_mut = BigNatModule_divbase(x);\r\n                p_mut = p;\r\n                q_mut = q;\r\n                r_mut = r;\r\n                continue BigNatModule_subP;\r\n            }\r\n            else {\r\n                const x_1 = (x + BigNatModule_baseN) | 0;\r\n                r.digits[i] = (BigNatModule_modbase(x_1) | 0);\r\n                i_mut = (i + 1);\r\n                n_mut = n;\r\n                c_mut = (BigNatModule_divbase(x_1) - 1);\r\n                p_mut = p;\r\n                q_mut = q;\r\n                r_mut = r;\r\n                continue BigNatModule_subP;\r\n            }\r\n        }\r\n        else {\r\n            return c !== 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_sub(p, q) {\r\n    const rbound = BigNatModule_maxInt(p.bound, q.bound) | 0;\r\n    const r = BigNatModule_createN(rbound);\r\n    if (BigNatModule_subP(0, rbound, 0, p, q, r)) {\r\n        return BigNatModule_embed(0);\r\n    }\r\n    else {\r\n        return BigNatModule_normN(r);\r\n    }\r\n}\r\n\r\nexport function BigNatModule_isZero(p) {\r\n    return p.bound === 0;\r\n}\r\n\r\nexport function BigNatModule_IsZero(p) {\r\n    return BigNatModule_isZero(p);\r\n}\r\n\r\nexport function BigNatModule_isOne(p) {\r\n    if (p.bound === 1) {\r\n        return p.digits[0] === 1;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_equal(p, q) {\r\n    if (p.bound === q.bound) {\r\n        const check = (pa_mut, qa_mut, i_mut) => {\r\n            check:\r\n            while (true) {\r\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\r\n                if (i === -1) {\r\n                    return true;\r\n                }\r\n                else if (pa[i] === qa[i]) {\r\n                    pa_mut = pa;\r\n                    qa_mut = qa;\r\n                    i_mut = (i - 1);\r\n                    continue check;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return check(p.digits, q.digits, p.bound - 1);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_shiftCompare(p, pn, q, qn) {\r\n    if ((p.bound + pn) < (q.bound + qn)) {\r\n        return -1;\r\n    }\r\n    else if ((p.bound + pn) > (q.bound + pn)) {\r\n        return 1;\r\n    }\r\n    else {\r\n        const check = (pa_mut, qa_mut, i_mut) => {\r\n            check:\r\n            while (true) {\r\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\r\n                if (i === -1) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    const pai = ((i < pn) ? 0 : pa[i - pn]) | 0;\r\n                    const qai = ((i < qn) ? 0 : qa[i - qn]) | 0;\r\n                    if (pai === qai) {\r\n                        pa_mut = pa;\r\n                        qa_mut = qa;\r\n                        i_mut = (i - 1);\r\n                        continue check;\r\n                    }\r\n                    else if (pai < qai) {\r\n                        return -1;\r\n                    }\r\n                    else {\r\n                        return 1;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return check(p.digits, q.digits, (p.bound + pn) - 1) | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_compare(p, q) {\r\n    if (p.bound < q.bound) {\r\n        return -1;\r\n    }\r\n    else if (p.bound > q.bound) {\r\n        return 1;\r\n    }\r\n    else {\r\n        const check = (pa_mut, qa_mut, i_mut) => {\r\n            check:\r\n            while (true) {\r\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\r\n                if (i === -1) {\r\n                    return 0;\r\n                }\r\n                else if (pa[i] === qa[i]) {\r\n                    pa_mut = pa;\r\n                    qa_mut = qa;\r\n                    i_mut = (i - 1);\r\n                    continue check;\r\n                }\r\n                else if (pa[i] < qa[i]) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return check(p.digits, q.digits, p.bound - 1) | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_lt(p, q) {\r\n    return BigNatModule_compare(p, q) === -1;\r\n}\r\n\r\nexport function BigNatModule_gt(p, q) {\r\n    return BigNatModule_compare(p, q) === 1;\r\n}\r\n\r\nexport function BigNatModule_lte(p, q) {\r\n    return BigNatModule_compare(p, q) !== 1;\r\n}\r\n\r\nexport function BigNatModule_gte(p, q) {\r\n    return BigNatModule_compare(p, q) !== -1;\r\n}\r\n\r\nexport function BigNatModule_min(a, b) {\r\n    if (BigNatModule_lt(a, b)) {\r\n        return a;\r\n    }\r\n    else {\r\n        return b;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_max(a, b) {\r\n    if (BigNatModule_lt(a, b)) {\r\n        return b;\r\n    }\r\n    else {\r\n        return a;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_contributeArr(a_mut, i_mut, c_mut) {\r\n    BigNatModule_contributeArr:\r\n    while (true) {\r\n        const a = a_mut, i = i_mut, c = c_mut;\r\n        const x = op_Addition(fromInteger(a[i], false, 2), c);\r\n        const c_1 = op_Division(x, BigNatModule_baseNi64);\r\n        const x_3 = (~(~toInt(op_BitwiseAnd(x, BigNatModule_baseMaski64)))) | 0;\r\n        a[i] = (x_3 | 0);\r\n        if (compare(c_1, fromBits(0, 0, false)) > 0) {\r\n            a_mut = a;\r\n            i_mut = (i + 1);\r\n            c_mut = c_1;\r\n            continue BigNatModule_contributeArr;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_scale(k, p) {\r\n    const r = BigNatModule_createN(p.bound + BigNatModule_boundInt);\r\n    const k_1 = fromInteger(k, false, 2);\r\n    for (let i = 0; i <= (p.bound - 1); i++) {\r\n        BigNatModule_contributeArr(r.digits, i, op_Multiply(k_1, fromInteger(p.digits[i], false, 2)));\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_mulSchoolBookBothSmall(p, q) {\r\n    const r = BigNatModule_createN(2);\r\n    const rak = op_Multiply(fromInteger(p, false, 2), fromInteger(q, false, 2));\r\n    BigNatModule_setCoeff(r, 0, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\r\n    BigNatModule_setCoeff(r, 1, ~(~toInt(op_Division(rak, BigNatModule_baseNi64))));\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_mulSchoolBookCarry(r_mut, c_mut, k_mut) {\r\n    BigNatModule_mulSchoolBookCarry:\r\n    while (true) {\r\n        const r = r_mut, c = c_mut, k = k_mut;\r\n        if (compare(c, fromBits(0, 0, false)) > 0) {\r\n            const rak = op_Addition(BigNatModule_coeff64(r, k), c);\r\n            BigNatModule_setCoeff(r, k, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\r\n            r_mut = r;\r\n            c_mut = op_Division(rak, BigNatModule_baseNi64);\r\n            k_mut = (k + 1);\r\n            continue BigNatModule_mulSchoolBookCarry;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_mulSchoolBookOneSmall(p, q) {\r\n    const bp = BigNatModule_bound(p) | 0;\r\n    const r = BigNatModule_createN(bp + 1);\r\n    const q_1 = fromInteger(q, false, 2);\r\n    let c = fromBits(0, 0, false);\r\n    for (let i = 0; i <= (bp - 1); i++) {\r\n        const rak = op_Addition(op_Addition(c, BigNatModule_coeff64(r, i)), op_Multiply(BigNatModule_coeff64(p, i), q_1));\r\n        BigNatModule_setCoeff(r, i, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\r\n        c = op_Division(rak, BigNatModule_baseNi64);\r\n    }\r\n    BigNatModule_mulSchoolBookCarry(r, c, bp);\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_mulSchoolBookNeitherSmall(p, q) {\r\n    const r = BigNatModule_createN(p.bound + q.bound);\r\n    const ra = r.digits;\r\n    for (let i = 0; i <= (p.bound - 1); i++) {\r\n        const pai = fromInteger(p.digits[i], false, 2);\r\n        let c = fromBits(0, 0, false);\r\n        let k = i;\r\n        for (let j = 0; j <= (q.bound - 1); j++) {\r\n            const qaj = fromInteger(q.digits[j], false, 2);\r\n            const rak = op_Addition(op_Addition(fromInteger(ra[k], false, 2), c), op_Multiply(pai, qaj));\r\n            ra[k] = ((~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64)))) | 0);\r\n            c = op_Division(rak, BigNatModule_baseNi64);\r\n            k = ((k + 1) | 0);\r\n        }\r\n        BigNatModule_mulSchoolBookCarry(r, c, k);\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_mulSchoolBook(p, q) {\r\n    const pSmall = BigNatModule_bound(p) === 1;\r\n    const qSmall = BigNatModule_bound(q) === 1;\r\n    if (pSmall ? qSmall : false) {\r\n        return BigNatModule_mulSchoolBookBothSmall(BigNatModule_coeff(p, 0), BigNatModule_coeff(q, 0));\r\n    }\r\n    else if (pSmall) {\r\n        return BigNatModule_mulSchoolBookOneSmall(q, BigNatModule_coeff(p, 0));\r\n    }\r\n    else if (qSmall) {\r\n        return BigNatModule_mulSchoolBookOneSmall(p, BigNatModule_coeff(q, 0));\r\n    }\r\n    else {\r\n        return BigNatModule_mulSchoolBookNeitherSmall(p, q);\r\n    }\r\n}\r\n\r\nexport class BigNatModule_encoding extends Record {\r\n    constructor(bigL, twoToBigL, k, bigK, bigN, split, splits) {\r\n        super();\r\n        this.bigL = (bigL | 0);\r\n        this.twoToBigL = (twoToBigL | 0);\r\n        this.k = (k | 0);\r\n        this.bigK = (bigK | 0);\r\n        this.bigN = (bigN | 0);\r\n        this.split = (split | 0);\r\n        this.splits = splits;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_encoding$reflection() {\r\n    return record_type(\"BigInt.BigNatModule.encoding\", [], BigNatModule_encoding, () => [[\"bigL\", int32_type], [\"twoToBigL\", int32_type], [\"k\", int32_type], [\"bigK\", int32_type], [\"bigN\", int32_type], [\"split\", int32_type], [\"splits\", array_type(int32_type)]]);\r\n}\r\n\r\nexport function BigNatModule_mkEncoding(bigL, k, bigK, bigN) {\r\n    return new BigNatModule_encoding(bigL, BigNatModule_pow32(2, bigL), k, bigK, bigN, ~(~(BigNatModule_baseBits / bigL)), initialize(~(~(BigNatModule_baseBits / bigL)), (i) => BigNatModule_pow32(2, bigL * i), Int32Array));\r\n}\r\n\r\nexport const BigNatModule_table = [BigNatModule_mkEncoding(1, 28, 268435456, 268435456), BigNatModule_mkEncoding(2, 26, 67108864, 134217728), BigNatModule_mkEncoding(3, 24, 16777216, 50331648), BigNatModule_mkEncoding(4, 22, 4194304, 16777216), BigNatModule_mkEncoding(5, 20, 1048576, 5242880), BigNatModule_mkEncoding(6, 18, 262144, 1572864), BigNatModule_mkEncoding(7, 16, 65536, 458752), BigNatModule_mkEncoding(8, 14, 16384, 131072), BigNatModule_mkEncoding(9, 12, 4096, 36864), BigNatModule_mkEncoding(10, 10, 1024, 10240), BigNatModule_mkEncoding(11, 8, 256, 2816), BigNatModule_mkEncoding(12, 6, 64, 768), BigNatModule_mkEncoding(13, 4, 16, 208)];\r\n\r\nexport function BigNatModule_calculateTableTow(bigL) {\r\n    const k = (BigNatModule_FFT_maxBitsInsideFp - (2 * bigL)) | 0;\r\n    const bigK = BigNatModule_pow64(fromBits(2, 0, false), k);\r\n    return [bigL, k, bigK, op_Multiply(bigK, fromInteger(bigL, false, 2))];\r\n}\r\n\r\nexport function BigNatModule_encodingGivenResultBits(bitsRes) {\r\n    const selectFrom = (i_mut) => {\r\n        selectFrom:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (((i + 1) < BigNatModule_table.length) ? (bitsRes < BigNatModule_table[i + 1].bigN) : false) {\r\n                i_mut = (i + 1);\r\n                continue selectFrom;\r\n            }\r\n            else {\r\n                return BigNatModule_table[i];\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    if (bitsRes >= BigNatModule_table[0].bigN) {\r\n        throw (new Error(\"Product is huge, around 268435456 bits, beyond quickmul\"));\r\n    }\r\n    else {\r\n        return selectFrom(0);\r\n    }\r\n}\r\n\r\nexport const BigNatModule_bitmask = initialize(BigNatModule_baseBits, (i) => (BigNatModule_pow32(2, i) - 1), Int32Array);\r\n\r\nexport const BigNatModule_twopowers = initialize(BigNatModule_baseBits, (i) => BigNatModule_pow32(2, i), Int32Array);\r\n\r\nexport const BigNatModule_twopowersI64 = initialize(BigNatModule_baseBits, (i) => BigNatModule_pow64(fromBits(2, 0, false), i));\r\n\r\nexport function BigNatModule_wordBits(word) {\r\n    const hi = (k_mut) => {\r\n        hi:\r\n        while (true) {\r\n            const k = k_mut;\r\n            if (k === 0) {\r\n                return 0;\r\n            }\r\n            else if ((word & BigNatModule_twopowers[k - 1]) !== 0) {\r\n                return k | 0;\r\n            }\r\n            else {\r\n                k_mut = (k - 1);\r\n                continue hi;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return hi(BigNatModule_baseBits) | 0;\r\n}\r\n\r\nexport function BigNatModule_bits(u) {\r\n    if (u.bound === 0) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return ((BigNatModule_degree(u) * BigNatModule_baseBits) + BigNatModule_wordBits(u.digits[BigNatModule_degree(u)])) | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_extractBits(n, enc, bi) {\r\n    let z, i, z_1, i_1, z_2, i_2;\r\n    const biw = (~(~(bi / BigNatModule_baseBits))) | 0;\r\n    const bjw = (~(~(((bi + enc.bigL) - 1) / BigNatModule_baseBits))) | 0;\r\n    if (biw !== bjw) {\r\n        const xbit = (bi % BigNatModule_baseBits) | 0;\r\n        return (((((z = n, (i = (biw | 0), (i < z.bound) ? z.digits[i] : 0))) >> xbit) | (((z_1 = n, (i_1 = (bjw | 0), (i_1 < z_1.bound) ? z_1.digits[i_1] : 0))) << (BigNatModule_baseBits - xbit))) & BigNatModule_bitmask[enc.bigL]) | 0;\r\n    }\r\n    else {\r\n        return ((((z_2 = n, (i_2 = (biw | 0), (i_2 < z_2.bound) ? z_2.digits[i_2] : 0))) >> (bi % BigNatModule_baseBits)) & BigNatModule_bitmask[enc.bigL]) | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_encodePoly(enc, n) {\r\n    const poly = fill(new Uint32Array(enc.bigK), 0, enc.bigK, BigNatModule_FFT_Fp_ofInt32(0));\r\n    const biMax = (n.bound * BigNatModule_baseBits) | 0;\r\n    const encoder = (i_mut, bi_mut) => {\r\n        encoder:\r\n        while (true) {\r\n            const i = i_mut, bi = bi_mut;\r\n            if ((i === enc.bigK) ? true : (bi > biMax)) {\r\n            }\r\n            else {\r\n                const pi = BigNatModule_extractBits(n, enc, bi) | 0;\r\n                poly[i] = BigNatModule_FFT_Fp_ofInt32(pi);\r\n                i_mut = (i + 1);\r\n                bi_mut = (bi + enc.bigL);\r\n                continue encoder;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    encoder(0, 0);\r\n    return poly;\r\n}\r\n\r\nexport function BigNatModule_decodeResultBits(enc, poly) {\r\n    let n = 0;\r\n    for (let i = 0; i <= (poly.length - 1); i++) {\r\n        if (poly[i] !== BigNatModule_FFT_mzero) {\r\n            n = (i | 0);\r\n        }\r\n    }\r\n    return (((BigNatModule_FFT_maxBitsInsideFp + (enc.bigL * n)) + 1) + 1) | 0;\r\n}\r\n\r\nexport function BigNatModule_decodePoly(enc, poly) {\r\n    const rbound = ((~(~(BigNatModule_decodeResultBits(enc, poly) / BigNatModule_baseBits))) + 1) | 0;\r\n    const r = BigNatModule_createN(rbound);\r\n    const evaluate = (i_mut, j_mut, d_mut) => {\r\n        evaluate:\r\n        while (true) {\r\n            const i = i_mut, j = j_mut, d = d_mut;\r\n            if (i === enc.bigK) {\r\n            }\r\n            else {\r\n                if (j >= rbound) {\r\n                }\r\n                else {\r\n                    BigNatModule_contributeArr(r.digits, j, op_Multiply(fromInteger(BigNatModule_FFT_Fp_toInt(poly[i]), false, 2), BigNatModule_twopowersI64[d]));\r\n                }\r\n                const d_1 = (d + enc.bigL) | 0;\r\n                const patternInput = (d_1 >= BigNatModule_baseBits) ? [j + 1, d_1 - BigNatModule_baseBits] : [j, d_1];\r\n                i_mut = (i + 1);\r\n                j_mut = patternInput[0];\r\n                d_mut = patternInput[1];\r\n                continue evaluate;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    evaluate(0, 0, 0);\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_quickMulUsingFft(u, v) {\r\n    const enc = BigNatModule_encodingGivenResultBits(BigNatModule_bits(u) + BigNatModule_bits(v));\r\n    return BigNatModule_normN(BigNatModule_decodePoly(enc, BigNatModule_FFT_computeFftPaddedPolynomialProduct(enc.bigK, enc.k, BigNatModule_encodePoly(enc, u), BigNatModule_encodePoly(enc, v))));\r\n}\r\n\r\nexport const BigNatModule_minDigitsKaratsuba = 16;\r\n\r\nexport function BigNatModule_recMulKaratsuba(mul, p, q) {\r\n    const bmax = BigNatModule_maxInt(p.bound, q.bound) | 0;\r\n    if (bmax > BigNatModule_minDigitsKaratsuba) {\r\n        const k = (~(~(bmax / 2))) | 0;\r\n        const a0 = BigNatModule_restrictTo(k, p);\r\n        const a1 = BigNatModule_shiftDown(k, p);\r\n        const b0 = BigNatModule_restrictTo(k, q);\r\n        const b1 = BigNatModule_shiftDown(k, q);\r\n        const q0 = mul(a0, b0);\r\n        const q1 = mul(BigNatModule_add(a0, a1), BigNatModule_add(b0, b1));\r\n        const q2 = mul(a1, b1);\r\n        return BigNatModule_add(q0, BigNatModule_shiftUp(k, BigNatModule_add(BigNatModule_sub(q1, BigNatModule_add(q0, q2)), BigNatModule_shiftUp(k, q2))));\r\n    }\r\n    else {\r\n        return BigNatModule_mulSchoolBook(p, q);\r\n    }\r\n}\r\n\r\nexport function BigNatModule_mulKaratsuba(x, y) {\r\n    return BigNatModule_recMulKaratsuba((x_1, y_1) => BigNatModule_mulKaratsuba(x_1, y_1), x, y);\r\n}\r\n\r\nexport const BigNatModule_productDigitsUpperSchoolBook = ~(~(64000 / BigNatModule_baseBits));\r\n\r\nexport const BigNatModule_singleDigitForceSchoolBook = ~(~(32000 / BigNatModule_baseBits));\r\n\r\nexport const BigNatModule_productDigitsUpperFft = ~(~(BigNatModule_table[0].bigN / BigNatModule_baseBits));\r\n\r\nexport function BigNatModule_mul(p, q) {\r\n    return BigNatModule_mulSchoolBook(p, q);\r\n}\r\n\r\nexport function BigNatModule_scaleSubInPlace(x, f, a, n) {\r\n    const patternInput = [x.digits, BigNatModule_degree(x)];\r\n    const x_1 = patternInput[0];\r\n    const patternInput_1 = [a.digits, BigNatModule_degree(a)];\r\n    const ad = patternInput_1[1] | 0;\r\n    const a_1 = patternInput_1[0];\r\n    const f_1 = fromInteger(f, false, 2);\r\n    let j = 0;\r\n    let z = op_Multiply(f_1, fromInteger(a_1[0], false, 2));\r\n    while ((compare(z, fromBits(0, 0, false)) > 0) ? true : (j < ad)) {\r\n        if (j > patternInput[1]) {\r\n            throw (new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\"));\r\n        }\r\n        let zLo = ~(~toInt(op_BitwiseAnd(z, BigNatModule_baseMaski64)));\r\n        let zHi = op_Division(z, BigNatModule_baseNi64);\r\n        if (zLo <= x_1[j + n]) {\r\n            x_1[j + n] = ((x_1[j + n] - zLo) | 0);\r\n        }\r\n        else {\r\n            x_1[j + n] = ((x_1[j + n] + (BigNatModule_baseN - zLo)) | 0);\r\n            zHi = op_Addition(zHi, fromBits(1, 0, false));\r\n        }\r\n        if (j < ad) {\r\n            z = op_Addition(zHi, op_Multiply(f_1, fromInteger(a_1[j + 1], false, 2)));\r\n        }\r\n        else {\r\n            z = zHi;\r\n        }\r\n        j = ((j + 1) | 0);\r\n    }\r\n    void BigNatModule_normN(x);\r\n}\r\n\r\nexport function BigNatModule_scaleSub(x, f, a, n) {\r\n    const freshx = BigNatModule_add(x, BigNatModule_zero);\r\n    BigNatModule_scaleSubInPlace(freshx, f, a, n);\r\n    return BigNatModule_normN(freshx);\r\n}\r\n\r\nexport function BigNatModule_scaleAddInPlace(x, f, a, n) {\r\n    const patternInput = [x.digits, BigNatModule_degree(x)];\r\n    const x_1 = patternInput[0];\r\n    const patternInput_1 = [a.digits, BigNatModule_degree(a)];\r\n    const ad = patternInput_1[1] | 0;\r\n    const a_1 = patternInput_1[0];\r\n    const f_1 = fromInteger(f, false, 2);\r\n    let j = 0;\r\n    let z = op_Multiply(f_1, fromInteger(a_1[0], false, 2));\r\n    while ((compare(z, fromBits(0, 0, false)) > 0) ? true : (j < ad)) {\r\n        if (j > patternInput[1]) {\r\n            throw (new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\"));\r\n        }\r\n        let zLo = ~(~toInt(op_BitwiseAnd(z, BigNatModule_baseMaski64)));\r\n        let zHi = op_Division(z, BigNatModule_baseNi64);\r\n        if (zLo < (BigNatModule_baseN - x_1[j + n])) {\r\n            x_1[j + n] = ((x_1[j + n] + zLo) | 0);\r\n        }\r\n        else {\r\n            x_1[j + n] = ((zLo - (BigNatModule_baseN - x_1[j + n])) | 0);\r\n            zHi = op_Addition(zHi, fromBits(1, 0, false));\r\n        }\r\n        if (j < ad) {\r\n            z = op_Addition(zHi, op_Multiply(f_1, fromInteger(a_1[j + 1], false, 2)));\r\n        }\r\n        else {\r\n            z = zHi;\r\n        }\r\n        j = ((j + 1) | 0);\r\n    }\r\n    void BigNatModule_normN(x);\r\n}\r\n\r\nexport function BigNatModule_scaleAdd(x, f, a, n) {\r\n    const freshx = BigNatModule_add(x, BigNatModule_zero);\r\n    BigNatModule_scaleAddInPlace(freshx, f, a, n);\r\n    return BigNatModule_normN(freshx);\r\n}\r\n\r\nexport function BigNatModule_removeFactor(x, a, n) {\r\n    const patternInput = [BigNatModule_degree(a), BigNatModule_degree(x)];\r\n    const degx = patternInput[1] | 0;\r\n    const dega = patternInput[0] | 0;\r\n    if (degx < (dega + n)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        const patternInput_1 = [a.digits, x.digits];\r\n        const xa = patternInput_1[1];\r\n        const aa = patternInput_1[0];\r\n        const f = ((dega === 0) ? ((degx === n) ? (~(~(xa[n] / aa[0]))) : (~(~toInt(op_Division(op_Addition(op_Multiply(fromInteger(xa[degx], false, 2), BigNatModule_baseNi64), fromInteger(xa[degx - 1], false, 2)), fromInteger(aa[0], false, 2)))))) : ((degx === (dega + n)) ? (~(~(xa[degx] / (aa[dega] + 1)))) : (~(~toInt(op_Division(op_Addition(op_Multiply(fromInteger(xa[degx], false, 2), BigNatModule_baseNi64), fromInteger(xa[degx - 1], false, 2)), op_Addition(fromInteger(aa[dega], false, 2), fromBits(1, 0, false)))))))) | 0;\r\n        if (f === 0) {\r\n            if (BigNatModule_shiftCompare(a, n, x, 0) !== 1) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        }\r\n        else {\r\n            return f | 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigNatModule_divmod(b, a) {\r\n    if (BigNatModule_isZero(a)) {\r\n        throw (new Error());\r\n    }\r\n    else if (BigNatModule_degree(b) < BigNatModule_degree(a)) {\r\n        return [BigNatModule_zero, b];\r\n    }\r\n    else {\r\n        const x = BigNatModule_copyN(b);\r\n        const d = BigNatModule_createN(((BigNatModule_degree(b) - BigNatModule_degree(a)) + 1) + 1);\r\n        let p = BigNatModule_degree(b);\r\n        const m = BigNatModule_degree(a) | 0;\r\n        let n = p - m;\r\n        const Invariant = (tupledArg) => {\r\n        };\r\n        let finished = false;\r\n        while (!finished) {\r\n            Invariant([d, x, n, p]);\r\n            const f = BigNatModule_removeFactor(x, a, n) | 0;\r\n            if (f > 0) {\r\n                BigNatModule_scaleSubInPlace(x, f, a, n);\r\n                BigNatModule_scaleAddInPlace(d, f, BigNatModule_one, n);\r\n                Invariant([d, x, n, p]);\r\n            }\r\n            else {\r\n                finished = ((f === 0) ? (n === 0) : false);\r\n                if (!finished) {\r\n                    if (p === (m + n)) {\r\n                        Invariant([d, x, n - 1, p]);\r\n                        n = ((n - 1) | 0);\r\n                    }\r\n                    else {\r\n                        Invariant([d, x, n - 1, p - 1]);\r\n                        n = ((n - 1) | 0);\r\n                        p = ((p - 1) | 0);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return [BigNatModule_normN(d), BigNatModule_normN(x)];\r\n    }\r\n}\r\n\r\nexport function BigNatModule_div(b, a) {\r\n    return BigNatModule_divmod(b, a)[0];\r\n}\r\n\r\nexport function BigNatModule_rem(b, a) {\r\n    return BigNatModule_divmod(b, a)[1];\r\n}\r\n\r\nexport function BigNatModule_bitAnd(a, b) {\r\n    const r = BigNatModule_createN(BigNatModule_minInt(a.bound, b.bound));\r\n    for (let i = 0; i <= (r.bound - 1); i++) {\r\n        r.digits[i] = ((a.digits[i] & b.digits[i]) | 0);\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_bitOr(a, b) {\r\n    const r = BigNatModule_createN(BigNatModule_maxInt(a.bound, b.bound));\r\n    for (let i = 0; i <= (a.bound - 1); i++) {\r\n        r.digits[i] = ((r.digits[i] | a.digits[i]) | 0);\r\n    }\r\n    for (let i_1 = 0; i_1 <= (b.bound - 1); i_1++) {\r\n        r.digits[i_1] = ((r.digits[i_1] | b.digits[i_1]) | 0);\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_bitXor(a, b) {\r\n    const r = BigNatModule_createN(BigNatModule_maxInt(a.bound, b.bound));\r\n    for (let i = 0; i <= (a.bound - 1); i++) {\r\n        r.digits[i] = ((r.digits[i] ^ a.digits[i]) | 0);\r\n    }\r\n    for (let i_1 = 0; i_1 <= (b.bound - 1); i_1++) {\r\n        r.digits[i_1] = ((r.digits[i_1] ^ b.digits[i_1]) | 0);\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_hcf(a, b) {\r\n    const hcfloop = (a_1_mut, b_1_mut) => {\r\n        hcfloop:\r\n        while (true) {\r\n            const a_1 = a_1_mut, b_1 = b_1_mut;\r\n            if (BigNatModule_equal(BigNatModule_zero, a_1)) {\r\n                return b_1;\r\n            }\r\n            else {\r\n                a_1_mut = BigNatModule_divmod(b_1, a_1)[1];\r\n                b_1_mut = a_1;\r\n                continue hcfloop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    if (BigNatModule_lt(a, b)) {\r\n        return hcfloop(a, b);\r\n    }\r\n    else {\r\n        return hcfloop(b, a);\r\n    }\r\n}\r\n\r\nexport const BigNatModule_two = BigNatModule_embed(2);\r\n\r\nexport function BigNatModule_powi(x, n) {\r\n    const power = (acc_mut, x_1_mut, n_1_mut) => {\r\n        power:\r\n        while (true) {\r\n            const acc = acc_mut, x_1 = x_1_mut, n_1 = n_1_mut;\r\n            if (n_1 === 0) {\r\n                return acc;\r\n            }\r\n            else if ((n_1 % 2) === 0) {\r\n                acc_mut = acc;\r\n                x_1_mut = BigNatModule_mul(x_1, x_1);\r\n                n_1_mut = (~(~(n_1 / 2)));\r\n                continue power;\r\n            }\r\n            else {\r\n                acc_mut = BigNatModule_mul(x_1, acc);\r\n                x_1_mut = BigNatModule_mul(x_1, x_1);\r\n                n_1_mut = (~(~(n_1 / 2)));\r\n                continue power;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return power(BigNatModule_one, x, n);\r\n}\r\n\r\nexport function BigNatModule_pow(x, n) {\r\n    const power = (acc_mut, x_1_mut, n_1_mut) => {\r\n        power:\r\n        while (true) {\r\n            const acc = acc_mut, x_1 = x_1_mut, n_1 = n_1_mut;\r\n            if (BigNatModule_isZero(n_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                const patternInput = BigNatModule_divmod(n_1, BigNatModule_two);\r\n                const ndiv2 = patternInput[0];\r\n                if (BigNatModule_isZero(patternInput[1])) {\r\n                    acc_mut = acc;\r\n                    x_1_mut = BigNatModule_mul(x_1, x_1);\r\n                    n_1_mut = ndiv2;\r\n                    continue power;\r\n                }\r\n                else {\r\n                    acc_mut = BigNatModule_mul(x_1, acc);\r\n                    x_1_mut = BigNatModule_mul(x_1, x_1);\r\n                    n_1_mut = ndiv2;\r\n                    continue power;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return power(BigNatModule_one, x, n);\r\n}\r\n\r\nexport function BigNatModule_toFloat(n) {\r\n    const evalFloat = (acc_mut, k_mut, i_mut) => {\r\n        evalFloat:\r\n        while (true) {\r\n            const acc = acc_mut, k = k_mut, i = i_mut;\r\n            if (i === n.bound) {\r\n                return acc;\r\n            }\r\n            else {\r\n                acc_mut = (acc + (k * n.digits[i]));\r\n                k_mut = (k * BigNatModule_baseN);\r\n                i_mut = (i + 1);\r\n                continue evalFloat;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return evalFloat(0, 1, 0);\r\n}\r\n\r\nexport function BigNatModule_ofInt32(n) {\r\n    return BigNatModule_embed(n);\r\n}\r\n\r\nexport function BigNatModule_ofInt64(n) {\r\n    return BigNatModule_embed64(n);\r\n}\r\n\r\nexport function BigNatModule_toUInt32(n) {\r\n    const matchValue = n.bound | 0;\r\n    switch (matchValue) {\r\n        case 0: {\r\n            return 0;\r\n        }\r\n        case 1: {\r\n            const value = n.digits[0] | 0;\r\n            return value >>> 0;\r\n        }\r\n        case 2: {\r\n            const patternInput = [n.digits[0], n.digits[1]];\r\n            const xB = patternInput[1] | 0;\r\n            if (xB > BigNatModule_baseMask32B) {\r\n                throw (new Error());\r\n            }\r\n            return ((patternInput[0] & BigNatModule_baseMask32A) >>> 0) + ((((xB & BigNatModule_baseMask32B) >>> 0) << BigNatModule_baseShift32B) >>> 0);\r\n        }\r\n        default: {\r\n            throw (new Error());\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigNatModule_toUInt64(n) {\r\n    const matchValue = n.bound | 0;\r\n    switch (matchValue) {\r\n        case 0: {\r\n            return fromBits(0, 0, true);\r\n        }\r\n        case 1: {\r\n            return fromInteger(n.digits[0], true, 2);\r\n        }\r\n        case 2: {\r\n            const patternInput = [n.digits[0], n.digits[1]];\r\n            return op_Addition(fromInteger(patternInput[0] & BigNatModule_baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B));\r\n        }\r\n        case 3: {\r\n            const patternInput_1 = [n.digits[0], n.digits[1], n.digits[2]];\r\n            const xC = patternInput_1[2] | 0;\r\n            if (xC > BigNatModule_baseMask64C) {\r\n                throw (new Error());\r\n            }\r\n            return op_Addition(op_Addition(fromInteger(patternInput_1[0] & BigNatModule_baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput_1[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B)), op_LeftShift(fromInteger(xC & BigNatModule_baseMask64C, true, 2), BigNatModule_baseShift64C));\r\n        }\r\n        default: {\r\n            throw (new Error());\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigNatModule_toString(n) {\r\n    const degn = BigNatModule_degree(n) | 0;\r\n    const route = (prior_mut, k_mut, ten2k_mut) => {\r\n        route:\r\n        while (true) {\r\n            const prior = prior_mut, k = k_mut, ten2k = ten2k_mut;\r\n            if (BigNatModule_degree(ten2k) > degn) {\r\n                return cons([k, ten2k], prior);\r\n            }\r\n            else {\r\n                prior_mut = cons([k, ten2k], prior);\r\n                k_mut = (k + 1);\r\n                ten2k_mut = BigNatModule_mul(ten2k, ten2k);\r\n                continue route;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const collect = (isLeading_mut, digits_mut, n_1_mut, _arg1_mut) => {\r\n        collect:\r\n        while (true) {\r\n            const isLeading = isLeading_mut, digits = digits_mut, n_1 = n_1_mut, _arg1 = _arg1_mut;\r\n            if (!isEmpty(_arg1)) {\r\n                const prior_1 = tail(_arg1);\r\n                const patternInput = BigNatModule_divmod(n_1, head(_arg1)[1]);\r\n                const nL = patternInput[1];\r\n                const nH = patternInput[0];\r\n                if (isLeading ? BigNatModule_isZero(nH) : false) {\r\n                    isLeading_mut = isLeading;\r\n                    digits_mut = digits;\r\n                    n_1_mut = nL;\r\n                    _arg1_mut = prior_1;\r\n                    continue collect;\r\n                }\r\n                else {\r\n                    isLeading_mut = isLeading;\r\n                    digits_mut = collect(false, digits, nL, prior_1);\r\n                    n_1_mut = nH;\r\n                    _arg1_mut = prior_1;\r\n                    continue collect;\r\n                }\r\n            }\r\n            else {\r\n                const n_2 = BigNatModule_eval32(n_1) | 0;\r\n                if (isLeading ? (n_2 === 0) : false) {\r\n                    return digits;\r\n                }\r\n                else {\r\n                    return cons(int32ToString(n_2), digits);\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const digits_4 = collect(true, empty(), n, route(empty(), 0, BigNatModule_embed(10)));\r\n    if (isEmpty(digits_4)) {\r\n        return \"0\";\r\n    }\r\n    else {\r\n        return join(\"\", toArray(digits_4));\r\n    }\r\n}\r\n\r\nexport function BigNatModule_ofString(str) {\r\n    const len = str.length | 0;\r\n    if (isNullOrEmpty(str)) {\r\n        throw (new Error(\"empty string\\\\nParameter name: str\"));\r\n    }\r\n    const ten = BigNatModule_embed(10);\r\n    const build = (acc_mut, i_mut) => {\r\n        build:\r\n        while (true) {\r\n            const acc = acc_mut, i = i_mut;\r\n            if (i === len) {\r\n                return acc;\r\n            }\r\n            else {\r\n                const d = (str[i].charCodeAt(0) - \"0\".charCodeAt(0)) | 0;\r\n                if ((0 <= d) ? (d <= 9) : false) {\r\n                    acc_mut = BigNatModule_add(BigNatModule_mul(ten, acc), BigNatModule_embed(d));\r\n                    i_mut = (i + 1);\r\n                    continue build;\r\n                }\r\n                else {\r\n                    throw (new Error());\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return build(BigNatModule_embed(0), 0);\r\n}\r\n\r\nexport function BigNatModule_isSmall(n) {\r\n    return n.bound <= 1;\r\n}\r\n\r\nexport function BigNatModule_getSmall(n) {\r\n    const z = n;\r\n    const i = 0;\r\n    if (i < z.bound) {\r\n        return z.digits[i] | 0;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_factorial(n) {\r\n    const productR = (a, b) => {\r\n        if (BigNatModule_equal(a, b)) {\r\n            return a;\r\n        }\r\n        else {\r\n            const m = BigNatModule_div(BigNatModule_add(a, b), BigNatModule_ofInt32(2));\r\n            return BigNatModule_mul(productR(a, m), productR(BigNatModule_add(m, BigNatModule_one), b));\r\n        }\r\n    };\r\n    return productR(BigNatModule_one, n);\r\n}\r\n\r\n","import { BigNatModule_factorial, BigNatModule_ofString, BigNatModule_toFloat, BigNatModule_toUInt64, BigNatModule_toUInt32, BigNatModule_pow, BigNatModule_two, BigNatModule_rem, BigNatModule_lte, BigNatModule_hcf, BigNatModule_bitXor, BigNatModule_bitOr, BigNatModule_bitAnd, BigNatModule_divmod, BigNatModule_mul, BigNatModule_isOne, BigNatModule_sub, BigNatModule_gte, BigNatModule_scale, BigNatModule_one, BigNatModule_add, BigNatModule_ofInt64, BigNatModule_hash, BigNatModule_gt, BigNatModule_lt, BigNatModule_equal, BigNatModule_getSmall, BigNatModule_isSmall, BigNatModule_ofInt32, BigNatModule_toString, BigNatModule_isZero } from \"./n.js\";\r\nimport { Record, toString } from \"../Types.js\";\r\nimport { class_type } from \"../Reflection.js\";\r\nimport { initialize } from \"../Array.js\";\r\nimport { op_Addition, op_Multiply, fromValue, equals, fromBits, compare, fromInteger, op_UnaryNegation } from \"../Long.js\";\r\nimport { op_UnaryNegation_Int32 } from \"../Int32.js\";\r\nimport Decimal from \"../Decimal.js\";\r\n\r\nexport class BigInteger extends Record {\r\n    constructor(signInt, v) {\r\n        super();\r\n        this.signInt = (signInt | 0);\r\n        this.v = v;\r\n    }\r\n    toString() {\r\n        const x = this;\r\n        const matchValue = BigInteger__get_SignInt(x) | 0;\r\n        switch (matchValue) {\r\n            case -1: {\r\n                return BigNatModule_isZero(BigInteger__get_V(x)) ? \"0\" : (\"-\" + BigNatModule_toString(BigInteger__get_V(x)));\r\n            }\r\n            case 0: {\r\n                return \"0\";\r\n            }\r\n            case 1: {\r\n                return BigNatModule_toString(BigInteger__get_V(x));\r\n            }\r\n            default: {\r\n                throw (new Error(\"signs should be +/- 1 or 0\"));\r\n            }\r\n        }\r\n    }\r\n    Equals(obj) {\r\n        const this$ = this;\r\n        return (obj instanceof BigInteger) ? BigInteger_op_Equality_56F059C0(this$, obj) : false;\r\n    }\r\n    GetHashCode() {\r\n        const x = this;\r\n        return BigInteger_hash_Z665282C2(x) | 0;\r\n    }\r\n    toJSON(_key) {\r\n        const this$ = this;\r\n        return toString(this$);\r\n    }\r\n    CompareTo(obj) {\r\n        const this$ = this;\r\n        if (obj instanceof BigInteger) {\r\n            return BigInteger_compare_56F059C0(this$, obj) | 0;\r\n        }\r\n        else {\r\n            throw (new Error(\"the objects are not comparable\\\\nParameter name: obj\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger$reflection() {\r\n    return class_type(\"BigInt.BigInteger\", void 0, BigInteger, class_type(\"System.ValueType\"));\r\n}\r\n\r\nexport function BigInteger_$ctor_Z2BE94A1(signInt, v) {\r\n    return new BigInteger(signInt, v);\r\n}\r\n\r\n(() => {\r\n    BigInteger.smallLim = 4096;\r\n    BigInteger.smallPosTab = initialize(BigInteger.smallLim, (n) => BigNatModule_ofInt32(n));\r\n    BigInteger.one = BigInteger_$ctor_Z524259A4(1);\r\n    BigInteger.two = BigInteger_$ctor_Z524259A4(2);\r\n    BigInteger.zero = BigInteger_$ctor_Z524259A4(0);\r\n})();\r\n\r\nexport function BigInteger_nat_Z67CCE57D(n) {\r\n    if (BigNatModule_isSmall(n) ? (BigNatModule_getSmall(n) < BigInteger.smallLim) : false) {\r\n        return BigInteger.smallPosTab[BigNatModule_getSmall(n)];\r\n    }\r\n    else {\r\n        return n;\r\n    }\r\n}\r\n\r\nexport function BigInteger_create_Z2BE94A1(s, n) {\r\n    return BigInteger_$ctor_Z2BE94A1(s, BigInteger_nat_Z67CCE57D(n));\r\n}\r\n\r\nexport function BigInteger_posn_Z67CCE57D(n) {\r\n    return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(n));\r\n}\r\n\r\nexport function BigInteger_negn_Z67CCE57D(n) {\r\n    return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(n));\r\n}\r\n\r\nexport function BigInteger__get_Sign(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return x.signInt | 0;\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_SignInt(x) {\r\n    return x.signInt;\r\n}\r\n\r\nexport function BigInteger__get_V(x) {\r\n    return x.v;\r\n}\r\n\r\nexport function BigInteger_op_Equality_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    let pattern_matching_result;\r\n    if (matchValue[0] === -1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 1;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 8;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 3;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 6;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 4;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 5;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 7;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 9;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return BigNatModule_equal(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 1: {\r\n            return BigNatModule_equal(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 2: {\r\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        case 3: {\r\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        case 4: {\r\n            return true;\r\n        }\r\n        case 5: {\r\n            return BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 6: {\r\n            return BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 7: {\r\n            return BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 8: {\r\n            return BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 9: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_Inequality_56F059C0(x, y) {\r\n    return !BigInteger_op_Equality_56F059C0(x, y);\r\n}\r\n\r\nexport function BigInteger_op_LessThan_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    let pattern_matching_result;\r\n    if (matchValue[0] === -1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 1;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 8;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 3;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 6;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 4;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 5;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 7;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 9;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return BigNatModule_lt(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 1: {\r\n            return BigNatModule_lt(BigInteger__get_V(y), BigInteger__get_V(x));\r\n        }\r\n        case 2: {\r\n            return false;\r\n        }\r\n        case 3: {\r\n            if (!BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return true;\r\n            }\r\n            else {\r\n                return !BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n        }\r\n        case 4: {\r\n            return false;\r\n        }\r\n        case 5: {\r\n            return !BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 6: {\r\n            return false;\r\n        }\r\n        case 7: {\r\n            return false;\r\n        }\r\n        case 8: {\r\n            return !BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 9: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_GreaterThan_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    let pattern_matching_result;\r\n    if (matchValue[0] === -1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 1;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 8;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 3;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 6;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 4;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 5;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 7;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 9;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return BigNatModule_gt(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 1: {\r\n            return BigNatModule_gt(BigInteger__get_V(y), BigInteger__get_V(x));\r\n        }\r\n        case 2: {\r\n            if (!BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return true;\r\n            }\r\n            else {\r\n                return !BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n        }\r\n        case 3: {\r\n            return false;\r\n        }\r\n        case 4: {\r\n            return false;\r\n        }\r\n        case 5: {\r\n            return false;\r\n        }\r\n        case 6: {\r\n            return !BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 7: {\r\n            return !BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 8: {\r\n            return false;\r\n        }\r\n        case 9: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_compare_56F059C0(n, nn) {\r\n    if (BigInteger_op_LessThan_56F059C0(n, nn)) {\r\n        return -1;\r\n    }\r\n    else if (BigInteger_op_Equality_56F059C0(n, nn)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nexport function BigInteger_hash_Z665282C2(z) {\r\n    if (BigInteger__get_SignInt(z) === 0) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return (BigInteger__get_SignInt(z) + BigNatModule_hash(BigInteger__get_V(z))) | 0;\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_StructuredDisplayString(x) {\r\n    return toString(x);\r\n}\r\n\r\nexport function BigInteger_$ctor_Z524259A4(n) {\r\n    if (n >= 0) {\r\n        return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt32(n)));\r\n    }\r\n    else if (n === -2147483648) {\r\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(op_UnaryNegation(fromInteger(n, false, 2)))));\r\n    }\r\n    else {\r\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt32(op_UnaryNegation_Int32(n))));\r\n    }\r\n}\r\n\r\nexport function BigInteger_$ctor_Z524259C1(n) {\r\n    if (compare(n, fromBits(0, 0, false)) >= 0) {\r\n        return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(n)));\r\n    }\r\n    else if (equals(n, fromBits(0, 2147483648, false))) {\r\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_add(BigNatModule_ofInt64(fromBits(4294967295, 2147483647, false)), BigNatModule_one)));\r\n    }\r\n    else {\r\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(op_UnaryNegation(n))));\r\n    }\r\n}\r\n\r\nexport function BigInteger_get_One() {\r\n    return BigInteger.one;\r\n}\r\n\r\nexport function BigInteger_get_Two() {\r\n    return BigInteger.two;\r\n}\r\n\r\nexport function BigInteger_get_Zero() {\r\n    return BigInteger.zero;\r\n}\r\n\r\nexport function BigInteger_op_UnaryNegation_Z665282C2(z) {\r\n    const matchValue = BigInteger__get_SignInt(z) | 0;\r\n    if (matchValue === 0) {\r\n        return BigInteger_get_Zero();\r\n    }\r\n    else {\r\n        return BigInteger_create_Z2BE94A1(op_UnaryNegation_Int32(matchValue), BigInteger__get_V(z));\r\n    }\r\n}\r\n\r\nexport function BigInteger_Scale_Z320F31E(k, z) {\r\n    if (BigInteger__get_SignInt(z) === 0) {\r\n        return BigInteger_get_Zero();\r\n    }\r\n    else if (k < 0) {\r\n        return BigInteger_create_Z2BE94A1(op_UnaryNegation_Int32(BigInteger__get_SignInt(z)), BigNatModule_scale(op_UnaryNegation_Int32(k), BigInteger__get_V(z)));\r\n    }\r\n    else {\r\n        return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(z), BigNatModule_scale(k, BigInteger__get_V(z)));\r\n    }\r\n}\r\n\r\nexport function BigInteger_subnn_6A57060(nx, ny) {\r\n    if (BigNatModule_gte(nx, ny)) {\r\n        return BigInteger_posn_Z67CCE57D(BigNatModule_sub(nx, ny));\r\n    }\r\n    else {\r\n        return BigInteger_negn_Z67CCE57D(BigNatModule_sub(ny, nx));\r\n    }\r\n}\r\n\r\nexport function BigInteger_addnn_6A57060(nx, ny) {\r\n    return BigInteger_posn_Z67CCE57D(BigNatModule_add(nx, ny));\r\n}\r\n\r\nexport function BigInteger__get_IsZero(x) {\r\n    if (BigInteger__get_SignInt(x) === 0) {\r\n        return true;\r\n    }\r\n    else {\r\n        return BigNatModule_isZero(BigInteger__get_V(x));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_IsOne(x) {\r\n    if (BigInteger__get_SignInt(x) === 1) {\r\n        return BigNatModule_isOne(BigInteger__get_V(x));\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_Addition_56F059C0(x, y) {\r\n    if (BigInteger__get_IsZero(y)) {\r\n        return x;\r\n    }\r\n    else if (BigInteger__get_IsZero(x)) {\r\n        return y;\r\n    }\r\n    else {\r\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n        let pattern_matching_result;\r\n        if (matchValue[0] === -1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 1;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 3;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else if (matchValue[0] === 1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 2;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 4;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\r\n            }\r\n            case 1: {\r\n                return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n            }\r\n            case 2: {\r\n                return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\r\n            }\r\n            case 3: {\r\n                return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\r\n            }\r\n            case 4: {\r\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_Subtraction_56F059C0(x, y) {\r\n    if (BigInteger__get_IsZero(y)) {\r\n        return x;\r\n    }\r\n    else if (BigInteger__get_IsZero(x)) {\r\n        return BigInteger_op_UnaryNegation_Z665282C2(y);\r\n    }\r\n    else {\r\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n        let pattern_matching_result;\r\n        if (matchValue[0] === -1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 1;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 3;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else if (matchValue[0] === 1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 2;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 4;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\r\n            }\r\n            case 1: {\r\n                return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\r\n            }\r\n            case 2: {\r\n                return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\r\n            }\r\n            case 3: {\r\n                return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n            }\r\n            case 4: {\r\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_Multiply_56F059C0(x, y) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return x;\r\n    }\r\n    else if (BigInteger__get_IsZero(y)) {\r\n        return y;\r\n    }\r\n    else if (BigInteger__get_IsOne(x)) {\r\n        return y;\r\n    }\r\n    else if (BigInteger__get_IsOne(y)) {\r\n        return x;\r\n    }\r\n    else {\r\n        const m = BigNatModule_mul(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(x) * BigInteger__get_SignInt(y), m);\r\n    }\r\n}\r\n\r\nexport function BigInteger_DivRem_56F059C0(x, y) {\r\n    if (BigInteger__get_IsZero(y)) {\r\n        throw (new Error());\r\n    }\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return [BigInteger_get_Zero(), BigInteger_get_Zero()];\r\n    }\r\n    else {\r\n        const patternInput = BigNatModule_divmod(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        const r = patternInput[1];\r\n        const d = patternInput[0];\r\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n        let pattern_matching_result;\r\n        if (matchValue[0] === -1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 1;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 3;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else if (matchValue[0] === 1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 2;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 4;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return [BigInteger_posn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\r\n            }\r\n            case 1: {\r\n                return [BigInteger_posn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\r\n            }\r\n            case 2: {\r\n                return [BigInteger_negn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\r\n            }\r\n            case 3: {\r\n                return [BigInteger_negn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\r\n            }\r\n            case 4: {\r\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_Division_56F059C0(x, y) {\r\n    return BigInteger_DivRem_56F059C0(x, y)[0];\r\n}\r\n\r\nexport function BigInteger_op_Modulus_56F059C0(x, y) {\r\n    return BigInteger_DivRem_56F059C0(x, y)[1];\r\n}\r\n\r\nexport function BigInteger_op_RightShift_62E082A2(x, y) {\r\n    return BigInteger_op_Division_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\r\n}\r\n\r\nexport function BigInteger_op_LeftShift_62E082A2(x, y) {\r\n    return BigInteger_op_Multiply_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\r\n}\r\n\r\nexport function BigInteger_op_BitwiseAnd_56F059C0(x, y) {\r\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitAnd(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n}\r\n\r\nexport function BigInteger_op_BitwiseOr_56F059C0(x, y) {\r\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitOr(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n}\r\n\r\nexport function BigInteger_op_ExclusiveOr_56F059C0(x, y) {\r\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitXor(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n}\r\n\r\nexport function BigInteger_GreatestCommonDivisor_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    if (matchValue[0] === 0) {\r\n        if (matchValue[1] === 0) {\r\n            return BigInteger_get_Zero();\r\n        }\r\n        else {\r\n            return BigInteger_posn_Z67CCE57D(BigInteger__get_V(y));\r\n        }\r\n    }\r\n    else if (matchValue[1] === 0) {\r\n        return BigInteger_posn_Z67CCE57D(BigInteger__get_V(x));\r\n    }\r\n    else {\r\n        return BigInteger_posn_Z67CCE57D(BigNatModule_hcf(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_IsNegative(x) {\r\n    if (BigInteger__get_SignInt(x) === -1) {\r\n        return !BigInteger__get_IsZero(x);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_IsPositive(x) {\r\n    if (BigInteger__get_SignInt(x) === 1) {\r\n        return !BigInteger__get_IsZero(x);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function BigInteger_Abs_Z665282C2(x) {\r\n    if (BigInteger__get_SignInt(x) === -1) {\r\n        return BigInteger_op_UnaryNegation_Z665282C2(x);\r\n    }\r\n    else {\r\n        return x;\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_LessThanOrEqual_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    let pattern_matching_result;\r\n    if (matchValue[0] === -1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 1;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 6;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 3;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 8;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 4;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 7;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 5;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 9;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return BigNatModule_lte(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 1: {\r\n            return BigNatModule_lte(BigInteger__get_V(y), BigInteger__get_V(x));\r\n        }\r\n        case 2: {\r\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        case 3: {\r\n            return true;\r\n        }\r\n        case 4: {\r\n            return true;\r\n        }\r\n        case 5: {\r\n            return BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 6: {\r\n            return true;\r\n        }\r\n        case 7: {\r\n            return true;\r\n        }\r\n        case 8: {\r\n            return BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 9: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_GreaterThanOrEqual_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    let pattern_matching_result;\r\n    if (matchValue[0] === -1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 1;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 6;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 3;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 8;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 4;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 7;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 5;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 9;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return BigNatModule_gte(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 1: {\r\n            return BigNatModule_gte(BigInteger__get_V(y), BigInteger__get_V(x));\r\n        }\r\n        case 2: {\r\n            return true;\r\n        }\r\n        case 3: {\r\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        case 4: {\r\n            return true;\r\n        }\r\n        case 5: {\r\n            return true;\r\n        }\r\n        case 6: {\r\n            return BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 7: {\r\n            return BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 8: {\r\n            return true;\r\n        }\r\n        case 9: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_Pow_62E082A2(x, y) {\r\n    if (y < 0) {\r\n        throw (new Error(\"y\"));\r\n    }\r\n    const matchValue = [BigInteger__get_IsZero(x), y];\r\n    if (matchValue[0]) {\r\n        if (matchValue[1] === 0) {\r\n            return BigInteger_get_One();\r\n        }\r\n        else {\r\n            return BigInteger_get_Zero();\r\n        }\r\n    }\r\n    else {\r\n        const yval = BigInteger_$ctor_Z524259A4(y);\r\n        return BigInteger_create_Z2BE94A1(BigNatModule_isZero(BigNatModule_rem(BigInteger__get_V(yval), BigNatModule_two)) ? 1 : BigInteger__get_SignInt(x), BigNatModule_pow(BigInteger__get_V(x), BigInteger__get_V(yval)));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToInt32(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        const u = BigNatModule_toUInt32(BigInteger__get_V(x));\r\n        if (u <= (2147483647 >>> 0)) {\r\n            return (BigInteger__get_SignInt(x) * (~(~u))) | 0;\r\n        }\r\n        else if ((BigInteger__get_SignInt(x) === -1) ? (u === ((2147483647 + 1) >>> 0)) : false) {\r\n            return -2147483648;\r\n        }\r\n        else {\r\n            throw (new Error());\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToUInt32(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return BigNatModule_toUInt32(BigInteger__get_V(x));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToInt64(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return fromBits(0, 0, false);\r\n    }\r\n    else {\r\n        const u = BigNatModule_toUInt64(BigInteger__get_V(x));\r\n        if (compare(u, fromValue(fromBits(4294967295, 2147483647, false), true)) <= 0) {\r\n            return op_Multiply(fromInteger(BigInteger__get_SignInt(x), false, 2), fromValue(u, false));\r\n        }\r\n        else if ((BigInteger__get_SignInt(x) === -1) ? equals(u, fromValue(op_Addition(fromBits(4294967295, 2147483647, false), fromBits(1, 0, false)), true)) : false) {\r\n            return fromBits(0, 2147483648, false);\r\n        }\r\n        else {\r\n            throw (new Error());\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToUInt64(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return fromBits(0, 0, true);\r\n    }\r\n    else {\r\n        return BigNatModule_toUInt64(BigInteger__get_V(x));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToDouble(x) {\r\n    const matchValue = BigInteger__get_SignInt(x) | 0;\r\n    switch (matchValue) {\r\n        case -1: {\r\n            return -BigNatModule_toFloat(BigInteger__get_V(x));\r\n        }\r\n        case 0: {\r\n            return 0;\r\n        }\r\n        case 1: {\r\n            return BigNatModule_toFloat(BigInteger__get_V(x));\r\n        }\r\n        default: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToSByte(x) {\r\n    return (BigInteger__get_ToInt32(x) + 0x80 & 0xFF) - 0x80;\r\n}\r\n\r\nexport function BigInteger__get_ToByte(x) {\r\n    return BigInteger__get_ToUInt32(x) & 0xFF;\r\n}\r\n\r\nexport function BigInteger__get_ToInt16(x) {\r\n    return (BigInteger__get_ToInt32(x) + 0x8000 & 0xFFFF) - 0x8000;\r\n}\r\n\r\nexport function BigInteger__get_ToUInt16(x) {\r\n    return BigInteger__get_ToUInt32(x) & 0xFFFF;\r\n}\r\n\r\nexport function BigInteger__get_ToSingle(x) {\r\n    return BigInteger__get_ToDouble(x);\r\n}\r\n\r\nexport function BigInteger__get_ToDecimal(x) {\r\n    return new Decimal(BigInteger__get_ToDouble(x));\r\n}\r\n\r\nexport function BigInteger_Parse_Z721C83C5(text) {\r\n    if (text == null) {\r\n        throw (new Error(\"text\"));\r\n    }\r\n    const text_1 = text.trim();\r\n    const len = text_1.length | 0;\r\n    if (len === 0) {\r\n        throw (new Error());\r\n    }\r\n    const matchValue = [text_1[0], len];\r\n    if (matchValue[0] === \"+\") {\r\n        if (matchValue[1] === 1) {\r\n            throw (new Error());\r\n        }\r\n        else {\r\n            return BigInteger_posn_Z67CCE57D(BigNatModule_ofString(text_1.slice(1, (len - 1) + 1)));\r\n        }\r\n    }\r\n    else if (matchValue[0] === \"-\") {\r\n        if (matchValue[1] === 1) {\r\n            throw (new Error());\r\n        }\r\n        else {\r\n            return BigInteger_negn_Z67CCE57D(BigNatModule_ofString(text_1.slice(1, (len - 1) + 1)));\r\n        }\r\n    }\r\n    else {\r\n        return BigInteger_posn_Z67CCE57D(BigNatModule_ofString(text_1));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_IsSmall(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return true;\r\n    }\r\n    else {\r\n        return BigNatModule_isSmall(BigInteger__get_V(x));\r\n    }\r\n}\r\n\r\nexport function BigInteger_Factorial_Z665282C2(x) {\r\n    if (BigInteger__get_IsNegative(x)) {\r\n        throw (new Error(\"mustBeNonNegative\\\\nParameter name: x\"));\r\n    }\r\n    if (BigInteger__get_IsPositive(x)) {\r\n        return BigInteger_posn_Z67CCE57D(BigNatModule_factorial(BigInteger__get_V(x)));\r\n    }\r\n    else {\r\n        return BigInteger_get_One();\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_UnaryPlus_Z665282C2(n1) {\r\n    return n1;\r\n}\r\n\r\nexport function BigInteger_FromInt64_Z524259C1(x) {\r\n    return BigInteger_$ctor_Z524259C1(x);\r\n}\r\n\r\nexport function BigInteger_FromInt32_Z524259A4(x) {\r\n    return BigInteger_$ctor_Z524259A4(x);\r\n}\r\n\r\n","import { BigInteger_op_Inequality_56F059C0, BigInteger_op_Equality_56F059C0, BigInteger_op_GreaterThanOrEqual_56F059C0, BigInteger_op_GreaterThan_56F059C0, BigInteger_op_LessThanOrEqual_56F059C0, BigInteger_op_LessThan_56F059C0, BigInteger_op_ExclusiveOr_56F059C0, BigInteger_op_BitwiseOr_56F059C0, BigInteger_op_BitwiseAnd_56F059C0, BigInteger_op_LeftShift_62E082A2, BigInteger_op_RightShift_62E082A2, BigInteger_op_UnaryPlus_Z665282C2, BigInteger_op_UnaryNegation_Z665282C2, BigInteger_op_Modulus_56F059C0, BigInteger_op_Division_56F059C0, BigInteger_op_Multiply_56F059C0, BigInteger_op_Subtraction_56F059C0, BigInteger_op_Addition_56F059C0, BigInteger__get_IsOne, BigInteger__get_IsZero, BigInteger__get_Sign, BigInteger__get_ToDecimal, BigInteger__get_ToDouble, BigInteger__get_ToSingle, BigInteger__get_ToUInt64, BigInteger__get_ToInt64, BigInteger__get_ToUInt32, BigInteger__get_ToInt32, BigInteger__get_ToUInt16, BigInteger__get_ToInt16, BigInteger__get_ToByte, BigInteger__get_ToSByte, BigInteger_$ctor_Z524259A4, BigInteger_$ctor_Z524259C1, BigInteger_get_Two, BigInteger_get_One, BigInteger_get_Zero, BigInteger_Abs_Z665282C2, BigInteger_Pow_62E082A2, BigInteger_GreatestCommonDivisor_56F059C0, BigInteger_DivRem_56F059C0, BigInteger_Parse_Z721C83C5, BigInteger } from \"./BigInt/z.js\";\r\nimport { fromInteger } from \"./Long.js\";\r\nimport { comparePrimitives, min, compare as compare_1, equals as equals_1, safeHash } from \"./Util.js\";\r\nimport { toString as toString_1 } from \"./Types.js\";\r\nimport { fold, empty, ofArrayWithTail, cons, toArray, head, skipWhile } from \"./List.js\";\r\nimport { fill, reverse } from \"./Array.js\";\r\n\r\nexport function isBigInt(x) {\r\n    return x instanceof BigInteger;\r\n}\r\n\r\nexport function tryParse(str, res) {\r\n    try {\r\n        res.contents = BigInteger_Parse_Z721C83C5(str);\r\n        return true;\r\n    }\r\n    catch (matchValue) {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function divRem(x, y, remainder) {\r\n    const patternInput = BigInteger_DivRem_56F059C0(x, y);\r\n    remainder.contents = patternInput[1];\r\n    return patternInput[0];\r\n}\r\n\r\nexport function parse(arg00) {\r\n    return BigInteger_Parse_Z721C83C5(arg00);\r\n}\r\n\r\nexport function greatestCommonDivisor(arg00, arg01) {\r\n    return BigInteger_GreatestCommonDivisor_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function pow(arg00, arg01) {\r\n    return BigInteger_Pow_62E082A2(arg00, arg01);\r\n}\r\n\r\nexport function abs(arg00) {\r\n    return BigInteger_Abs_Z665282C2(arg00);\r\n}\r\n\r\nexport const zero = BigInteger_get_Zero();\r\n\r\nexport const one = BigInteger_get_One();\r\n\r\nexport const two = BigInteger_get_Two();\r\n\r\nexport function fromString(s) {\r\n    return BigInteger_Parse_Z721C83C5(s);\r\n}\r\n\r\nexport function fromZero() {\r\n    return BigInteger_get_Zero();\r\n}\r\n\r\nexport function fromOne() {\r\n    return BigInteger_get_One();\r\n}\r\n\r\nexport function fromInt64(i) {\r\n    return BigInteger_$ctor_Z524259C1(i);\r\n}\r\n\r\nexport function fromInt32(i) {\r\n    if (i > 2147483647) {\r\n        return BigInteger_$ctor_Z524259C1(fromInteger(i, false, 6));\r\n    }\r\n    else {\r\n        return BigInteger_$ctor_Z524259A4(i);\r\n    }\r\n}\r\n\r\nexport function toSByte(x) {\r\n    return BigInteger__get_ToSByte(x);\r\n}\r\n\r\nexport function toByte(x) {\r\n    return BigInteger__get_ToByte(x);\r\n}\r\n\r\nexport function toInt16(x) {\r\n    return BigInteger__get_ToInt16(x);\r\n}\r\n\r\nexport function toUInt16(x) {\r\n    return BigInteger__get_ToUInt16(x);\r\n}\r\n\r\nexport function toInt32(x) {\r\n    return BigInteger__get_ToInt32(x);\r\n}\r\n\r\nexport function toUInt32(x) {\r\n    return BigInteger__get_ToUInt32(x);\r\n}\r\n\r\nexport function toInt64(x) {\r\n    return BigInteger__get_ToInt64(x);\r\n}\r\n\r\nexport function toUInt64(x) {\r\n    return BigInteger__get_ToUInt64(x);\r\n}\r\n\r\nexport function toSingle(x) {\r\n    return BigInteger__get_ToSingle(x);\r\n}\r\n\r\nexport function toDouble(x) {\r\n    return BigInteger__get_ToDouble(x);\r\n}\r\n\r\nexport function toDecimal(x) {\r\n    return BigInteger__get_ToDecimal(x);\r\n}\r\n\r\nexport function sign(x) {\r\n    return BigInteger__get_Sign(x);\r\n}\r\n\r\nexport function isZero(x) {\r\n    return BigInteger__get_IsZero(x);\r\n}\r\n\r\nexport function isOne(x) {\r\n    return BigInteger__get_IsOne(x);\r\n}\r\n\r\nexport function hash(x) {\r\n    return safeHash(x);\r\n}\r\n\r\nexport function compare(x, y) {\r\n    return x.CompareTo(y);\r\n}\r\n\r\nexport function equals(x, y) {\r\n    return equals_1(x, y);\r\n}\r\n\r\nexport function toString(x) {\r\n    return toString_1(x);\r\n}\r\n\r\nexport const get_Zero = BigInteger_get_Zero();\r\n\r\nexport const get_One = BigInteger_get_One();\r\n\r\nexport function op_Addition(arg00, arg01) {\r\n    return BigInteger_op_Addition_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Subtraction(arg00, arg01) {\r\n    return BigInteger_op_Subtraction_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Multiply(arg00, arg01) {\r\n    return BigInteger_op_Multiply_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Division(arg00, arg01) {\r\n    return BigInteger_op_Division_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Modulus(arg00, arg01) {\r\n    return BigInteger_op_Modulus_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_UnaryNegation(arg00) {\r\n    return BigInteger_op_UnaryNegation_Z665282C2(arg00);\r\n}\r\n\r\nexport function op_UnaryPlus(arg00) {\r\n    return BigInteger_op_UnaryPlus_Z665282C2(arg00);\r\n}\r\n\r\nexport function op_RightShift(arg00, arg01) {\r\n    return BigInteger_op_RightShift_62E082A2(arg00, arg01);\r\n}\r\n\r\nexport function op_LeftShift(arg00, arg01) {\r\n    return BigInteger_op_LeftShift_62E082A2(arg00, arg01);\r\n}\r\n\r\nexport function op_BitwiseAnd(arg00, arg01) {\r\n    return BigInteger_op_BitwiseAnd_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_BitwiseOr(arg00, arg01) {\r\n    return BigInteger_op_BitwiseOr_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_ExclusiveOr(arg00, arg01) {\r\n    return BigInteger_op_ExclusiveOr_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_LessThan(arg00, arg01) {\r\n    return BigInteger_op_LessThan_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_LessThanOrEqual(arg00, arg01) {\r\n    return BigInteger_op_LessThanOrEqual_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_GreaterThan(arg00, arg01) {\r\n    return BigInteger_op_GreaterThan_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_GreaterThanOrEqual(arg00, arg01) {\r\n    return BigInteger_op_GreaterThanOrEqual_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Equality(arg00, arg01) {\r\n    return BigInteger_op_Equality_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Inequality(arg00, arg01) {\r\n    return BigInteger_op_Inequality_56F059C0(arg00, arg01);\r\n}\r\n\r\nfunction flipTwosComplement(currByte, lowBitFound) {\r\n    const matchValue = [currByte, lowBitFound];\r\n    if (matchValue[1]) {\r\n        return [(currByte ^ 255) & 255, true];\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        return [0, false];\r\n    }\r\n    else {\r\n        return [(currByte ^ (254 << (new Int32Array([0, 1, 2, 3, 4, 5, 6, 7])).find((i) => ((currByte & (1 << i)) > 0)))) & 255, true];\r\n    }\r\n}\r\n\r\nexport function toByteArray(value) {\r\n    if (equals_1(value, zero)) {\r\n        return new Uint8Array([0]);\r\n    }\r\n    else {\r\n        const isPositive = compare_1(value, zero) > 0;\r\n        const value_1 = isPositive ? value : BigInteger_op_Multiply_56F059C0(BigInteger_$ctor_Z524259A4(-1), value);\r\n        const mask32 = fromInt64(fromInteger(4294967295, false, 6));\r\n        const loop = (accumBytes_mut, consumeValue_mut, lowBitFound_mut) => {\r\n            let value_6, value_8, value_9, value_10;\r\n            loop:\r\n            while (true) {\r\n                const accumBytes = accumBytes_mut, consumeValue = consumeValue_mut, lowBitFound = lowBitFound_mut;\r\n                if (compare_1(consumeValue, zero) <= 0) {\r\n                    const accumBytes_1 = isPositive ? skipWhile((b) => (b === 0), accumBytes) : skipWhile((b_1) => (b_1 === 255), accumBytes);\r\n                    const isHighBitOne = (head(accumBytes_1) & 128) !== 0;\r\n                    return reverse(toArray((isPositive ? isHighBitOne : false) ? cons(0, accumBytes_1) : (((!isPositive) ? (!isHighBitOne) : false) ? cons(255, accumBytes_1) : accumBytes_1)));\r\n                }\r\n                else {\r\n                    const currValue = toUInt32(BigInteger_op_BitwiseAnd_56F059C0(consumeValue, mask32));\r\n                    if (isPositive) {\r\n                        const b0 = currValue & 0xFF;\r\n                        let b1;\r\n                        const value_4 = currValue >>> 8;\r\n                        b1 = (value_4 & 0xFF);\r\n                        let b2;\r\n                        const value_5 = currValue >>> 16;\r\n                        b2 = (value_5 & 0xFF);\r\n                        accumBytes_mut = ofArrayWithTail([(value_6 = (currValue >>> 24), value_6 & 0xFF), b2, b1, b0], accumBytes);\r\n                        consumeValue_mut = BigInteger_op_RightShift_62E082A2(consumeValue, 32);\r\n                        lowBitFound_mut = false;\r\n                        continue loop;\r\n                    }\r\n                    else {\r\n                        const patternInput = flipTwosComplement(currValue & 0xFF, lowBitFound);\r\n                        const patternInput_1 = flipTwosComplement((value_8 = (currValue >>> 8), value_8 & 0xFF), patternInput[1]);\r\n                        const patternInput_2 = flipTwosComplement((value_9 = (currValue >>> 16), value_9 & 0xFF), patternInput_1[1]);\r\n                        const patternInput_3 = flipTwosComplement((value_10 = (currValue >>> 24), value_10 & 0xFF), patternInput_2[1]);\r\n                        accumBytes_mut = ofArrayWithTail([patternInput_3[0], patternInput_2[0], patternInput_1[0], patternInput[0]], accumBytes);\r\n                        consumeValue_mut = BigInteger_op_RightShift_62E082A2(consumeValue, 32);\r\n                        lowBitFound_mut = patternInput_3[1];\r\n                        continue loop;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(empty(), value_1, false);\r\n    }\r\n}\r\n\r\nexport function fromByteArray(bytes) {\r\n    if (bytes == null) {\r\n        throw (new Error(\"bytes\"));\r\n    }\r\n    if (bytes.length === 0) {\r\n        return zero;\r\n    }\r\n    else {\r\n        const isPositive = (bytes[bytes.length - 1] & 128) === 0;\r\n        const buffer = fill(new Uint8Array(4), 0, 4, 0);\r\n        const loop = (accumUInt32_mut, currIndex_mut, bytesRemaining_mut, lowBitFound_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const accumUInt32 = accumUInt32_mut, currIndex = currIndex_mut, bytesRemaining = bytesRemaining_mut, lowBitFound = lowBitFound_mut;\r\n                if (bytesRemaining === 0) {\r\n                    const value_2 = fold((acc, value) => BigInteger_op_Addition_56F059C0(BigInteger_op_LeftShift_62E082A2(acc, 32), fromInt64(fromInteger(value, false, 6))), zero, accumUInt32);\r\n                    if (isPositive) {\r\n                        return value_2;\r\n                    }\r\n                    else {\r\n                        return BigInteger_op_Multiply_56F059C0(BigInteger_$ctor_Z524259A4(-1), value_2);\r\n                    }\r\n                }\r\n                else {\r\n                    const bytesToProcess = min((x, y) => comparePrimitives(x, y), bytesRemaining, 4) | 0;\r\n                    for (let i_1 = 0; i_1 <= (bytesToProcess - 1); i_1++) {\r\n                        buffer[i_1] = bytes[currIndex + i_1];\r\n                    }\r\n                    if (isPositive) {\r\n                        fill(buffer, bytesToProcess, 4 - bytesToProcess, 0);\r\n                        accumUInt32_mut = cons((((((buffer[0] | ((buffer[1] << 8) >>> 0)) >>> 0) | ((buffer[2] << 16) >>> 0)) >>> 0) | ((buffer[3] << 24) >>> 0)) >>> 0, accumUInt32);\r\n                        currIndex_mut = (currIndex + bytesToProcess);\r\n                        bytesRemaining_mut = (bytesRemaining - bytesToProcess);\r\n                        lowBitFound_mut = false;\r\n                        continue loop;\r\n                    }\r\n                    else {\r\n                        fill(buffer, bytesToProcess, 4 - bytesToProcess, 255);\r\n                        const patternInput = flipTwosComplement(buffer[0], lowBitFound);\r\n                        const patternInput_1 = flipTwosComplement(buffer[1], patternInput[1]);\r\n                        const patternInput_2 = flipTwosComplement(buffer[2], patternInput_1[1]);\r\n                        const patternInput_3 = flipTwosComplement(buffer[3], patternInput_2[1]);\r\n                        accumUInt32_mut = cons((((((patternInput[0] | ((patternInput_1[0] << 8) >>> 0)) >>> 0) | ((patternInput_2[0] << 16) >>> 0)) >>> 0) | ((patternInput_3[0] << 24) >>> 0)) >>> 0, accumUInt32);\r\n                        currIndex_mut = (currIndex + bytesToProcess);\r\n                        bytesRemaining_mut = (bytesRemaining - bytesToProcess);\r\n                        lowBitFound_mut = patternInput_3[1];\r\n                        continue loop;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(empty(), 0, bytes.length, false);\r\n    }\r\n}\r\n\r\n","/**\n * DateTimeOffset functions.\n *\n * Note: DateOffset instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * However, this means that in order to construct an UTC date\n * from a DateOffset with offset of +5 hours, you first need\n * to subtract those 5 hours, than add the \"local\" offset.\n * As said, all kinds of messed up.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { create as createDate, dateOffsetToString, daysInMonth, offsetRegex, parseRaw } from \"./Date.js\";\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long.js\";\nimport { compareDates, padWithZeros } from \"./Util.js\";\nexport default function DateTimeOffset(value, offset) {\n    checkOffsetInRange(offset);\n    const d = new Date(value);\n    d.offset = offset != null ? offset : new Date().getTimezoneOffset() * -60000;\n    return d;\n}\nfunction checkOffsetInRange(offset) {\n    if (offset != null && offset !== 0) {\n        if (offset % 60000 !== 0) {\n            throw new Error(\"Offset must be specified in whole minutes.\");\n        }\n        if (Math.abs(offset / 3600000) > 14) {\n            throw new Error(\"Offset must be within plus or minus 14 hours.\");\n        }\n    }\n}\nexport function fromDate(date, offset) {\n    let offset2 = 0;\n    switch (date.kind) {\n        case 1 /* UTC */:\n            if (offset != null && offset !== 0) {\n                throw new Error(\"The UTC Offset for Utc DateTime instances must be 0.\");\n            }\n            offset2 = 0;\n            break;\n        case 2 /* Local */:\n            offset2 = date.getTimezoneOffset() * -60000;\n            if (offset != null && offset !== offset2) {\n                throw new Error(\"The UTC Offset of the local dateTime parameter does not match the offset argument.\");\n            }\n            break;\n        case 0 /* Unspecified */:\n        default:\n            if (offset == null) {\n                offset2 = date.getTimezoneOffset() * -60000;\n            }\n            else {\n                offset2 = offset;\n            }\n            break;\n    }\n    return DateTimeOffset(date.getTime(), offset2);\n}\nexport function fromTicks(ticks, offset) {\n    ticks = fromValue(ticks);\n    const epoc = ticksToUnixEpochMilliseconds(ticks) - offset;\n    return DateTimeOffset(epoc, offset);\n}\nexport function getUtcTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), 0);\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTimeOffset(-62135596800000, 0);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTimeOffset(253402300799999, 0);\n}\nexport function parse(str) {\n    const date = parseRaw(str);\n    const offsetMatch = offsetRegex.exec(str);\n    const offset = offsetMatch == null\n        ? date.getTimezoneOffset() * -60000\n        : (offsetMatch[0] === \"Z\"\n            ? 0\n            : parseInt(offsetMatch[1], 10) * 3600000\n                + parseInt(offsetMatch[2], 10) * 60000);\n    return DateTimeOffset(date.getTime(), offset);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexport function create(year, month, day, h, m, s, ms, offset) {\n    if (offset == null) {\n        offset = ms;\n        ms = 0;\n    }\n    checkOffsetInRange(offset);\n    let date;\n    if (offset === 0) {\n        date = new Date(Date.UTC(year, month - 1, day, h, m, s, ms));\n        if (year <= 99) {\n            date.setFullYear(year, month - 1, day);\n        }\n    }\n    else {\n        const str = padWithZeros(year, 4) + \"-\" +\n            padWithZeros(month, 2) + \"-\" +\n            padWithZeros(day, 2) + \"T\" +\n            padWithZeros(h, 2) + \":\" +\n            padWithZeros(m, 2) + \":\" +\n            padWithZeros(s, 2) + \".\" +\n            padWithZeros(ms, 3) +\n            dateOffsetToString(offset);\n        date = new Date(str);\n    }\n    const dateValue = date.getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date\");\n    }\n    return DateTimeOffset(dateValue, offset);\n}\nexport function now() {\n    const date = new Date();\n    const offset = date.getTimezoneOffset() * -60000;\n    return DateTimeOffset(date.getTime(), offset);\n}\nexport function utcNow() {\n    const date = now();\n    return DateTimeOffset(date.getTime(), 0);\n}\nexport function toUniversalTime(date) {\n    return DateTimeOffset(date.getTime(), 0);\n}\nexport function toLocalTime(date) {\n    return DateTimeOffset(date.getTime(), date.getTimezoneOffset() * -60000);\n}\nexport function timeOfDay(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    return d2.getUTCHours() * 3600000\n        + d2.getUTCMinutes() * 60000\n        + d2.getUTCSeconds() * 1000\n        + d2.getUTCMilliseconds();\n}\nexport function date(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    return createDate(d2.getUTCFullYear(), d2.getUTCMonth() + 1, d2.getUTCDate(), 0, 0, 0, 0);\n}\nexport function day(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCDate();\n}\nexport function hour(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCHours();\n}\nexport function millisecond(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMilliseconds();\n}\nexport function minute(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMinutes();\n}\nexport function month(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMonth() + 1;\n}\nexport function second(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCSeconds();\n}\nexport function year(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCFullYear();\n}\nexport function dayOfWeek(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCDay();\n}\nexport function dayOfYear(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    const _year = d2.getUTCFullYear();\n    const _month = d2.getUTCMonth() + 1;\n    let _day = d2.getUTCDate();\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    var _a;\n    return DateTimeOffset(d.getTime() + ts, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addDays(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 86400000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addHours(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 3600000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMinutes(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 60000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addSeconds(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 1000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMilliseconds(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addYears(d, v) {\n    var _a;\n    const newMonth = d.getUTCMonth() + 1;\n    const newYear = d.getUTCFullYear() + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, d.getUTCDate());\n    return create(newYear, newMonth, newDay, d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds(), ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMonths(d, v) {\n    var _a, _b;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    let newMonth = d2.getUTCMonth() + 1 + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = d2.getUTCFullYear() + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, d2.getUTCDate());\n    return create(newYear, newMonth, newDay, d2.getUTCHours(), d2.getUTCMinutes(), d2.getUTCSeconds(), d2.getUTCMilliseconds(), ((_b = d.offset) !== null && _b !== void 0 ? _b : 0));\n}\nexport function subtract(d, that) {\n    var _a;\n    return typeof that === \"number\"\n        ? DateTimeOffset(d.getTime() - that, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0))\n        : d.getTime() - that.getTime();\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport function equalsExact(d1, d2) {\n    return d1.getTime() === d2.getTime() && d1.offset === d2.offset;\n}\nexport function compare(d1, d2) {\n    return compareDates(d1, d2);\n}\nexport const compareTo = compare;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function toOffset(d, offset) {\n    return DateTimeOffset(d.getTime(), offset);\n}\n","// tslint:disable:max-line-length\nimport { fromNumber as Long_fromNumber, op_Division as Long_op_Division, op_Multiply as Long_op_Multiply, toNumber as Long_toNumber } from \"./Long.js\";\nimport { comparePrimitives, padLeftAndRightWithZeros, padWithZeros } from \"./Util.js\";\n// TimeSpan in runtime just becomes a number representing milliseconds\n/**\n * Calls:\n * - `Math.ceil` if the `value` is **negative**\n * - `Math.floor` if the `value` is **positive**\n * @param value Value to round\n */\nfunction signedRound(value) {\n    return value < 0 ? Math.ceil(value) : Math.floor(value);\n}\nexport function create(d = 0, h = 0, m = 0, s = 0, ms = 0) {\n    switch (arguments.length) {\n        case 1:\n            // ticks\n            return fromTicks(arguments[0]);\n        case 3:\n            // h,m,s\n            d = 0, h = arguments[0], m = arguments[1], s = arguments[2], ms = 0;\n            break;\n        default:\n            // d,h,m,s,ms\n            break;\n    }\n    return d * 86400000 + h * 3600000 + m * 60000 + s * 1000 + ms;\n}\nexport function fromTicks(ticks) {\n    return Long_toNumber(Long_op_Division(ticks, 10000));\n}\nexport function fromDays(d) {\n    return create(d, 0, 0, 0);\n}\nexport function fromHours(h) {\n    return create(h, 0, 0);\n}\nexport function fromMinutes(m) {\n    return create(0, m, 0);\n}\nexport function fromSeconds(s) {\n    return create(0, 0, s);\n}\nexport function days(ts) {\n    return signedRound(ts / 86400000);\n}\nexport function hours(ts) {\n    return signedRound(ts % 86400000 / 3600000);\n}\nexport function minutes(ts) {\n    return signedRound(ts % 3600000 / 60000);\n}\nexport function seconds(ts) {\n    return signedRound(ts % 60000 / 1000);\n}\nexport function milliseconds(ts) {\n    return signedRound(ts % 1000);\n}\nexport function ticks(ts) {\n    return Long_op_Multiply(Long_fromNumber(ts), 10000);\n}\nexport function totalDays(ts) {\n    return ts / 86400000;\n}\nexport function totalHours(ts) {\n    return ts / 3600000;\n}\nexport function totalMinutes(ts) {\n    return ts / 60000;\n}\nexport function totalSeconds(ts) {\n    return ts / 1000;\n}\nexport function negate(ts) {\n    return ts * -1;\n}\nexport function add(ts1, ts2) {\n    return ts1 + ts2;\n}\nexport function subtract(ts1, ts2) {\n    return ts1 - ts2;\n}\nexport function multiply(ts, factor) {\n    return ts * factor;\n}\nexport function divide(ts, b) {\n    return ts / b;\n}\nexport const op_Addition = add;\nexport const op_Subtraction = subtract;\nexport const op_Multiply = multiply;\nexport const op_Division = divide;\nexport const compare = comparePrimitives;\nexport const compareTo = comparePrimitives;\nexport function duration(x) {\n    return Math.abs(x);\n}\nexport function toString(ts, format = \"c\", _provider) {\n    if ([\"c\", \"g\", \"G\"].indexOf(format) === -1) {\n        throw new Error(\"Custom formats are not supported\");\n    }\n    const d = Math.abs(days(ts));\n    const h = Math.abs(hours(ts));\n    const m = Math.abs(minutes(ts));\n    const s = Math.abs(seconds(ts));\n    const ms = Math.abs(milliseconds(ts));\n    const sign = ts < 0 ? \"-\" : \"\";\n    return `${sign}${d === 0 && (format === \"c\" || format === \"g\") ? \"\" : format === \"c\" ? d + \".\" : d + \":\"}${format === \"g\" ? h : padWithZeros(h, 2)}:${padWithZeros(m, 2)}:${padWithZeros(s, 2)}${ms === 0 && (format === \"c\" || format === \"g\") ? \"\" : format === \"g\" ? \".\" + padWithZeros(ms, 3) : \".\" + padLeftAndRightWithZeros(ms, 3, 7)}`;\n}\nexport function parse(str) {\n    const firstDot = str.search(\"\\\\.\");\n    const firstColon = str.search(\"\\\\:\");\n    if (firstDot === -1 && firstColon === -1) { // There is only a day ex: 4\n        const d = parseInt(str, 0);\n        if (isNaN(d)) {\n            throw new Error(`String '${str}' was not recognized as a valid TimeSpan.`);\n        }\n        else {\n            return create(d, 0, 0, 0, 0);\n        }\n    }\n    if (firstColon > 0) { // process time part\n        // WIP: (-?)(((\\d+)\\.)?([0-9]|0[0-9]|1[0-9]|2[0-3]):(\\d+)(:\\d+(\\.\\d{1,7})?)?|\\d+(?:(?!\\.)))\n        const r = /^(-?)((\\d+)\\.)?(?:0*)([0-9]|0[0-9]|1[0-9]|2[0-3]):(?:0*)([0-5][0-9]|[0-9])(:(?:0*)([0-5][0-9]|[0-9]))?\\.?(\\d+)?$/.exec(str);\n        if (r != null && r[4] != null && r[5] != null) {\n            let d = 0;\n            let ms = 0;\n            let s = 0;\n            const sign = r[1] != null && r[1] === \"-\" ? -1 : 1;\n            const h = +r[4];\n            const m = +r[5];\n            if (r[3] != null) {\n                d = +r[3];\n            }\n            if (r[7] != null) {\n                s = +r[7];\n            }\n            if (r[8] != null) {\n                // Depending on the number of decimals passed, we need to adapt the numbers\n                switch (r[8].length) {\n                    case 1:\n                        ms = +r[8] * 100;\n                        break;\n                    case 2:\n                        ms = +r[8] * 10;\n                        break;\n                    case 3:\n                        ms = +r[8];\n                        break;\n                    case 4:\n                        ms = +r[8] / 10;\n                        break;\n                    case 5:\n                        ms = +r[8] / 100;\n                        break;\n                    case 6:\n                        ms = +r[8] / 1000;\n                        break;\n                    case 7:\n                        ms = +r[8] / 10000;\n                        break;\n                    default:\n                        throw new Error(`String '${str}' was not recognized as a valid TimeSpan.`);\n                }\n            }\n            return sign * create(d, h, m, s, ms);\n        }\n    }\n    throw new Error(`String '${str}' was not recognized as a valid TimeSpan.`);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n","import { record_type, bool_type, list_type, option_type, class_type } from \"./Reflection.js\";\r\nimport { some, value as value_1 } from \"./Option.js\";\r\nimport { singleton, ofArrayWithTail, head, tail, isEmpty as isEmpty_1, FSharpList, fold as fold_1, empty as empty_1, cons } from \"./List.js\";\r\nimport { fill } from \"./Array.js\";\r\nimport { structuralHash, compare, toIterator, equals, getEnumerator, isArrayLike } from \"./Util.js\";\r\nimport { Record } from \"./Types.js\";\r\nimport { tryPick as tryPick_1, pick as pick_1, iterate as iterate_1, compareWith, map as map_1, unfold } from \"./Seq.js\";\r\nimport { format, join } from \"./String.js\";\r\nimport { LanguagePrimitives_FastGenericComparer } from \"./FSharp.Core.js\";\r\n\r\nexport class MapTreeLeaf$2 {\r\n    constructor(k, v) {\r\n        this.k = k;\r\n        this.v = v;\r\n    }\r\n}\r\n\r\nexport function MapTreeLeaf$2$reflection(gen0, gen1) {\r\n    return class_type(\"Map.MapTreeLeaf`2\", [gen0, gen1], MapTreeLeaf$2);\r\n}\r\n\r\nexport function MapTreeLeaf$2_$ctor_5BDDA1(k, v) {\r\n    return new MapTreeLeaf$2(k, v);\r\n}\r\n\r\nexport function MapTreeLeaf$2__get_Key(_) {\r\n    return _.k;\r\n}\r\n\r\nexport function MapTreeLeaf$2__get_Value(_) {\r\n    return _.v;\r\n}\r\n\r\nexport class MapTreeNode$2 extends MapTreeLeaf$2 {\r\n    constructor(k, v, left, right, h) {\r\n        super(k, v);\r\n        this.left = left;\r\n        this.right = right;\r\n        this.h = (h | 0);\r\n    }\r\n}\r\n\r\nexport function MapTreeNode$2$reflection(gen0, gen1) {\r\n    return class_type(\"Map.MapTreeNode`2\", [gen0, gen1], MapTreeNode$2, MapTreeLeaf$2$reflection(gen0, gen1));\r\n}\r\n\r\nexport function MapTreeNode$2_$ctor_499A11FD(k, v, left, right, h) {\r\n    return new MapTreeNode$2(k, v, left, right, h);\r\n}\r\n\r\nexport function MapTreeNode$2__get_Left(_) {\r\n    return _.left;\r\n}\r\n\r\nexport function MapTreeNode$2__get_Right(_) {\r\n    return _.right;\r\n}\r\n\r\nexport function MapTreeNode$2__get_Height(_) {\r\n    return _.h;\r\n}\r\n\r\nexport function MapTreeModule_empty() {\r\n    return void 0;\r\n}\r\n\r\nexport function MapTreeModule_sizeAux(acc_mut, m_mut) {\r\n    MapTreeModule_sizeAux:\r\n    while (true) {\r\n        const acc = acc_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                acc_mut = MapTreeModule_sizeAux(acc + 1, MapTreeNode$2__get_Left(m2));\r\n                m_mut = MapTreeNode$2__get_Right(m2);\r\n                continue MapTreeModule_sizeAux;\r\n            }\r\n            else {\r\n                return (acc + 1) | 0;\r\n            }\r\n        }\r\n        else {\r\n            return acc | 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_size(x) {\r\n    return MapTreeModule_sizeAux(0, x);\r\n}\r\n\r\nexport function MapTreeModule_mk(l, k, v, r) {\r\n    let hl;\r\n    const m = l;\r\n    if (m != null) {\r\n        const m2 = m;\r\n        hl = ((m2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2) : 1);\r\n    }\r\n    else {\r\n        hl = 0;\r\n    }\r\n    let hr;\r\n    const m_1 = r;\r\n    if (m_1 != null) {\r\n        const m2_1 = m_1;\r\n        hr = ((m2_1 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_1) : 1);\r\n    }\r\n    else {\r\n        hr = 0;\r\n    }\r\n    const m_2 = ((hl < hr) ? hr : hl) | 0;\r\n    if (m_2 === 0) {\r\n        return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\r\n    }\r\n    else {\r\n        return MapTreeNode$2_$ctor_499A11FD(k, v, l, r, m_2 + 1);\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_rebalance(t1, k, v, t2) {\r\n    let m_2, m2_2, m_3, m2_3;\r\n    let t1h;\r\n    const m = t1;\r\n    if (m != null) {\r\n        const m2 = m;\r\n        t1h = ((m2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2) : 1);\r\n    }\r\n    else {\r\n        t1h = 0;\r\n    }\r\n    let t2h;\r\n    const m_1 = t2;\r\n    if (m_1 != null) {\r\n        const m2_1 = m_1;\r\n        t2h = ((m2_1 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_1) : 1);\r\n    }\r\n    else {\r\n        t2h = 0;\r\n    }\r\n    if (t2h > (t1h + 2)) {\r\n        const matchValue = value_1(t2);\r\n        if (matchValue instanceof MapTreeNode$2) {\r\n            if (((m_2 = MapTreeNode$2__get_Left(matchValue), (m_2 != null) ? ((m2_2 = m_2, (m2_2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_2) : 1)) : 0)) > (t1h + 1)) {\r\n                const matchValue_1 = value_1(MapTreeNode$2__get_Left(matchValue));\r\n                if (matchValue_1 instanceof MapTreeNode$2) {\r\n                    return MapTreeModule_mk(MapTreeModule_mk(t1, k, v, MapTreeNode$2__get_Left(matchValue_1)), MapTreeLeaf$2__get_Key(matchValue_1), MapTreeLeaf$2__get_Value(matchValue_1), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_1), MapTreeLeaf$2__get_Key(matchValue), MapTreeLeaf$2__get_Value(matchValue), MapTreeNode$2__get_Right(matchValue)));\r\n                }\r\n                else {\r\n                    throw (new Error(\"internal error: Map.rebalance\"));\r\n                }\r\n            }\r\n            else {\r\n                return MapTreeModule_mk(MapTreeModule_mk(t1, k, v, MapTreeNode$2__get_Left(matchValue)), MapTreeLeaf$2__get_Key(matchValue), MapTreeLeaf$2__get_Value(matchValue), MapTreeNode$2__get_Right(matchValue));\r\n            }\r\n        }\r\n        else {\r\n            throw (new Error(\"internal error: Map.rebalance\"));\r\n        }\r\n    }\r\n    else if (t1h > (t2h + 2)) {\r\n        const matchValue_2 = value_1(t1);\r\n        if (matchValue_2 instanceof MapTreeNode$2) {\r\n            if (((m_3 = MapTreeNode$2__get_Right(matchValue_2), (m_3 != null) ? ((m2_3 = m_3, (m2_3 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_3) : 1)) : 0)) > (t2h + 1)) {\r\n                const matchValue_3 = value_1(MapTreeNode$2__get_Right(matchValue_2));\r\n                if (matchValue_3 instanceof MapTreeNode$2) {\r\n                    return MapTreeModule_mk(MapTreeModule_mk(MapTreeNode$2__get_Left(matchValue_2), MapTreeLeaf$2__get_Key(matchValue_2), MapTreeLeaf$2__get_Value(matchValue_2), MapTreeNode$2__get_Left(matchValue_3)), MapTreeLeaf$2__get_Key(matchValue_3), MapTreeLeaf$2__get_Value(matchValue_3), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_3), k, v, t2));\r\n                }\r\n                else {\r\n                    throw (new Error(\"internal error: Map.rebalance\"));\r\n                }\r\n            }\r\n            else {\r\n                return MapTreeModule_mk(MapTreeNode$2__get_Left(matchValue_2), MapTreeLeaf$2__get_Key(matchValue_2), MapTreeLeaf$2__get_Value(matchValue_2), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_2), k, v, t2));\r\n            }\r\n        }\r\n        else {\r\n            throw (new Error(\"internal error: Map.rebalance\"));\r\n        }\r\n    }\r\n    else {\r\n        return MapTreeModule_mk(t1, k, v, t2);\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_add(comparer, k, v, m) {\r\n    if (m != null) {\r\n        const m2 = m;\r\n        const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\r\n        if (m2 instanceof MapTreeNode$2) {\r\n            if (c < 0) {\r\n                return MapTreeModule_rebalance(MapTreeModule_add(comparer, k, v, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\r\n            }\r\n            else if (c === 0) {\r\n                return MapTreeNode$2_$ctor_499A11FD(k, v, MapTreeNode$2__get_Left(m2), MapTreeNode$2__get_Right(m2), MapTreeNode$2__get_Height(m2));\r\n            }\r\n            else {\r\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_add(comparer, k, v, MapTreeNode$2__get_Right(m2)));\r\n            }\r\n        }\r\n        else if (c < 0) {\r\n            return MapTreeNode$2_$ctor_499A11FD(k, v, MapTreeModule_empty(), m, 2);\r\n        }\r\n        else if (c === 0) {\r\n            return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\r\n        }\r\n        else {\r\n            return MapTreeNode$2_$ctor_499A11FD(k, v, m, MapTreeModule_empty(), 2);\r\n        }\r\n    }\r\n    else {\r\n        return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_tryFind(comparer_mut, k_mut, m_mut) {\r\n    MapTreeModule_tryFind:\r\n    while (true) {\r\n        const comparer = comparer_mut, k = k_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\r\n            if (c === 0) {\r\n                return some(MapTreeLeaf$2__get_Value(m2));\r\n            }\r\n            else if (m2 instanceof MapTreeNode$2) {\r\n                comparer_mut = comparer;\r\n                k_mut = k;\r\n                m_mut = ((c < 0) ? MapTreeNode$2__get_Left(m2) : MapTreeNode$2__get_Right(m2));\r\n                continue MapTreeModule_tryFind;\r\n            }\r\n            else {\r\n                return void 0;\r\n            }\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_find(comparer, k, m) {\r\n    const matchValue = MapTreeModule_tryFind(comparer, k, m);\r\n    if (matchValue == null) {\r\n        throw (new Error());\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_partition1(comparer, f, k, v, acc1, acc2) {\r\n    if (f(k, v)) {\r\n        return [MapTreeModule_add(comparer, k, v, acc1), acc2];\r\n    }\r\n    else {\r\n        return [acc1, MapTreeModule_add(comparer, k, v, acc2)];\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_partitionAux(comparer_mut, f_mut, m_mut, acc_0_mut, acc_1_mut) {\r\n    MapTreeModule_partitionAux:\r\n    while (true) {\r\n        const comparer = comparer_mut, f = f_mut, m = m_mut, acc_0 = acc_0_mut, acc_1 = acc_1_mut;\r\n        const acc = [acc_0, acc_1];\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                const acc_2 = MapTreeModule_partitionAux(comparer, f, MapTreeNode$2__get_Right(m2), acc[0], acc[1]);\r\n                const acc_3 = MapTreeModule_partition1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc_2[0], acc_2[1]);\r\n                comparer_mut = comparer;\r\n                f_mut = f;\r\n                m_mut = MapTreeNode$2__get_Left(m2);\r\n                acc_0_mut = acc_3[0];\r\n                acc_1_mut = acc_3[1];\r\n                continue MapTreeModule_partitionAux;\r\n            }\r\n            else {\r\n                return MapTreeModule_partition1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc[0], acc[1]);\r\n            }\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_partition(comparer, f, m) {\r\n    return MapTreeModule_partitionAux(comparer, f, m, MapTreeModule_empty(), MapTreeModule_empty());\r\n}\r\n\r\nexport function MapTreeModule_filter1(comparer, f, k, v, acc) {\r\n    if (f(k, v)) {\r\n        return MapTreeModule_add(comparer, k, v, acc);\r\n    }\r\n    else {\r\n        return acc;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_filterAux(comparer_mut, f_mut, m_mut, acc_mut) {\r\n    MapTreeModule_filterAux:\r\n    while (true) {\r\n        const comparer = comparer_mut, f = f_mut, m = m_mut, acc = acc_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                const acc_1 = MapTreeModule_filterAux(comparer, f, MapTreeNode$2__get_Left(m2), acc);\r\n                const acc_2 = MapTreeModule_filter1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc_1);\r\n                comparer_mut = comparer;\r\n                f_mut = f;\r\n                m_mut = MapTreeNode$2__get_Right(m2);\r\n                acc_mut = acc_2;\r\n                continue MapTreeModule_filterAux;\r\n            }\r\n            else {\r\n                return MapTreeModule_filter1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc);\r\n            }\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_filter(comparer, f, m) {\r\n    return MapTreeModule_filterAux(comparer, f, m, MapTreeModule_empty());\r\n}\r\n\r\nexport function MapTreeModule_spliceOutSuccessor(m) {\r\n    if (m != null) {\r\n        const m2 = m;\r\n        if (m2 instanceof MapTreeNode$2) {\r\n            if (MapTreeNode$2__get_Left(m2) == null) {\r\n                return [MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2)];\r\n            }\r\n            else {\r\n                const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Left(m2));\r\n                return [patternInput[0], patternInput[1], MapTreeModule_mk(patternInput[2], MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2))];\r\n            }\r\n        }\r\n        else {\r\n            return [MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_empty()];\r\n        }\r\n    }\r\n    else {\r\n        throw (new Error(\"internal error: Map.spliceOutSuccessor\"));\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_remove(comparer, k, m) {\r\n    if (m != null) {\r\n        const m2 = m;\r\n        const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\r\n        if (m2 instanceof MapTreeNode$2) {\r\n            if (c < 0) {\r\n                return MapTreeModule_rebalance(MapTreeModule_remove(comparer, k, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\r\n            }\r\n            else if (c === 0) {\r\n                if (MapTreeNode$2__get_Left(m2) == null) {\r\n                    return MapTreeNode$2__get_Right(m2);\r\n                }\r\n                else if (MapTreeNode$2__get_Right(m2) == null) {\r\n                    return MapTreeNode$2__get_Left(m2);\r\n                }\r\n                else {\r\n                    const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Right(m2));\r\n                    return MapTreeModule_mk(MapTreeNode$2__get_Left(m2), patternInput[0], patternInput[1], patternInput[2]);\r\n                }\r\n            }\r\n            else {\r\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_remove(comparer, k, MapTreeNode$2__get_Right(m2)));\r\n            }\r\n        }\r\n        else if (c === 0) {\r\n            return MapTreeModule_empty();\r\n        }\r\n        else {\r\n            return m;\r\n        }\r\n    }\r\n    else {\r\n        return MapTreeModule_empty();\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_change(comparer, k, u, m) {\r\n    if (m != null) {\r\n        const m2 = m;\r\n        if (m2 instanceof MapTreeNode$2) {\r\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\r\n            if (c < 0) {\r\n                return MapTreeModule_rebalance(MapTreeModule_change(comparer, k, u, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\r\n            }\r\n            else if (c === 0) {\r\n                const matchValue_1 = u(some(MapTreeLeaf$2__get_Value(m2)));\r\n                if (matchValue_1 != null) {\r\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_1(matchValue_1), MapTreeNode$2__get_Left(m2), MapTreeNode$2__get_Right(m2), MapTreeNode$2__get_Height(m2));\r\n                }\r\n                else if (MapTreeNode$2__get_Left(m2) == null) {\r\n                    return MapTreeNode$2__get_Right(m2);\r\n                }\r\n                else if (MapTreeNode$2__get_Right(m2) == null) {\r\n                    return MapTreeNode$2__get_Left(m2);\r\n                }\r\n                else {\r\n                    const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Right(m2));\r\n                    return MapTreeModule_mk(MapTreeNode$2__get_Left(m2), patternInput[0], patternInput[1], patternInput[2]);\r\n                }\r\n            }\r\n            else {\r\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_change(comparer, k, u, MapTreeNode$2__get_Right(m2)));\r\n            }\r\n        }\r\n        else {\r\n            const c_1 = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\r\n            if (c_1 < 0) {\r\n                const matchValue_2 = u(void 0);\r\n                if (matchValue_2 != null) {\r\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_1(matchValue_2), MapTreeModule_empty(), m, 2);\r\n                }\r\n                else {\r\n                    return m;\r\n                }\r\n            }\r\n            else if (c_1 === 0) {\r\n                const matchValue_3 = u(some(MapTreeLeaf$2__get_Value(m2)));\r\n                if (matchValue_3 != null) {\r\n                    return MapTreeLeaf$2_$ctor_5BDDA1(k, value_1(matchValue_3));\r\n                }\r\n                else {\r\n                    return MapTreeModule_empty();\r\n                }\r\n            }\r\n            else {\r\n                const matchValue_4 = u(void 0);\r\n                if (matchValue_4 != null) {\r\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_1(matchValue_4), m, MapTreeModule_empty(), 2);\r\n                }\r\n                else {\r\n                    return m;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const matchValue = u(void 0);\r\n        if (matchValue != null) {\r\n            return MapTreeLeaf$2_$ctor_5BDDA1(k, value_1(matchValue));\r\n        }\r\n        else {\r\n            return m;\r\n        }\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_mem(comparer_mut, k_mut, m_mut) {\r\n    MapTreeModule_mem:\r\n    while (true) {\r\n        const comparer = comparer_mut, k = k_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                if (c < 0) {\r\n                    comparer_mut = comparer;\r\n                    k_mut = k;\r\n                    m_mut = MapTreeNode$2__get_Left(m2);\r\n                    continue MapTreeModule_mem;\r\n                }\r\n                else if (c === 0) {\r\n                    return true;\r\n                }\r\n                else {\r\n                    comparer_mut = comparer;\r\n                    k_mut = k;\r\n                    m_mut = MapTreeNode$2__get_Right(m2);\r\n                    continue MapTreeModule_mem;\r\n                }\r\n            }\r\n            else {\r\n                return c === 0;\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_iterOpt(f_mut, m_mut) {\r\n    MapTreeModule_iterOpt:\r\n    while (true) {\r\n        const f = f_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                MapTreeModule_iterOpt(f, MapTreeNode$2__get_Left(m2));\r\n                f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n                f_mut = f;\r\n                m_mut = MapTreeNode$2__get_Right(m2);\r\n                continue MapTreeModule_iterOpt;\r\n            }\r\n            else {\r\n                f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_iter(f, m) {\r\n    MapTreeModule_iterOpt(f, m);\r\n}\r\n\r\nexport function MapTreeModule_tryPickOpt(f_mut, m_mut) {\r\n    MapTreeModule_tryPickOpt:\r\n    while (true) {\r\n        const f = f_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                const matchValue = MapTreeModule_tryPickOpt(f, MapTreeNode$2__get_Left(m2));\r\n                if (matchValue == null) {\r\n                    const matchValue_1 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n                    if (matchValue_1 == null) {\r\n                        f_mut = f;\r\n                        m_mut = MapTreeNode$2__get_Right(m2);\r\n                        continue MapTreeModule_tryPickOpt;\r\n                    }\r\n                    else {\r\n                        return matchValue_1;\r\n                    }\r\n                }\r\n                else {\r\n                    return matchValue;\r\n                }\r\n            }\r\n            else {\r\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n            }\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_tryPick(f, m) {\r\n    return MapTreeModule_tryPickOpt(f, m);\r\n}\r\n\r\nexport function MapTreeModule_existsOpt(f_mut, m_mut) {\r\n    MapTreeModule_existsOpt:\r\n    while (true) {\r\n        const f = f_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                if (MapTreeModule_existsOpt(f, MapTreeNode$2__get_Left(m2)) ? true : f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2))) {\r\n                    return true;\r\n                }\r\n                else {\r\n                    f_mut = f;\r\n                    m_mut = MapTreeNode$2__get_Right(m2);\r\n                    continue MapTreeModule_existsOpt;\r\n                }\r\n            }\r\n            else {\r\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_exists(f, m) {\r\n    return MapTreeModule_existsOpt(f, m);\r\n}\r\n\r\nexport function MapTreeModule_forallOpt(f_mut, m_mut) {\r\n    MapTreeModule_forallOpt:\r\n    while (true) {\r\n        const f = f_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                if (MapTreeModule_forallOpt(f, MapTreeNode$2__get_Left(m2)) ? f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)) : false) {\r\n                    f_mut = f;\r\n                    m_mut = MapTreeNode$2__get_Right(m2);\r\n                    continue MapTreeModule_forallOpt;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n            }\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_forall(f, m) {\r\n    return MapTreeModule_forallOpt(f, m);\r\n}\r\n\r\nexport function MapTreeModule_map(f, m) {\r\n    if (m != null) {\r\n        const m2 = m;\r\n        if (m2 instanceof MapTreeNode$2) {\r\n            const l2 = MapTreeModule_map(f, MapTreeNode$2__get_Left(m2));\r\n            const v2 = f(MapTreeLeaf$2__get_Value(m2));\r\n            const r2 = MapTreeModule_map(f, MapTreeNode$2__get_Right(m2));\r\n            return MapTreeNode$2_$ctor_499A11FD(MapTreeLeaf$2__get_Key(m2), v2, l2, r2, MapTreeNode$2__get_Height(m2));\r\n        }\r\n        else {\r\n            return MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), f(MapTreeLeaf$2__get_Value(m2)));\r\n        }\r\n    }\r\n    else {\r\n        return MapTreeModule_empty();\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_mapiOpt(f, m) {\r\n    if (m != null) {\r\n        const m2 = m;\r\n        if (m2 instanceof MapTreeNode$2) {\r\n            const l2 = MapTreeModule_mapiOpt(f, MapTreeNode$2__get_Left(m2));\r\n            const v2 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n            const r2 = MapTreeModule_mapiOpt(f, MapTreeNode$2__get_Right(m2));\r\n            return MapTreeNode$2_$ctor_499A11FD(MapTreeLeaf$2__get_Key(m2), v2, l2, r2, MapTreeNode$2__get_Height(m2));\r\n        }\r\n        else {\r\n            return MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)));\r\n        }\r\n    }\r\n    else {\r\n        return MapTreeModule_empty();\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_mapi(f, m) {\r\n    return MapTreeModule_mapiOpt(f, m);\r\n}\r\n\r\nexport function MapTreeModule_foldBackOpt(f_mut, m_mut, x_mut) {\r\n    MapTreeModule_foldBackOpt:\r\n    while (true) {\r\n        const f = f_mut, m = m_mut, x = x_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                const x_1 = MapTreeModule_foldBackOpt(f, MapTreeNode$2__get_Right(m2), x);\r\n                const x_2 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_1);\r\n                f_mut = f;\r\n                m_mut = MapTreeNode$2__get_Left(m2);\r\n                x_mut = x_2;\r\n                continue MapTreeModule_foldBackOpt;\r\n            }\r\n            else {\r\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x);\r\n            }\r\n        }\r\n        else {\r\n            return x;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_foldBack(f, m, x) {\r\n    return MapTreeModule_foldBackOpt(f, m, x);\r\n}\r\n\r\nexport function MapTreeModule_foldOpt(f_mut, x_mut, m_mut) {\r\n    MapTreeModule_foldOpt:\r\n    while (true) {\r\n        const f = f_mut, x = x_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                f_mut = f;\r\n                x_mut = f(MapTreeModule_foldOpt(f, x, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n                m_mut = MapTreeNode$2__get_Right(m2);\r\n                continue MapTreeModule_foldOpt;\r\n            }\r\n            else {\r\n                return f(x, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n            }\r\n        }\r\n        else {\r\n            return x;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_fold(f, x, m) {\r\n    return MapTreeModule_foldOpt(f, x, m);\r\n}\r\n\r\nexport function MapTreeModule_foldSectionOpt(comparer, lo, hi, f, m, x) {\r\n    const foldFromTo = (f_1_mut, m_1_mut, x_1_mut) => {\r\n        foldFromTo:\r\n        while (true) {\r\n            const f_1 = f_1_mut, m_1 = m_1_mut, x_1 = x_1_mut;\r\n            if (m_1 != null) {\r\n                const m2 = m_1;\r\n                if (m2 instanceof MapTreeNode$2) {\r\n                    const cLoKey = comparer.Compare(lo, MapTreeLeaf$2__get_Key(m2)) | 0;\r\n                    const cKeyHi = comparer.Compare(MapTreeLeaf$2__get_Key(m2), hi) | 0;\r\n                    const x_2 = (cLoKey < 0) ? foldFromTo(f_1, MapTreeNode$2__get_Left(m2), x_1) : x_1;\r\n                    const x_3 = ((cLoKey <= 0) ? (cKeyHi <= 0) : false) ? f_1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_2) : x_2;\r\n                    if (cKeyHi < 0) {\r\n                        f_1_mut = f_1;\r\n                        m_1_mut = MapTreeNode$2__get_Right(m2);\r\n                        x_1_mut = x_3;\r\n                        continue foldFromTo;\r\n                    }\r\n                    else {\r\n                        return x_3;\r\n                    }\r\n                }\r\n                else if ((comparer.Compare(lo, MapTreeLeaf$2__get_Key(m2)) <= 0) ? (comparer.Compare(MapTreeLeaf$2__get_Key(m2), hi) <= 0) : false) {\r\n                    return f_1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_1);\r\n                }\r\n                else {\r\n                    return x_1;\r\n                }\r\n            }\r\n            else {\r\n                return x_1;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    if (comparer.Compare(lo, hi) === 1) {\r\n        return x;\r\n    }\r\n    else {\r\n        return foldFromTo(f, m, x);\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_foldSection(comparer, lo, hi, f, m, x) {\r\n    return MapTreeModule_foldSectionOpt(comparer, lo, hi, f, m, x);\r\n}\r\n\r\nexport function MapTreeModule_toList(m) {\r\n    const loop = (m_1_mut, acc_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const m_1 = m_1_mut, acc = acc_mut;\r\n            if (m_1 != null) {\r\n                const m2 = m_1;\r\n                if (m2 instanceof MapTreeNode$2) {\r\n                    m_1_mut = MapTreeNode$2__get_Left(m2);\r\n                    acc_mut = cons([MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)], loop(MapTreeNode$2__get_Right(m2), acc));\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return cons([MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)], acc);\r\n                }\r\n            }\r\n            else {\r\n                return acc;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(m, empty_1());\r\n}\r\n\r\nexport function MapTreeModule_copyToArray(m, arr, i) {\r\n    let j = i;\r\n    MapTreeModule_iter((x, y) => {\r\n        arr[j] = [x, y];\r\n        j = ((j + 1) | 0);\r\n    }, m);\r\n}\r\n\r\nexport function MapTreeModule_toArray(m) {\r\n    const n = MapTreeModule_size(m) | 0;\r\n    const res = fill(new Array(n), 0, n, [null, null]);\r\n    MapTreeModule_copyToArray(m, res, 0);\r\n    return res;\r\n}\r\n\r\nexport function MapTreeModule_ofList(comparer, l) {\r\n    return fold_1((acc, tupledArg) => MapTreeModule_add(comparer, tupledArg[0], tupledArg[1], acc), MapTreeModule_empty(), l);\r\n}\r\n\r\nexport function MapTreeModule_mkFromEnumerator(comparer_mut, acc_mut, e_mut) {\r\n    MapTreeModule_mkFromEnumerator:\r\n    while (true) {\r\n        const comparer = comparer_mut, acc = acc_mut, e = e_mut;\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const patternInput = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            comparer_mut = comparer;\r\n            acc_mut = MapTreeModule_add(comparer, patternInput[0], patternInput[1], acc);\r\n            e_mut = e;\r\n            continue MapTreeModule_mkFromEnumerator;\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_ofArray(comparer, arr) {\r\n    let res = MapTreeModule_empty();\r\n    for (let idx = 0; idx <= (arr.length - 1); idx++) {\r\n        const forLoopVar = arr[idx];\r\n        res = MapTreeModule_add(comparer, forLoopVar[0], forLoopVar[1], res);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function MapTreeModule_ofSeq(comparer, c) {\r\n    if (isArrayLike(c)) {\r\n        return MapTreeModule_ofArray(comparer, c);\r\n    }\r\n    else if (c instanceof FSharpList) {\r\n        return MapTreeModule_ofList(comparer, c);\r\n    }\r\n    else {\r\n        const ie = getEnumerator(c);\r\n        try {\r\n            return MapTreeModule_mkFromEnumerator(comparer, MapTreeModule_empty(), ie);\r\n        }\r\n        finally {\r\n            ie.Dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport class MapTreeModule_MapIterator$2 extends Record {\r\n    constructor(stack, started) {\r\n        super();\r\n        this.stack = stack;\r\n        this.started = started;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_MapIterator$2$reflection(gen0, gen1) {\r\n    return record_type(\"Map.MapTreeModule.MapIterator`2\", [gen0, gen1], MapTreeModule_MapIterator$2, () => [[\"stack\", list_type(option_type(MapTreeLeaf$2$reflection(gen0, gen1)))], [\"started\", bool_type]]);\r\n}\r\n\r\nexport function MapTreeModule_collapseLHS(stack_mut) {\r\n    MapTreeModule_collapseLHS:\r\n    while (true) {\r\n        const stack = stack_mut;\r\n        if (!isEmpty_1(stack)) {\r\n            const rest = tail(stack);\r\n            const m = head(stack);\r\n            if (m != null) {\r\n                const m2 = m;\r\n                if (m2 instanceof MapTreeNode$2) {\r\n                    stack_mut = ofArrayWithTail([MapTreeNode$2__get_Left(m2), MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)), MapTreeNode$2__get_Right(m2)], rest);\r\n                    continue MapTreeModule_collapseLHS;\r\n                }\r\n                else {\r\n                    return stack;\r\n                }\r\n            }\r\n            else {\r\n                stack_mut = rest;\r\n                continue MapTreeModule_collapseLHS;\r\n            }\r\n        }\r\n        else {\r\n            return empty_1();\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_mkIterator(m) {\r\n    return new MapTreeModule_MapIterator$2(MapTreeModule_collapseLHS(singleton(m)), false);\r\n}\r\n\r\nexport function MapTreeModule_notStarted() {\r\n    throw (new Error(\"enumeration not started\"));\r\n}\r\n\r\nexport function MapTreeModule_alreadyFinished() {\r\n    throw (new Error(\"enumeration already finished\"));\r\n}\r\n\r\nexport function MapTreeModule_current(i) {\r\n    if (i.started) {\r\n        const matchValue = i.stack;\r\n        if (!isEmpty_1(matchValue)) {\r\n            if (head(matchValue) != null) {\r\n                const m = head(matchValue);\r\n                if (m instanceof MapTreeNode$2) {\r\n                    throw (new Error(\"Please report error: Map iterator, unexpected stack for current\"));\r\n                }\r\n                else {\r\n                    return [MapTreeLeaf$2__get_Key(m), MapTreeLeaf$2__get_Value(m)];\r\n                }\r\n            }\r\n            else {\r\n                throw (new Error(\"Please report error: Map iterator, unexpected stack for current\"));\r\n            }\r\n        }\r\n        else {\r\n            return MapTreeModule_alreadyFinished();\r\n        }\r\n    }\r\n    else {\r\n        return MapTreeModule_notStarted();\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_moveNext(i) {\r\n    if (i.started) {\r\n        const matchValue = i.stack;\r\n        if (!isEmpty_1(matchValue)) {\r\n            if (head(matchValue) != null) {\r\n                const m = head(matchValue);\r\n                if (m instanceof MapTreeNode$2) {\r\n                    throw (new Error(\"Please report error: Map iterator, unexpected stack for moveNext\"));\r\n                }\r\n                else {\r\n                    i.stack = MapTreeModule_collapseLHS(tail(matchValue));\r\n                    return !isEmpty_1(i.stack);\r\n                }\r\n            }\r\n            else {\r\n                throw (new Error(\"Please report error: Map iterator, unexpected stack for moveNext\"));\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        i.started = true;\r\n        return !isEmpty_1(i.stack);\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_mkIEnumerator(m) {\r\n    let i = MapTreeModule_mkIterator(m);\r\n    return {\r\n        [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\r\n            return MapTreeModule_current(i);\r\n        },\r\n        [\"System.Collections.IEnumerator.get_Current\"]() {\r\n            return MapTreeModule_current(i);\r\n        },\r\n        [\"System.Collections.IEnumerator.MoveNext\"]() {\r\n            return MapTreeModule_moveNext(i);\r\n        },\r\n        [\"System.Collections.IEnumerator.Reset\"]() {\r\n            i = MapTreeModule_mkIterator(m);\r\n        },\r\n        Dispose() {\r\n        },\r\n    };\r\n}\r\n\r\nexport function MapTreeModule_toSeq(s) {\r\n    return unfold((en_1) => {\r\n        if (en_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            return [en_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), en_1];\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, MapTreeModule_mkIEnumerator(s));\r\n}\r\n\r\nexport class FSharpMap {\r\n    constructor(comparer, tree) {\r\n        this.comparer = comparer;\r\n        this.tree = tree;\r\n    }\r\n    GetHashCode() {\r\n        const this$ = this;\r\n        return FSharpMap__ComputeHashCode(this$) | 0;\r\n    }\r\n    Equals(that) {\r\n        const this$ = this;\r\n        if (that instanceof FSharpMap) {\r\n            const e1 = getEnumerator(this$);\r\n            try {\r\n                const e2 = getEnumerator(that);\r\n                try {\r\n                    const loop = () => {\r\n                        const m1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\r\n                        if (m1 === e2[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                            if (!m1) {\r\n                                return true;\r\n                            }\r\n                            else {\r\n                                const e1c = e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                                const e2c = e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                                if (equals(e1c[0], e2c[0]) ? equals(e1c[1], e2c[1]) : false) {\r\n                                    return loop();\r\n                                }\r\n                                else {\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            return false;\r\n                        }\r\n                    };\r\n                    return loop();\r\n                }\r\n                finally {\r\n                    e2.Dispose();\r\n                }\r\n            }\r\n            finally {\r\n                e1.Dispose();\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    toString() {\r\n        const this$ = this;\r\n        return (\"map [\" + join(\"; \", map_1((kv) => format(\"({0}, {1})\", kv[0], kv[1]), this$))) + \"]\";\r\n    }\r\n    get [Symbol.toStringTag]() {\r\n        return \"FSharpMap\";\r\n    }\r\n    toJSON(_key) {\r\n        const this$ = this;\r\n        return Array.from(this$);\r\n    }\r\n    GetEnumerator() {\r\n        const __ = this;\r\n        return MapTreeModule_mkIEnumerator(__.tree);\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const __ = this;\r\n        return MapTreeModule_mkIEnumerator(__.tree);\r\n    }\r\n    CompareTo(obj) {\r\n        const m = this;\r\n        if (obj instanceof FSharpMap) {\r\n            return compareWith((kvp1, kvp2) => {\r\n                const c = m.comparer.Compare(kvp1[0], kvp2[0]) | 0;\r\n                return ((c !== 0) ? c : compare(kvp1[1], kvp2[1])) | 0;\r\n            }, m, obj) | 0;\r\n        }\r\n        else {\r\n            throw (new Error(\"not comparable\\\\nParameter name: obj\"));\r\n        }\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](x) {\r\n        throw (new Error(\"Map cannot be mutated\"));\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\r\n        throw (new Error(\"Map cannot be mutated\"));\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](x) {\r\n        throw (new Error(\"Map cannot be mutated\"));\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](x) {\r\n        const m = this;\r\n        return FSharpMap__ContainsKey(m, x[0]) ? equals(FSharpMap__get_Item(m, x[0]), x[1]) : false;\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](arr, i) {\r\n        const m = this;\r\n        MapTreeModule_copyToArray(m.tree, arr, i);\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\r\n        return true;\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\r\n        const m = this;\r\n        return FSharpMap__get_Count(m) | 0;\r\n    }\r\n    [\"System.Collections.Generic.IReadOnlyCollection`1.get_Count\"]() {\r\n        const m = this;\r\n        return FSharpMap__get_Count(m) | 0;\r\n    }\r\n    get size() {\r\n        const m = this;\r\n        return FSharpMap__get_Count(m) | 0;\r\n    }\r\n    clear() {\r\n        throw (new Error(\"Map cannot be mutated\"));\r\n    }\r\n    delete(_arg1) {\r\n        throw (new Error(\"Map cannot be mutated\"));\r\n        return false;\r\n    }\r\n    entries() {\r\n        const m = this;\r\n        return map_1((p) => [p[0], p[1]], m);\r\n    }\r\n    get(k) {\r\n        const m = this;\r\n        return FSharpMap__get_Item(m, k);\r\n    }\r\n    has(k) {\r\n        const m = this;\r\n        return FSharpMap__ContainsKey(m, k);\r\n    }\r\n    keys() {\r\n        const m = this;\r\n        return map_1((p) => p[0], m);\r\n    }\r\n    set(k, v) {\r\n        const m = this;\r\n        throw (new Error(\"Map cannot be mutated\"));\r\n        return m;\r\n    }\r\n    values() {\r\n        const m = this;\r\n        return map_1((p) => p[1], m);\r\n    }\r\n    forEach(f, thisArg) {\r\n        const m = this;\r\n        iterate_1((p) => {\r\n            f(p[1], p[0], m);\r\n        }, m);\r\n    }\r\n}\r\n\r\nexport function FSharpMap$reflection(gen0, gen1) {\r\n    return class_type(\"Map.FSharpMap\", [gen0, gen1], FSharpMap);\r\n}\r\n\r\nexport function FSharpMap_$ctor(comparer, tree) {\r\n    return new FSharpMap(comparer, tree);\r\n}\r\n\r\n(() => {\r\n    FSharpMap.empty = FSharpMap_$ctor(LanguagePrimitives_FastGenericComparer(), MapTreeModule_empty());\r\n})();\r\n\r\nexport function FSharpMap_get_Empty() {\r\n    return FSharpMap.empty;\r\n}\r\n\r\nexport function FSharpMap_Create(ie) {\r\n    const comparer = LanguagePrimitives_FastGenericComparer();\r\n    return FSharpMap_$ctor(comparer, MapTreeModule_ofSeq(comparer, ie));\r\n}\r\n\r\nexport function FSharpMap__get_Comparer(m) {\r\n    return m.comparer;\r\n}\r\n\r\nexport function FSharpMap__get_Tree(m) {\r\n    return m.tree;\r\n}\r\n\r\nexport function FSharpMap__Add(m, key, value) {\r\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_add(m.comparer, key, value, m.tree));\r\n}\r\n\r\nexport function FSharpMap__Change(m, key, f) {\r\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_change(m.comparer, key, f, m.tree));\r\n}\r\n\r\nexport function FSharpMap__get_IsEmpty(m) {\r\n    return m.tree == null;\r\n}\r\n\r\nexport function FSharpMap__get_Item(m, key) {\r\n    return MapTreeModule_find(m.comparer, key, m.tree);\r\n}\r\n\r\nexport function FSharpMap__TryPick(m, f) {\r\n    return MapTreeModule_tryPick(f, m.tree);\r\n}\r\n\r\nexport function FSharpMap__Exists(m, predicate) {\r\n    return MapTreeModule_exists(predicate, m.tree);\r\n}\r\n\r\nexport function FSharpMap__Filter(m, predicate) {\r\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_filter(m.comparer, predicate, m.tree));\r\n}\r\n\r\nexport function FSharpMap__ForAll(m, predicate) {\r\n    return MapTreeModule_forall(predicate, m.tree);\r\n}\r\n\r\nexport function FSharpMap__Fold(m, f, acc) {\r\n    return MapTreeModule_foldBack(f, m.tree, acc);\r\n}\r\n\r\nexport function FSharpMap__FoldSection(m, lo, hi, f, acc) {\r\n    return MapTreeModule_foldSection(m.comparer, lo, hi, f, m.tree, acc);\r\n}\r\n\r\nexport function FSharpMap__Iterate(m, f) {\r\n    MapTreeModule_iter(f, m.tree);\r\n}\r\n\r\nexport function FSharpMap__MapRange(m, f) {\r\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_map(f, m.tree));\r\n}\r\n\r\nexport function FSharpMap__Map(m, f) {\r\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_mapi(f, m.tree));\r\n}\r\n\r\nexport function FSharpMap__Partition(m, predicate) {\r\n    const patternInput = MapTreeModule_partition(m.comparer, predicate, m.tree);\r\n    return [FSharpMap_$ctor(m.comparer, patternInput[0]), FSharpMap_$ctor(m.comparer, patternInput[1])];\r\n}\r\n\r\nexport function FSharpMap__get_Count(m) {\r\n    return MapTreeModule_size(m.tree);\r\n}\r\n\r\nexport function FSharpMap__ContainsKey(m, key) {\r\n    return MapTreeModule_mem(m.comparer, key, m.tree);\r\n}\r\n\r\nexport function FSharpMap__Remove(m, key) {\r\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_remove(m.comparer, key, m.tree));\r\n}\r\n\r\nexport function FSharpMap__TryGetValue(__, key, value) {\r\n    const matchValue = MapTreeModule_tryFind(__.comparer, key, __.tree);\r\n    if (matchValue == null) {\r\n        return false;\r\n    }\r\n    else {\r\n        const v = value_1(matchValue);\r\n        value.contents = v;\r\n        return true;\r\n    }\r\n}\r\n\r\nexport function FSharpMap__TryFind(m, key) {\r\n    return MapTreeModule_tryFind(m.comparer, key, m.tree);\r\n}\r\n\r\nexport function FSharpMap__ToList(m) {\r\n    return MapTreeModule_toList(m.tree);\r\n}\r\n\r\nexport function FSharpMap__ToArray(m) {\r\n    return MapTreeModule_toArray(m.tree);\r\n}\r\n\r\nexport function FSharpMap__ComputeHashCode(this$) {\r\n    const combineHash = (x, y) => (((x << 1) + y) + 631);\r\n    let res = 0;\r\n    const enumerator = getEnumerator(this$);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const activePatternResult5440 = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            res = (combineHash(res, structuralHash(activePatternResult5440[0])) | 0);\r\n            res = (combineHash(res, structuralHash(activePatternResult5440[1])) | 0);\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n    return res | 0;\r\n}\r\n\r\nexport function isEmpty(table) {\r\n    return FSharpMap__get_IsEmpty(table);\r\n}\r\n\r\nexport function add(key, value, table) {\r\n    return FSharpMap__Add(table, key, value);\r\n}\r\n\r\nexport function change(key, f, table) {\r\n    return FSharpMap__Change(table, key, f);\r\n}\r\n\r\nexport function find(key, table) {\r\n    return FSharpMap__get_Item(table, key);\r\n}\r\n\r\nexport function tryFind(key, table) {\r\n    return FSharpMap__TryFind(table, key);\r\n}\r\n\r\nexport function remove(key, table) {\r\n    return FSharpMap__Remove(table, key);\r\n}\r\n\r\nexport function containsKey(key, table) {\r\n    return FSharpMap__ContainsKey(table, key);\r\n}\r\n\r\nexport function iterate(action, table) {\r\n    FSharpMap__Iterate(table, action);\r\n}\r\n\r\nexport function tryPick(chooser, table) {\r\n    return FSharpMap__TryPick(table, chooser);\r\n}\r\n\r\nexport function pick(chooser, table) {\r\n    const matchValue = tryPick(chooser, table);\r\n    if (matchValue != null) {\r\n        return value_1(matchValue);\r\n    }\r\n    else {\r\n        throw (new Error());\r\n    }\r\n}\r\n\r\nexport function exists(predicate, table) {\r\n    return FSharpMap__Exists(table, predicate);\r\n}\r\n\r\nexport function filter(predicate, table) {\r\n    return FSharpMap__Filter(table, predicate);\r\n}\r\n\r\nexport function partition(predicate, table) {\r\n    return FSharpMap__Partition(table, predicate);\r\n}\r\n\r\nexport function forAll(predicate, table) {\r\n    return FSharpMap__ForAll(table, predicate);\r\n}\r\n\r\nexport function map(mapping, table) {\r\n    return FSharpMap__Map(table, mapping);\r\n}\r\n\r\nexport function fold(folder, state, table) {\r\n    return MapTreeModule_fold(folder, state, FSharpMap__get_Tree(table));\r\n}\r\n\r\nexport function foldBack(folder, table, state) {\r\n    return MapTreeModule_foldBack(folder, FSharpMap__get_Tree(table), state);\r\n}\r\n\r\nexport function toSeq(table) {\r\n    return map_1((kvp) => [kvp[0], kvp[1]], table);\r\n}\r\n\r\nexport function findKey(predicate, table) {\r\n    return pick_1((kvp) => {\r\n        const k = kvp[0];\r\n        if (predicate(k, kvp[1])) {\r\n            return some(k);\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, table);\r\n}\r\n\r\nexport function tryFindKey(predicate, table) {\r\n    return tryPick_1((kvp) => {\r\n        const k = kvp[0];\r\n        if (predicate(k, kvp[1])) {\r\n            return some(k);\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, table);\r\n}\r\n\r\nexport function ofList(elements) {\r\n    return FSharpMap_Create(elements);\r\n}\r\n\r\nexport function ofSeq(elements) {\r\n    return FSharpMap_Create(elements);\r\n}\r\n\r\nexport function ofArray(elements) {\r\n    const comparer = LanguagePrimitives_FastGenericComparer();\r\n    return FSharpMap_$ctor(comparer, MapTreeModule_ofArray(comparer, elements));\r\n}\r\n\r\nexport function toList(table) {\r\n    return FSharpMap__ToList(table);\r\n}\r\n\r\nexport function toArray(table) {\r\n    return FSharpMap__ToArray(table);\r\n}\r\n\r\nexport function empty() {\r\n    return FSharpMap_get_Empty();\r\n}\r\n\r\nexport function count(table) {\r\n    return FSharpMap__get_Count(table);\r\n}\r\n\r\n","import { record_type, bool_type, list_type, option_type, class_type } from \"./Reflection.js\";\r\nimport { some, value as value_1 } from \"./Option.js\";\r\nimport { toString, Record } from \"./Types.js\";\r\nimport { FSharpList, fold as fold_2, cons, singleton as singleton_1, empty as empty_1, ofArrayWithTail, tail, head, isEmpty as isEmpty_1 } from \"./List.js\";\r\nimport { fold as fold_1, fill } from \"./Array.js\";\r\nimport { structuralHash, toIterator, getEnumerator, isArrayLike } from \"./Util.js\";\r\nimport { join } from \"./String.js\";\r\nimport { fold as fold_3, reduce, iterate as iterate_1, map as map_1 } from \"./Seq.js\";\r\n\r\nexport class SetTreeLeaf$1 {\r\n    constructor(k) {\r\n        this.k = k;\r\n    }\r\n}\r\n\r\nexport function SetTreeLeaf$1$reflection(gen0) {\r\n    return class_type(\"Set.SetTreeLeaf`1\", [gen0], SetTreeLeaf$1);\r\n}\r\n\r\nexport function SetTreeLeaf$1_$ctor_2B595(k) {\r\n    return new SetTreeLeaf$1(k);\r\n}\r\n\r\nexport function SetTreeLeaf$1__get_Key(_) {\r\n    return _.k;\r\n}\r\n\r\nexport class SetTreeNode$1 extends SetTreeLeaf$1 {\r\n    constructor(v, left, right, h) {\r\n        super(v);\r\n        this.left = left;\r\n        this.right = right;\r\n        this.h = (h | 0);\r\n    }\r\n}\r\n\r\nexport function SetTreeNode$1$reflection(gen0) {\r\n    return class_type(\"Set.SetTreeNode`1\", [gen0], SetTreeNode$1, SetTreeLeaf$1$reflection(gen0));\r\n}\r\n\r\nexport function SetTreeNode$1_$ctor_Z6E7BE5F7(v, left, right, h) {\r\n    return new SetTreeNode$1(v, left, right, h);\r\n}\r\n\r\nexport function SetTreeNode$1__get_Left(_) {\r\n    return _.left;\r\n}\r\n\r\nexport function SetTreeNode$1__get_Right(_) {\r\n    return _.right;\r\n}\r\n\r\nexport function SetTreeNode$1__get_Height(_) {\r\n    return _.h;\r\n}\r\n\r\nexport function SetTreeModule_empty() {\r\n    return void 0;\r\n}\r\n\r\nexport function SetTreeModule_countAux(t_mut, acc_mut) {\r\n    SetTreeModule_countAux:\r\n    while (true) {\r\n        const t = t_mut, acc = acc_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                t_mut = SetTreeNode$1__get_Left(t2);\r\n                acc_mut = SetTreeModule_countAux(SetTreeNode$1__get_Right(t2), acc + 1);\r\n                continue SetTreeModule_countAux;\r\n            }\r\n            else {\r\n                return (acc + 1) | 0;\r\n            }\r\n        }\r\n        else {\r\n            return acc | 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_count(s) {\r\n    return SetTreeModule_countAux(s, 0);\r\n}\r\n\r\nexport function SetTreeModule_mk(l, k, r) {\r\n    let hl;\r\n    const t = l;\r\n    if (t != null) {\r\n        const t2 = t;\r\n        hl = ((t2 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2) : 1);\r\n    }\r\n    else {\r\n        hl = 0;\r\n    }\r\n    let hr;\r\n    const t_1 = r;\r\n    if (t_1 != null) {\r\n        const t2_1 = t_1;\r\n        hr = ((t2_1 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_1) : 1);\r\n    }\r\n    else {\r\n        hr = 0;\r\n    }\r\n    const m = ((hl < hr) ? hr : hl) | 0;\r\n    if (m === 0) {\r\n        return SetTreeLeaf$1_$ctor_2B595(k);\r\n    }\r\n    else {\r\n        return SetTreeNode$1_$ctor_Z6E7BE5F7(k, l, r, m + 1);\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_rebalance(t1, v, t2) {\r\n    let t_2, t2_3, t_3, t2_4;\r\n    let t1h;\r\n    const t = t1;\r\n    if (t != null) {\r\n        const t2_1 = t;\r\n        t1h = ((t2_1 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_1) : 1);\r\n    }\r\n    else {\r\n        t1h = 0;\r\n    }\r\n    let t2h;\r\n    const t_1 = t2;\r\n    if (t_1 != null) {\r\n        const t2_2 = t_1;\r\n        t2h = ((t2_2 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_2) : 1);\r\n    }\r\n    else {\r\n        t2h = 0;\r\n    }\r\n    if (t2h > (t1h + 2)) {\r\n        const matchValue = value_1(t2);\r\n        if (matchValue instanceof SetTreeNode$1) {\r\n            if (((t_2 = SetTreeNode$1__get_Left(matchValue), (t_2 != null) ? ((t2_3 = t_2, (t2_3 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_3) : 1)) : 0)) > (t1h + 1)) {\r\n                const matchValue_1 = value_1(SetTreeNode$1__get_Left(matchValue));\r\n                if (matchValue_1 instanceof SetTreeNode$1) {\r\n                    return SetTreeModule_mk(SetTreeModule_mk(t1, v, SetTreeNode$1__get_Left(matchValue_1)), SetTreeLeaf$1__get_Key(matchValue_1), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_1), SetTreeLeaf$1__get_Key(matchValue), SetTreeNode$1__get_Right(matchValue)));\r\n                }\r\n                else {\r\n                    throw (new Error(\"internal error: Set.rebalance\"));\r\n                }\r\n            }\r\n            else {\r\n                return SetTreeModule_mk(SetTreeModule_mk(t1, v, SetTreeNode$1__get_Left(matchValue)), SetTreeLeaf$1__get_Key(matchValue), SetTreeNode$1__get_Right(matchValue));\r\n            }\r\n        }\r\n        else {\r\n            throw (new Error(\"internal error: Set.rebalance\"));\r\n        }\r\n    }\r\n    else if (t1h > (t2h + 2)) {\r\n        const matchValue_2 = value_1(t1);\r\n        if (matchValue_2 instanceof SetTreeNode$1) {\r\n            if (((t_3 = SetTreeNode$1__get_Right(matchValue_2), (t_3 != null) ? ((t2_4 = t_3, (t2_4 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_4) : 1)) : 0)) > (t2h + 1)) {\r\n                const matchValue_3 = value_1(SetTreeNode$1__get_Right(matchValue_2));\r\n                if (matchValue_3 instanceof SetTreeNode$1) {\r\n                    return SetTreeModule_mk(SetTreeModule_mk(SetTreeNode$1__get_Left(matchValue_2), SetTreeLeaf$1__get_Key(matchValue_2), SetTreeNode$1__get_Left(matchValue_3)), SetTreeLeaf$1__get_Key(matchValue_3), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_3), v, t2));\r\n                }\r\n                else {\r\n                    throw (new Error(\"internal error: Set.rebalance\"));\r\n                }\r\n            }\r\n            else {\r\n                return SetTreeModule_mk(SetTreeNode$1__get_Left(matchValue_2), SetTreeLeaf$1__get_Key(matchValue_2), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_2), v, t2));\r\n            }\r\n        }\r\n        else {\r\n            throw (new Error(\"internal error: Set.rebalance\"));\r\n        }\r\n    }\r\n    else {\r\n        return SetTreeModule_mk(t1, v, t2);\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_add(comparer, k, t) {\r\n    if (t != null) {\r\n        const t2 = t;\r\n        const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\r\n        if (t2 instanceof SetTreeNode$1) {\r\n            if (c < 0) {\r\n                return SetTreeModule_rebalance(SetTreeModule_add(comparer, k, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2));\r\n            }\r\n            else if (c === 0) {\r\n                return t;\r\n            }\r\n            else {\r\n                return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), SetTreeModule_add(comparer, k, SetTreeNode$1__get_Right(t2)));\r\n            }\r\n        }\r\n        else {\r\n            const c_1 = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\r\n            if (c_1 < 0) {\r\n                return SetTreeNode$1_$ctor_Z6E7BE5F7(k, SetTreeModule_empty(), t, 2);\r\n            }\r\n            else if (c_1 === 0) {\r\n                return t;\r\n            }\r\n            else {\r\n                return SetTreeNode$1_$ctor_Z6E7BE5F7(k, t, SetTreeModule_empty(), 2);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        return SetTreeLeaf$1_$ctor_2B595(k);\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_balance(comparer, t1, k, t2) {\r\n    if (t1 != null) {\r\n        const t1$0027 = t1;\r\n        if (t2 != null) {\r\n            const t2$0027 = t2;\r\n            if (t1$0027 instanceof SetTreeNode$1) {\r\n                if (t2$0027 instanceof SetTreeNode$1) {\r\n                    if ((SetTreeNode$1__get_Height(t1$0027) + 2) < SetTreeNode$1__get_Height(t2$0027)) {\r\n                        return SetTreeModule_rebalance(SetTreeModule_balance(comparer, t1, k, SetTreeNode$1__get_Left(t2$0027)), SetTreeLeaf$1__get_Key(t2$0027), SetTreeNode$1__get_Right(t2$0027));\r\n                    }\r\n                    else if ((SetTreeNode$1__get_Height(t2$0027) + 2) < SetTreeNode$1__get_Height(t1$0027)) {\r\n                        return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t1$0027), SetTreeLeaf$1__get_Key(t1$0027), SetTreeModule_balance(comparer, SetTreeNode$1__get_Right(t1$0027), k, t2));\r\n                    }\r\n                    else {\r\n                        return SetTreeModule_mk(t1, k, t2);\r\n                    }\r\n                }\r\n                else {\r\n                    return SetTreeModule_add(comparer, k, SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1));\r\n                }\r\n            }\r\n            else {\r\n                return SetTreeModule_add(comparer, k, SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2));\r\n            }\r\n        }\r\n        else {\r\n            return SetTreeModule_add(comparer, k, t1);\r\n        }\r\n    }\r\n    else {\r\n        return SetTreeModule_add(comparer, k, t2);\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_split(comparer, pivot, t) {\r\n    if (t != null) {\r\n        const t2 = t;\r\n        if (t2 instanceof SetTreeNode$1) {\r\n            const c = comparer.Compare(pivot, SetTreeLeaf$1__get_Key(t2)) | 0;\r\n            if (c < 0) {\r\n                const patternInput = SetTreeModule_split(comparer, pivot, SetTreeNode$1__get_Left(t2));\r\n                return [patternInput[0], patternInput[1], SetTreeModule_balance(comparer, patternInput[2], SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2))];\r\n            }\r\n            else if (c === 0) {\r\n                return [SetTreeNode$1__get_Left(t2), true, SetTreeNode$1__get_Right(t2)];\r\n            }\r\n            else {\r\n                const patternInput_1 = SetTreeModule_split(comparer, pivot, SetTreeNode$1__get_Right(t2));\r\n                return [SetTreeModule_balance(comparer, SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), patternInput_1[0]), patternInput_1[1], patternInput_1[2]];\r\n            }\r\n        }\r\n        else {\r\n            const c_1 = comparer.Compare(SetTreeLeaf$1__get_Key(t2), pivot) | 0;\r\n            if (c_1 < 0) {\r\n                return [t, false, SetTreeModule_empty()];\r\n            }\r\n            else if (c_1 === 0) {\r\n                return [SetTreeModule_empty(), true, SetTreeModule_empty()];\r\n            }\r\n            else {\r\n                return [SetTreeModule_empty(), false, t];\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        return [SetTreeModule_empty(), false, SetTreeModule_empty()];\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_spliceOutSuccessor(t) {\r\n    if (t != null) {\r\n        const t2 = t;\r\n        if (t2 instanceof SetTreeNode$1) {\r\n            if (SetTreeNode$1__get_Left(t2) == null) {\r\n                return [SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2)];\r\n            }\r\n            else {\r\n                const patternInput = SetTreeModule_spliceOutSuccessor(SetTreeNode$1__get_Left(t2));\r\n                return [patternInput[0], SetTreeModule_mk(patternInput[1], SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2))];\r\n            }\r\n        }\r\n        else {\r\n            return [SetTreeLeaf$1__get_Key(t2), SetTreeModule_empty()];\r\n        }\r\n    }\r\n    else {\r\n        throw (new Error(\"internal error: Set.spliceOutSuccessor\"));\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_remove(comparer, k, t) {\r\n    if (t != null) {\r\n        const t2 = t;\r\n        const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\r\n        if (t2 instanceof SetTreeNode$1) {\r\n            if (c < 0) {\r\n                return SetTreeModule_rebalance(SetTreeModule_remove(comparer, k, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2));\r\n            }\r\n            else if (c === 0) {\r\n                if (SetTreeNode$1__get_Left(t2) == null) {\r\n                    return SetTreeNode$1__get_Right(t2);\r\n                }\r\n                else if (SetTreeNode$1__get_Right(t2) == null) {\r\n                    return SetTreeNode$1__get_Left(t2);\r\n                }\r\n                else {\r\n                    const patternInput = SetTreeModule_spliceOutSuccessor(SetTreeNode$1__get_Right(t2));\r\n                    return SetTreeModule_mk(SetTreeNode$1__get_Left(t2), patternInput[0], patternInput[1]);\r\n                }\r\n            }\r\n            else {\r\n                return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), SetTreeModule_remove(comparer, k, SetTreeNode$1__get_Right(t2)));\r\n            }\r\n        }\r\n        else if (c === 0) {\r\n            return SetTreeModule_empty();\r\n        }\r\n        else {\r\n            return t;\r\n        }\r\n    }\r\n    else {\r\n        return t;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_mem(comparer_mut, k_mut, t_mut) {\r\n    SetTreeModule_mem:\r\n    while (true) {\r\n        const comparer = comparer_mut, k = k_mut, t = t_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                if (c < 0) {\r\n                    comparer_mut = comparer;\r\n                    k_mut = k;\r\n                    t_mut = SetTreeNode$1__get_Left(t2);\r\n                    continue SetTreeModule_mem;\r\n                }\r\n                else if (c === 0) {\r\n                    return true;\r\n                }\r\n                else {\r\n                    comparer_mut = comparer;\r\n                    k_mut = k;\r\n                    t_mut = SetTreeNode$1__get_Right(t2);\r\n                    continue SetTreeModule_mem;\r\n                }\r\n            }\r\n            else {\r\n                return c === 0;\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_iter(f_mut, t_mut) {\r\n    SetTreeModule_iter:\r\n    while (true) {\r\n        const f = f_mut, t = t_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                SetTreeModule_iter(f, SetTreeNode$1__get_Left(t2));\r\n                f(SetTreeLeaf$1__get_Key(t2));\r\n                f_mut = f;\r\n                t_mut = SetTreeNode$1__get_Right(t2);\r\n                continue SetTreeModule_iter;\r\n            }\r\n            else {\r\n                f(SetTreeLeaf$1__get_Key(t2));\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_foldBackOpt(f_mut, t_mut, x_mut) {\r\n    SetTreeModule_foldBackOpt:\r\n    while (true) {\r\n        const f = f_mut, t = t_mut, x = x_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                f_mut = f;\r\n                t_mut = SetTreeNode$1__get_Left(t2);\r\n                x_mut = f(SetTreeLeaf$1__get_Key(t2), SetTreeModule_foldBackOpt(f, SetTreeNode$1__get_Right(t2), x));\r\n                continue SetTreeModule_foldBackOpt;\r\n            }\r\n            else {\r\n                return f(SetTreeLeaf$1__get_Key(t2), x);\r\n            }\r\n        }\r\n        else {\r\n            return x;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_foldBack(f, m, x) {\r\n    return SetTreeModule_foldBackOpt(f, m, x);\r\n}\r\n\r\nexport function SetTreeModule_foldOpt(f_mut, x_mut, t_mut) {\r\n    SetTreeModule_foldOpt:\r\n    while (true) {\r\n        const f = f_mut, x = x_mut, t = t_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                f_mut = f;\r\n                x_mut = f(SetTreeModule_foldOpt(f, x, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2));\r\n                t_mut = SetTreeNode$1__get_Right(t2);\r\n                continue SetTreeModule_foldOpt;\r\n            }\r\n            else {\r\n                return f(x, SetTreeLeaf$1__get_Key(t2));\r\n            }\r\n        }\r\n        else {\r\n            return x;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_fold(f, x, m) {\r\n    return SetTreeModule_foldOpt(f, x, m);\r\n}\r\n\r\nexport function SetTreeModule_forall(f_mut, t_mut) {\r\n    SetTreeModule_forall:\r\n    while (true) {\r\n        const f = f_mut, t = t_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                if (f(SetTreeLeaf$1__get_Key(t2)) ? SetTreeModule_forall(f, SetTreeNode$1__get_Left(t2)) : false) {\r\n                    f_mut = f;\r\n                    t_mut = SetTreeNode$1__get_Right(t2);\r\n                    continue SetTreeModule_forall;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return f(SetTreeLeaf$1__get_Key(t2));\r\n            }\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_exists(f_mut, t_mut) {\r\n    SetTreeModule_exists:\r\n    while (true) {\r\n        const f = f_mut, t = t_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                if (f(SetTreeLeaf$1__get_Key(t2)) ? true : SetTreeModule_exists(f, SetTreeNode$1__get_Left(t2))) {\r\n                    return true;\r\n                }\r\n                else {\r\n                    f_mut = f;\r\n                    t_mut = SetTreeNode$1__get_Right(t2);\r\n                    continue SetTreeModule_exists;\r\n                }\r\n            }\r\n            else {\r\n                return f(SetTreeLeaf$1__get_Key(t2));\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_subset(comparer, a, b) {\r\n    return SetTreeModule_forall((x) => SetTreeModule_mem(comparer, x, b), a);\r\n}\r\n\r\nexport function SetTreeModule_properSubset(comparer, a, b) {\r\n    if (SetTreeModule_forall((x) => SetTreeModule_mem(comparer, x, b), a)) {\r\n        return SetTreeModule_exists((x_1) => (!SetTreeModule_mem(comparer, x_1, a)), b);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_filterAux(comparer_mut, f_mut, t_mut, acc_mut) {\r\n    SetTreeModule_filterAux:\r\n    while (true) {\r\n        const comparer = comparer_mut, f = f_mut, t = t_mut, acc = acc_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                const acc_1 = f(SetTreeLeaf$1__get_Key(t2)) ? SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc) : acc;\r\n                comparer_mut = comparer;\r\n                f_mut = f;\r\n                t_mut = SetTreeNode$1__get_Left(t2);\r\n                acc_mut = SetTreeModule_filterAux(comparer, f, SetTreeNode$1__get_Right(t2), acc_1);\r\n                continue SetTreeModule_filterAux;\r\n            }\r\n            else if (f(SetTreeLeaf$1__get_Key(t2))) {\r\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc);\r\n            }\r\n            else {\r\n                return acc;\r\n            }\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_filter(comparer, f, s) {\r\n    return SetTreeModule_filterAux(comparer, f, s, SetTreeModule_empty());\r\n}\r\n\r\nexport function SetTreeModule_diffAux(comparer_mut, t_mut, acc_mut) {\r\n    SetTreeModule_diffAux:\r\n    while (true) {\r\n        const comparer = comparer_mut, t = t_mut, acc = acc_mut;\r\n        if (acc == null) {\r\n            return acc;\r\n        }\r\n        else if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                comparer_mut = comparer;\r\n                t_mut = SetTreeNode$1__get_Left(t2);\r\n                acc_mut = SetTreeModule_diffAux(comparer, SetTreeNode$1__get_Right(t2), SetTreeModule_remove(comparer, SetTreeLeaf$1__get_Key(t2), acc));\r\n                continue SetTreeModule_diffAux;\r\n            }\r\n            else {\r\n                return SetTreeModule_remove(comparer, SetTreeLeaf$1__get_Key(t2), acc);\r\n            }\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_diff(comparer, a, b) {\r\n    return SetTreeModule_diffAux(comparer, b, a);\r\n}\r\n\r\nexport function SetTreeModule_union(comparer, t1, t2) {\r\n    if (t1 != null) {\r\n        const t1$0027 = t1;\r\n        if (t2 != null) {\r\n            const t2$0027 = t2;\r\n            if (t1$0027 instanceof SetTreeNode$1) {\r\n                if (t2$0027 instanceof SetTreeNode$1) {\r\n                    if (SetTreeNode$1__get_Height(t1$0027) > SetTreeNode$1__get_Height(t2$0027)) {\r\n                        const patternInput = SetTreeModule_split(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2);\r\n                        return SetTreeModule_balance(comparer, SetTreeModule_union(comparer, SetTreeNode$1__get_Left(t1$0027), patternInput[0]), SetTreeLeaf$1__get_Key(t1$0027), SetTreeModule_union(comparer, SetTreeNode$1__get_Right(t1$0027), patternInput[2]));\r\n                    }\r\n                    else {\r\n                        const patternInput_1 = SetTreeModule_split(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1);\r\n                        return SetTreeModule_balance(comparer, SetTreeModule_union(comparer, SetTreeNode$1__get_Left(t2$0027), patternInput_1[0]), SetTreeLeaf$1__get_Key(t2$0027), SetTreeModule_union(comparer, SetTreeNode$1__get_Right(t2$0027), patternInput_1[2]));\r\n                    }\r\n                }\r\n                else {\r\n                    return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1);\r\n                }\r\n            }\r\n            else {\r\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2);\r\n            }\r\n        }\r\n        else {\r\n            return t1;\r\n        }\r\n    }\r\n    else {\r\n        return t2;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_intersectionAux(comparer_mut, b_mut, t_mut, acc_mut) {\r\n    SetTreeModule_intersectionAux:\r\n    while (true) {\r\n        const comparer = comparer_mut, b = b_mut, t = t_mut, acc = acc_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                const acc_1 = SetTreeModule_intersectionAux(comparer, b, SetTreeNode$1__get_Right(t2), acc);\r\n                const acc_2 = SetTreeModule_mem(comparer, SetTreeLeaf$1__get_Key(t2), b) ? SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc_1) : acc_1;\r\n                comparer_mut = comparer;\r\n                b_mut = b;\r\n                t_mut = SetTreeNode$1__get_Left(t2);\r\n                acc_mut = acc_2;\r\n                continue SetTreeModule_intersectionAux;\r\n            }\r\n            else if (SetTreeModule_mem(comparer, SetTreeLeaf$1__get_Key(t2), b)) {\r\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc);\r\n            }\r\n            else {\r\n                return acc;\r\n            }\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_intersection(comparer, a, b) {\r\n    return SetTreeModule_intersectionAux(comparer, b, a, SetTreeModule_empty());\r\n}\r\n\r\nexport function SetTreeModule_partition1(comparer, f, k, acc1, acc2) {\r\n    if (f(k)) {\r\n        return [SetTreeModule_add(comparer, k, acc1), acc2];\r\n    }\r\n    else {\r\n        return [acc1, SetTreeModule_add(comparer, k, acc2)];\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_partitionAux(comparer_mut, f_mut, t_mut, acc_0_mut, acc_1_mut) {\r\n    SetTreeModule_partitionAux:\r\n    while (true) {\r\n        const comparer = comparer_mut, f = f_mut, t = t_mut, acc_0 = acc_0_mut, acc_1 = acc_1_mut;\r\n        const acc = [acc_0, acc_1];\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                const acc_2 = SetTreeModule_partitionAux(comparer, f, SetTreeNode$1__get_Right(t2), acc[0], acc[1]);\r\n                const acc_3 = SetTreeModule_partition1(comparer, f, SetTreeLeaf$1__get_Key(t2), acc_2[0], acc_2[1]);\r\n                comparer_mut = comparer;\r\n                f_mut = f;\r\n                t_mut = SetTreeNode$1__get_Left(t2);\r\n                acc_0_mut = acc_3[0];\r\n                acc_1_mut = acc_3[1];\r\n                continue SetTreeModule_partitionAux;\r\n            }\r\n            else {\r\n                return SetTreeModule_partition1(comparer, f, SetTreeLeaf$1__get_Key(t2), acc[0], acc[1]);\r\n            }\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_partition(comparer, f, s) {\r\n    return SetTreeModule_partitionAux(comparer, f, s, SetTreeModule_empty(), SetTreeModule_empty());\r\n}\r\n\r\nexport function SetTreeModule_minimumElementAux(t_mut, n_mut) {\r\n    SetTreeModule_minimumElementAux:\r\n    while (true) {\r\n        const t = t_mut, n = n_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                t_mut = SetTreeNode$1__get_Left(t2);\r\n                n_mut = SetTreeLeaf$1__get_Key(t2);\r\n                continue SetTreeModule_minimumElementAux;\r\n            }\r\n            else {\r\n                return SetTreeLeaf$1__get_Key(t2);\r\n            }\r\n        }\r\n        else {\r\n            return n;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_minimumElementOpt(t) {\r\n    if (t != null) {\r\n        const t2 = t;\r\n        if (t2 instanceof SetTreeNode$1) {\r\n            return some(SetTreeModule_minimumElementAux(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2)));\r\n        }\r\n        else {\r\n            return some(SetTreeLeaf$1__get_Key(t2));\r\n        }\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_maximumElementAux(t_mut, n_mut) {\r\n    SetTreeModule_maximumElementAux:\r\n    while (true) {\r\n        const t = t_mut, n = n_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                t_mut = SetTreeNode$1__get_Right(t2);\r\n                n_mut = SetTreeLeaf$1__get_Key(t2);\r\n                continue SetTreeModule_maximumElementAux;\r\n            }\r\n            else {\r\n                return SetTreeLeaf$1__get_Key(t2);\r\n            }\r\n        }\r\n        else {\r\n            return n;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_maximumElementOpt(t) {\r\n    if (t != null) {\r\n        const t2 = t;\r\n        if (t2 instanceof SetTreeNode$1) {\r\n            return some(SetTreeModule_maximumElementAux(SetTreeNode$1__get_Right(t2), SetTreeLeaf$1__get_Key(t2)));\r\n        }\r\n        else {\r\n            return some(SetTreeLeaf$1__get_Key(t2));\r\n        }\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_minimumElement(s) {\r\n    const matchValue = SetTreeModule_minimumElementOpt(s);\r\n    if (matchValue == null) {\r\n        throw (new Error(\"Set contains no elements\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_maximumElement(s) {\r\n    const matchValue = SetTreeModule_maximumElementOpt(s);\r\n    if (matchValue == null) {\r\n        throw (new Error(\"Set contains no elements\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport class SetTreeModule_SetIterator$1 extends Record {\r\n    constructor(stack, started) {\r\n        super();\r\n        this.stack = stack;\r\n        this.started = started;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_SetIterator$1$reflection(gen0) {\r\n    return record_type(\"Set.SetTreeModule.SetIterator`1\", [gen0], SetTreeModule_SetIterator$1, () => [[\"stack\", list_type(option_type(SetTreeLeaf$1$reflection(gen0)))], [\"started\", bool_type]]);\r\n}\r\n\r\nexport function SetTreeModule_collapseLHS(stack_mut) {\r\n    SetTreeModule_collapseLHS:\r\n    while (true) {\r\n        const stack = stack_mut;\r\n        if (!isEmpty_1(stack)) {\r\n            const x = head(stack);\r\n            const rest = tail(stack);\r\n            if (x != null) {\r\n                const x2 = x;\r\n                if (x2 instanceof SetTreeNode$1) {\r\n                    stack_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2)), SetTreeNode$1__get_Right(x2)], rest);\r\n                    continue SetTreeModule_collapseLHS;\r\n                }\r\n                else {\r\n                    return stack;\r\n                }\r\n            }\r\n            else {\r\n                stack_mut = rest;\r\n                continue SetTreeModule_collapseLHS;\r\n            }\r\n        }\r\n        else {\r\n            return empty_1();\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_mkIterator(s) {\r\n    return new SetTreeModule_SetIterator$1(SetTreeModule_collapseLHS(singleton_1(s)), false);\r\n}\r\n\r\nexport function SetTreeModule_notStarted() {\r\n    throw (new Error(\"Enumeration not started\"));\r\n}\r\n\r\nexport function SetTreeModule_alreadyFinished() {\r\n    throw (new Error(\"Enumeration already started\"));\r\n}\r\n\r\nexport function SetTreeModule_current(i) {\r\n    if (i.started) {\r\n        const matchValue = i.stack;\r\n        if (isEmpty_1(matchValue)) {\r\n            return SetTreeModule_alreadyFinished();\r\n        }\r\n        else if (head(matchValue) != null) {\r\n            const t = head(matchValue);\r\n            return SetTreeLeaf$1__get_Key(t);\r\n        }\r\n        else {\r\n            throw (new Error(\"Please report error: Set iterator, unexpected stack for current\"));\r\n        }\r\n    }\r\n    else {\r\n        return SetTreeModule_notStarted();\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_moveNext(i) {\r\n    if (i.started) {\r\n        const matchValue = i.stack;\r\n        if (!isEmpty_1(matchValue)) {\r\n            if (head(matchValue) != null) {\r\n                const t = head(matchValue);\r\n                if (t instanceof SetTreeNode$1) {\r\n                    throw (new Error(\"Please report error: Set iterator, unexpected stack for moveNext\"));\r\n                }\r\n                else {\r\n                    i.stack = SetTreeModule_collapseLHS(tail(matchValue));\r\n                    return !isEmpty_1(i.stack);\r\n                }\r\n            }\r\n            else {\r\n                throw (new Error(\"Please report error: Set iterator, unexpected stack for moveNext\"));\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        i.started = true;\r\n        return !isEmpty_1(i.stack);\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_mkIEnumerator(s) {\r\n    let i = SetTreeModule_mkIterator(s);\r\n    return {\r\n        [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\r\n            return SetTreeModule_current(i);\r\n        },\r\n        [\"System.Collections.IEnumerator.get_Current\"]() {\r\n            return SetTreeModule_current(i);\r\n        },\r\n        [\"System.Collections.IEnumerator.MoveNext\"]() {\r\n            return SetTreeModule_moveNext(i);\r\n        },\r\n        [\"System.Collections.IEnumerator.Reset\"]() {\r\n            i = SetTreeModule_mkIterator(s);\r\n        },\r\n        Dispose() {\r\n        },\r\n    };\r\n}\r\n\r\nexport function SetTreeModule_compareStacks(comparer_mut, l1_mut, l2_mut) {\r\n    SetTreeModule_compareStacks:\r\n    while (true) {\r\n        const comparer = comparer_mut, l1 = l1_mut, l2 = l2_mut;\r\n        const matchValue = [l1, l2];\r\n        if (!isEmpty_1(matchValue[0])) {\r\n            if (!isEmpty_1(matchValue[1])) {\r\n                if (head(matchValue[1]) != null) {\r\n                    if (head(matchValue[0]) != null) {\r\n                        const x1_3 = head(matchValue[0]);\r\n                        const x2_3 = head(matchValue[1]);\r\n                        if (x1_3 instanceof SetTreeNode$1) {\r\n                            if (SetTreeNode$1__get_Left(x1_3) == null) {\r\n                                if (x2_3 instanceof SetTreeNode$1) {\r\n                                    if (SetTreeNode$1__get_Left(x2_3) == null) {\r\n                                        const c = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\r\n                                        if (c !== 0) {\r\n                                            return c | 0;\r\n                                        }\r\n                                        else {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = cons(SetTreeNode$1__get_Right(x1_3), tail(matchValue[0]));\r\n                                            l2_mut = cons(SetTreeNode$1__get_Right(x2_3), tail(matchValue[1]));\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        const matchValue_3 = [l1, l2];\r\n                                        let pattern_matching_result, t1_6, x1_4, t2_6, x2_4;\r\n                                        if (!isEmpty_1(matchValue_3[0])) {\r\n                                            if (head(matchValue_3[0]) != null) {\r\n                                                pattern_matching_result = 0;\r\n                                                t1_6 = tail(matchValue_3[0]);\r\n                                                x1_4 = head(matchValue_3[0]);\r\n                                            }\r\n                                            else if (!isEmpty_1(matchValue_3[1])) {\r\n                                                if (head(matchValue_3[1]) != null) {\r\n                                                    pattern_matching_result = 1;\r\n                                                    t2_6 = tail(matchValue_3[1]);\r\n                                                    x2_4 = head(matchValue_3[1]);\r\n                                                }\r\n                                                else {\r\n                                                    pattern_matching_result = 2;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result = 2;\r\n                                            }\r\n                                        }\r\n                                        else if (!isEmpty_1(matchValue_3[1])) {\r\n                                            if (head(matchValue_3[1]) != null) {\r\n                                                pattern_matching_result = 1;\r\n                                                t2_6 = tail(matchValue_3[1]);\r\n                                                x2_4 = head(matchValue_3[1]);\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result = 2;\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result = 2;\r\n                                        }\r\n                                        switch (pattern_matching_result) {\r\n                                            case 0: {\r\n                                                if (x1_4 instanceof SetTreeNode$1) {\r\n                                                    comparer_mut = comparer;\r\n                                                    l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1_4), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_4), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_4), 0)], t1_6);\r\n                                                    l2_mut = l2;\r\n                                                    continue SetTreeModule_compareStacks;\r\n                                                }\r\n                                                else {\r\n                                                    comparer_mut = comparer;\r\n                                                    l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_4))], t1_6);\r\n                                                    l2_mut = l2;\r\n                                                    continue SetTreeModule_compareStacks;\r\n                                                }\r\n                                            }\r\n                                            case 1: {\r\n                                                if (x2_4 instanceof SetTreeNode$1) {\r\n                                                    comparer_mut = comparer;\r\n                                                    l1_mut = l1;\r\n                                                    l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_4), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_4), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_4), 0)], t2_6);\r\n                                                    continue SetTreeModule_compareStacks;\r\n                                                }\r\n                                                else {\r\n                                                    comparer_mut = comparer;\r\n                                                    l1_mut = l1;\r\n                                                    l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_4))], t2_6);\r\n                                                    continue SetTreeModule_compareStacks;\r\n                                                }\r\n                                            }\r\n                                            case 2: {\r\n                                                throw (new Error(\"unexpected state in SetTree.compareStacks\"));\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    const c_1 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\r\n                                    if (c_1 !== 0) {\r\n                                        return c_1 | 0;\r\n                                    }\r\n                                    else {\r\n                                        comparer_mut = comparer;\r\n                                        l1_mut = cons(SetTreeNode$1__get_Right(x1_3), tail(matchValue[0]));\r\n                                        l2_mut = cons(SetTreeModule_empty(), tail(matchValue[1]));\r\n                                        continue SetTreeModule_compareStacks;\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                const matchValue_4 = [l1, l2];\r\n                                let pattern_matching_result_1, t1_7, x1_5, t2_7, x2_5;\r\n                                if (!isEmpty_1(matchValue_4[0])) {\r\n                                    if (head(matchValue_4[0]) != null) {\r\n                                        pattern_matching_result_1 = 0;\r\n                                        t1_7 = tail(matchValue_4[0]);\r\n                                        x1_5 = head(matchValue_4[0]);\r\n                                    }\r\n                                    else if (!isEmpty_1(matchValue_4[1])) {\r\n                                        if (head(matchValue_4[1]) != null) {\r\n                                            pattern_matching_result_1 = 1;\r\n                                            t2_7 = tail(matchValue_4[1]);\r\n                                            x2_5 = head(matchValue_4[1]);\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result_1 = 2;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_1 = 2;\r\n                                    }\r\n                                }\r\n                                else if (!isEmpty_1(matchValue_4[1])) {\r\n                                    if (head(matchValue_4[1]) != null) {\r\n                                        pattern_matching_result_1 = 1;\r\n                                        t2_7 = tail(matchValue_4[1]);\r\n                                        x2_5 = head(matchValue_4[1]);\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_1 = 2;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_1 = 2;\r\n                                }\r\n                                switch (pattern_matching_result_1) {\r\n                                    case 0: {\r\n                                        if (x1_5 instanceof SetTreeNode$1) {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1_5), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_5), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_5), 0)], t1_7);\r\n                                            l2_mut = l2;\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                        else {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_5))], t1_7);\r\n                                            l2_mut = l2;\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                    }\r\n                                    case 1: {\r\n                                        if (x2_5 instanceof SetTreeNode$1) {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = l1;\r\n                                            l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_5), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_5), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_5), 0)], t2_7);\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                        else {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = l1;\r\n                                            l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_5))], t2_7);\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                    }\r\n                                    case 2: {\r\n                                        throw (new Error(\"unexpected state in SetTree.compareStacks\"));\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (x2_3 instanceof SetTreeNode$1) {\r\n                            if (SetTreeNode$1__get_Left(x2_3) == null) {\r\n                                const c_2 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\r\n                                if (c_2 !== 0) {\r\n                                    return c_2 | 0;\r\n                                }\r\n                                else {\r\n                                    comparer_mut = comparer;\r\n                                    l1_mut = cons(SetTreeModule_empty(), tail(matchValue[0]));\r\n                                    l2_mut = cons(SetTreeNode$1__get_Right(x2_3), tail(matchValue[1]));\r\n                                    continue SetTreeModule_compareStacks;\r\n                                }\r\n                            }\r\n                            else {\r\n                                const matchValue_5 = [l1, l2];\r\n                                let pattern_matching_result_2, t1_8, x1_6, t2_8, x2_6;\r\n                                if (!isEmpty_1(matchValue_5[0])) {\r\n                                    if (head(matchValue_5[0]) != null) {\r\n                                        pattern_matching_result_2 = 0;\r\n                                        t1_8 = tail(matchValue_5[0]);\r\n                                        x1_6 = head(matchValue_5[0]);\r\n                                    }\r\n                                    else if (!isEmpty_1(matchValue_5[1])) {\r\n                                        if (head(matchValue_5[1]) != null) {\r\n                                            pattern_matching_result_2 = 1;\r\n                                            t2_8 = tail(matchValue_5[1]);\r\n                                            x2_6 = head(matchValue_5[1]);\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result_2 = 2;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_2 = 2;\r\n                                    }\r\n                                }\r\n                                else if (!isEmpty_1(matchValue_5[1])) {\r\n                                    if (head(matchValue_5[1]) != null) {\r\n                                        pattern_matching_result_2 = 1;\r\n                                        t2_8 = tail(matchValue_5[1]);\r\n                                        x2_6 = head(matchValue_5[1]);\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_2 = 2;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_2 = 2;\r\n                                }\r\n                                switch (pattern_matching_result_2) {\r\n                                    case 0: {\r\n                                        if (x1_6 instanceof SetTreeNode$1) {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1_6), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_6), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_6), 0)], t1_8);\r\n                                            l2_mut = l2;\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                        else {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_6))], t1_8);\r\n                                            l2_mut = l2;\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                    }\r\n                                    case 1: {\r\n                                        if (x2_6 instanceof SetTreeNode$1) {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = l1;\r\n                                            l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_6), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_6), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_6), 0)], t2_8);\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                        else {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = l1;\r\n                                            l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_6))], t2_8);\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                    }\r\n                                    case 2: {\r\n                                        throw (new Error(\"unexpected state in SetTree.compareStacks\"));\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            const c_3 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\r\n                            if (c_3 !== 0) {\r\n                                return c_3 | 0;\r\n                            }\r\n                            else {\r\n                                comparer_mut = comparer;\r\n                                l1_mut = tail(matchValue[0]);\r\n                                l2_mut = tail(matchValue[1]);\r\n                                continue SetTreeModule_compareStacks;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        const x2 = head(matchValue[1]);\r\n                        const matchValue_1 = [l1, l2];\r\n                        let pattern_matching_result_3, t1_2, x1, t2_2, x2_1;\r\n                        if (!isEmpty_1(matchValue_1[0])) {\r\n                            if (head(matchValue_1[0]) != null) {\r\n                                pattern_matching_result_3 = 0;\r\n                                t1_2 = tail(matchValue_1[0]);\r\n                                x1 = head(matchValue_1[0]);\r\n                            }\r\n                            else if (!isEmpty_1(matchValue_1[1])) {\r\n                                if (head(matchValue_1[1]) != null) {\r\n                                    pattern_matching_result_3 = 1;\r\n                                    t2_2 = tail(matchValue_1[1]);\r\n                                    x2_1 = head(matchValue_1[1]);\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_3 = 2;\r\n                                }\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_3 = 2;\r\n                            }\r\n                        }\r\n                        else if (!isEmpty_1(matchValue_1[1])) {\r\n                            if (head(matchValue_1[1]) != null) {\r\n                                pattern_matching_result_3 = 1;\r\n                                t2_2 = tail(matchValue_1[1]);\r\n                                x2_1 = head(matchValue_1[1]);\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_3 = 2;\r\n                            }\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_3 = 2;\r\n                        }\r\n                        switch (pattern_matching_result_3) {\r\n                            case 0: {\r\n                                if (x1 instanceof SetTreeNode$1) {\r\n                                    comparer_mut = comparer;\r\n                                    l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1), 0)], t1_2);\r\n                                    l2_mut = l2;\r\n                                    continue SetTreeModule_compareStacks;\r\n                                }\r\n                                else {\r\n                                    comparer_mut = comparer;\r\n                                    l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1))], t1_2);\r\n                                    l2_mut = l2;\r\n                                    continue SetTreeModule_compareStacks;\r\n                                }\r\n                            }\r\n                            case 1: {\r\n                                if (x2_1 instanceof SetTreeNode$1) {\r\n                                    comparer_mut = comparer;\r\n                                    l1_mut = l1;\r\n                                    l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_1), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_1), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_1), 0)], t2_2);\r\n                                    continue SetTreeModule_compareStacks;\r\n                                }\r\n                                else {\r\n                                    comparer_mut = comparer;\r\n                                    l1_mut = l1;\r\n                                    l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_1))], t2_2);\r\n                                    continue SetTreeModule_compareStacks;\r\n                                }\r\n                            }\r\n                            case 2: {\r\n                                throw (new Error(\"unexpected state in SetTree.compareStacks\"));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else if (head(matchValue[0]) != null) {\r\n                    const x1_1 = head(matchValue[0]);\r\n                    const matchValue_2 = [l1, l2];\r\n                    let pattern_matching_result_4, t1_4, x1_2, t2_4, x2_2;\r\n                    if (!isEmpty_1(matchValue_2[0])) {\r\n                        if (head(matchValue_2[0]) != null) {\r\n                            pattern_matching_result_4 = 0;\r\n                            t1_4 = tail(matchValue_2[0]);\r\n                            x1_2 = head(matchValue_2[0]);\r\n                        }\r\n                        else if (!isEmpty_1(matchValue_2[1])) {\r\n                            if (head(matchValue_2[1]) != null) {\r\n                                pattern_matching_result_4 = 1;\r\n                                t2_4 = tail(matchValue_2[1]);\r\n                                x2_2 = head(matchValue_2[1]);\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_4 = 2;\r\n                            }\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_4 = 2;\r\n                        }\r\n                    }\r\n                    else if (!isEmpty_1(matchValue_2[1])) {\r\n                        if (head(matchValue_2[1]) != null) {\r\n                            pattern_matching_result_4 = 1;\r\n                            t2_4 = tail(matchValue_2[1]);\r\n                            x2_2 = head(matchValue_2[1]);\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_4 = 2;\r\n                        }\r\n                    }\r\n                    else {\r\n                        pattern_matching_result_4 = 2;\r\n                    }\r\n                    switch (pattern_matching_result_4) {\r\n                        case 0: {\r\n                            if (x1_2 instanceof SetTreeNode$1) {\r\n                                comparer_mut = comparer;\r\n                                l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1_2), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_2), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_2), 0)], t1_4);\r\n                                l2_mut = l2;\r\n                                continue SetTreeModule_compareStacks;\r\n                            }\r\n                            else {\r\n                                comparer_mut = comparer;\r\n                                l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_2))], t1_4);\r\n                                l2_mut = l2;\r\n                                continue SetTreeModule_compareStacks;\r\n                            }\r\n                        }\r\n                        case 1: {\r\n                            if (x2_2 instanceof SetTreeNode$1) {\r\n                                comparer_mut = comparer;\r\n                                l1_mut = l1;\r\n                                l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_2), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_2), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_2), 0)], t2_4);\r\n                                continue SetTreeModule_compareStacks;\r\n                            }\r\n                            else {\r\n                                comparer_mut = comparer;\r\n                                l1_mut = l1;\r\n                                l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_2))], t2_4);\r\n                                continue SetTreeModule_compareStacks;\r\n                            }\r\n                        }\r\n                        case 2: {\r\n                            throw (new Error(\"unexpected state in SetTree.compareStacks\"));\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    comparer_mut = comparer;\r\n                    l1_mut = tail(matchValue[0]);\r\n                    l2_mut = tail(matchValue[1]);\r\n                    continue SetTreeModule_compareStacks;\r\n                }\r\n            }\r\n            else {\r\n                return 1;\r\n            }\r\n        }\r\n        else if (isEmpty_1(matchValue[1])) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_compare(comparer, t1, t2) {\r\n    if (t1 == null) {\r\n        if (t2 == null) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    }\r\n    else if (t2 == null) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return SetTreeModule_compareStacks(comparer, singleton_1(t1), singleton_1(t2)) | 0;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_choose(s) {\r\n    return SetTreeModule_minimumElement(s);\r\n}\r\n\r\nexport function SetTreeModule_toList(t) {\r\n    const loop = (t$0027_mut, acc_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const t$0027 = t$0027_mut, acc = acc_mut;\r\n            if (t$0027 != null) {\r\n                const t2 = t$0027;\r\n                if (t2 instanceof SetTreeNode$1) {\r\n                    t$0027_mut = SetTreeNode$1__get_Left(t2);\r\n                    acc_mut = cons(SetTreeLeaf$1__get_Key(t2), loop(SetTreeNode$1__get_Right(t2), acc));\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return cons(SetTreeLeaf$1__get_Key(t2), acc);\r\n                }\r\n            }\r\n            else {\r\n                return acc;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(t, empty_1());\r\n}\r\n\r\nexport function SetTreeModule_copyToArray(s, arr, i) {\r\n    let j = i;\r\n    SetTreeModule_iter((x) => {\r\n        arr[j] = x;\r\n        j = ((j + 1) | 0);\r\n    }, s);\r\n}\r\n\r\nexport function SetTreeModule_toArray(s) {\r\n    const n = SetTreeModule_count(s) | 0;\r\n    const res = fill(new Array(n), 0, n, null);\r\n    SetTreeModule_copyToArray(s, res, 0);\r\n    return res;\r\n}\r\n\r\nexport function SetTreeModule_mkFromEnumerator(comparer_mut, acc_mut, e_mut) {\r\n    SetTreeModule_mkFromEnumerator:\r\n    while (true) {\r\n        const comparer = comparer_mut, acc = acc_mut, e = e_mut;\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            comparer_mut = comparer;\r\n            acc_mut = SetTreeModule_add(comparer, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), acc);\r\n            e_mut = e;\r\n            continue SetTreeModule_mkFromEnumerator;\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_ofArray(comparer, l) {\r\n    return fold_1((acc, k) => SetTreeModule_add(comparer, k, acc), SetTreeModule_empty(), l);\r\n}\r\n\r\nexport function SetTreeModule_ofList(comparer, l) {\r\n    return fold_2((acc, k) => SetTreeModule_add(comparer, k, acc), SetTreeModule_empty(), l);\r\n}\r\n\r\nexport function SetTreeModule_ofSeq(comparer, c) {\r\n    if (isArrayLike(c)) {\r\n        return SetTreeModule_ofArray(comparer, c);\r\n    }\r\n    else if (c instanceof FSharpList) {\r\n        return SetTreeModule_ofList(comparer, c);\r\n    }\r\n    else {\r\n        const ie = getEnumerator(c);\r\n        try {\r\n            return SetTreeModule_mkFromEnumerator(comparer, SetTreeModule_empty(), ie);\r\n        }\r\n        finally {\r\n            ie.Dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport class FSharpSet {\r\n    constructor(comparer, tree) {\r\n        this.comparer = comparer;\r\n        this.tree = tree;\r\n    }\r\n    GetHashCode() {\r\n        const this$ = this;\r\n        return FSharpSet__ComputeHashCode(this$) | 0;\r\n    }\r\n    Equals(that) {\r\n        const this$ = this;\r\n        return (that instanceof FSharpSet) ? (SetTreeModule_compare(FSharpSet__get_Comparer(this$), FSharpSet__get_Tree(this$), FSharpSet__get_Tree(that)) === 0) : false;\r\n    }\r\n    toString() {\r\n        const this$ = this;\r\n        return (\"set [\" + join(\"; \", map_1((x) => {\r\n            let copyOfStruct = x;\r\n            return toString(copyOfStruct);\r\n        }, this$))) + \"]\";\r\n    }\r\n    get [Symbol.toStringTag]() {\r\n        return \"FSharpSet\";\r\n    }\r\n    toJSON(_key) {\r\n        const this$ = this;\r\n        return Array.from(this$);\r\n    }\r\n    CompareTo(that) {\r\n        const s = this;\r\n        return SetTreeModule_compare(FSharpSet__get_Comparer(s), FSharpSet__get_Tree(s), FSharpSet__get_Tree(that)) | 0;\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](x) {\r\n        throw (new Error(\"ReadOnlyCollection\"));\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\r\n        throw (new Error(\"ReadOnlyCollection\"));\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](x) {\r\n        throw (new Error(\"ReadOnlyCollection\"));\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](x) {\r\n        const s = this;\r\n        return SetTreeModule_mem(FSharpSet__get_Comparer(s), x, FSharpSet__get_Tree(s));\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](arr, i) {\r\n        const s = this;\r\n        SetTreeModule_copyToArray(FSharpSet__get_Tree(s), arr, i);\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\r\n        return true;\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\r\n        const s = this;\r\n        return FSharpSet__get_Count(s) | 0;\r\n    }\r\n    [\"System.Collections.Generic.IReadOnlyCollection`1.get_Count\"]() {\r\n        const s = this;\r\n        return FSharpSet__get_Count(s) | 0;\r\n    }\r\n    GetEnumerator() {\r\n        const s = this;\r\n        return SetTreeModule_mkIEnumerator(FSharpSet__get_Tree(s));\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const s = this;\r\n        return SetTreeModule_mkIEnumerator(FSharpSet__get_Tree(s));\r\n    }\r\n    get size() {\r\n        const s = this;\r\n        return FSharpSet__get_Count(s) | 0;\r\n    }\r\n    add(k) {\r\n        const s = this;\r\n        throw (new Error(\"Set cannot be mutated\"));\r\n        return s;\r\n    }\r\n    clear() {\r\n        throw (new Error(\"Set cannot be mutated\"));\r\n    }\r\n    delete(k) {\r\n        throw (new Error(\"Set cannot be mutated\"));\r\n        return false;\r\n    }\r\n    has(k) {\r\n        const s = this;\r\n        return FSharpSet__Contains(s, k);\r\n    }\r\n    keys() {\r\n        const s = this;\r\n        return map_1((x) => x, s);\r\n    }\r\n    values() {\r\n        const s = this;\r\n        return map_1((x) => x, s);\r\n    }\r\n    entries() {\r\n        const s = this;\r\n        return map_1((v) => [v, v], s);\r\n    }\r\n    forEach(f, thisArg) {\r\n        const s = this;\r\n        iterate_1((x) => {\r\n            f(x, x, s);\r\n        }, s);\r\n    }\r\n}\r\n\r\nexport function FSharpSet$reflection(gen0) {\r\n    return class_type(\"Set.FSharpSet\", [gen0], FSharpSet);\r\n}\r\n\r\nexport function FSharpSet_$ctor(comparer, tree) {\r\n    return new FSharpSet(comparer, tree);\r\n}\r\n\r\nexport function FSharpSet__get_Comparer(set$) {\r\n    return set$.comparer;\r\n}\r\n\r\nexport function FSharpSet__get_Tree(set$) {\r\n    return set$.tree;\r\n}\r\n\r\nexport function FSharpSet_Empty(comparer) {\r\n    return FSharpSet_$ctor(comparer, SetTreeModule_empty());\r\n}\r\n\r\nexport function FSharpSet__Add(s, value) {\r\n    return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_add(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s)));\r\n}\r\n\r\nexport function FSharpSet__Remove(s, value) {\r\n    return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_remove(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s)));\r\n}\r\n\r\nexport function FSharpSet__get_Count(s) {\r\n    return SetTreeModule_count(FSharpSet__get_Tree(s));\r\n}\r\n\r\nexport function FSharpSet__Contains(s, value) {\r\n    return SetTreeModule_mem(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s));\r\n}\r\n\r\nexport function FSharpSet__Iterate(s, x) {\r\n    SetTreeModule_iter(x, FSharpSet__get_Tree(s));\r\n}\r\n\r\nexport function FSharpSet__Fold(s, f, z) {\r\n    const f_1 = f;\r\n    return SetTreeModule_fold((x, z_1) => f_1(z_1, x), z, FSharpSet__get_Tree(s));\r\n}\r\n\r\nexport function FSharpSet__get_IsEmpty(s) {\r\n    return FSharpSet__get_Tree(s) == null;\r\n}\r\n\r\nexport function FSharpSet__Partition(s, f) {\r\n    if (FSharpSet__get_Tree(s) == null) {\r\n        return [s, s];\r\n    }\r\n    else {\r\n        const patternInput = SetTreeModule_partition(FSharpSet__get_Comparer(s), f, FSharpSet__get_Tree(s));\r\n        return [FSharpSet_$ctor(FSharpSet__get_Comparer(s), patternInput[0]), FSharpSet_$ctor(FSharpSet__get_Comparer(s), patternInput[1])];\r\n    }\r\n}\r\n\r\nexport function FSharpSet__Filter(s, f) {\r\n    if (FSharpSet__get_Tree(s) == null) {\r\n        return s;\r\n    }\r\n    else {\r\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_filter(FSharpSet__get_Comparer(s), f, FSharpSet__get_Tree(s)));\r\n    }\r\n}\r\n\r\nexport function FSharpSet__Map(s, f, comparer) {\r\n    return FSharpSet_$ctor(comparer, SetTreeModule_fold((acc, k) => SetTreeModule_add(comparer, f(k), acc), SetTreeModule_empty(), FSharpSet__get_Tree(s)));\r\n}\r\n\r\nexport function FSharpSet__Exists(s, f) {\r\n    return SetTreeModule_exists(f, FSharpSet__get_Tree(s));\r\n}\r\n\r\nexport function FSharpSet__ForAll(s, f) {\r\n    return SetTreeModule_forall(f, FSharpSet__get_Tree(s));\r\n}\r\n\r\nexport function FSharpSet_op_Subtraction(set1, set2) {\r\n    if (FSharpSet__get_Tree(set1) == null) {\r\n        return set1;\r\n    }\r\n    else if (FSharpSet__get_Tree(set2) == null) {\r\n        return set1;\r\n    }\r\n    else {\r\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(set1), SetTreeModule_diff(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2)));\r\n    }\r\n}\r\n\r\nexport function FSharpSet_op_Addition(set1, set2) {\r\n    if (FSharpSet__get_Tree(set2) == null) {\r\n        return set1;\r\n    }\r\n    else if (FSharpSet__get_Tree(set1) == null) {\r\n        return set2;\r\n    }\r\n    else {\r\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(set1), SetTreeModule_union(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2)));\r\n    }\r\n}\r\n\r\nexport function FSharpSet_Intersection(a, b) {\r\n    if (FSharpSet__get_Tree(b) == null) {\r\n        return b;\r\n    }\r\n    else if (FSharpSet__get_Tree(a) == null) {\r\n        return a;\r\n    }\r\n    else {\r\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(a), SetTreeModule_intersection(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b)));\r\n    }\r\n}\r\n\r\nexport function FSharpSet_IntersectionMany(sets) {\r\n    return reduce((s1, s2) => FSharpSet_Intersection(s1, s2), sets);\r\n}\r\n\r\nexport function FSharpSet_Equality(a, b) {\r\n    return SetTreeModule_compare(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b)) === 0;\r\n}\r\n\r\nexport function FSharpSet_Compare(a, b) {\r\n    return SetTreeModule_compare(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b));\r\n}\r\n\r\nexport function FSharpSet__get_Choose(x) {\r\n    return SetTreeModule_choose(FSharpSet__get_Tree(x));\r\n}\r\n\r\nexport function FSharpSet__get_MinimumElement(x) {\r\n    return SetTreeModule_minimumElement(FSharpSet__get_Tree(x));\r\n}\r\n\r\nexport function FSharpSet__get_MaximumElement(x) {\r\n    return SetTreeModule_maximumElement(FSharpSet__get_Tree(x));\r\n}\r\n\r\nexport function FSharpSet__IsSubsetOf(x, otherSet) {\r\n    return SetTreeModule_subset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(x), FSharpSet__get_Tree(otherSet));\r\n}\r\n\r\nexport function FSharpSet__IsSupersetOf(x, otherSet) {\r\n    return SetTreeModule_subset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(otherSet), FSharpSet__get_Tree(x));\r\n}\r\n\r\nexport function FSharpSet__IsProperSubsetOf(x, otherSet) {\r\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(x), FSharpSet__get_Tree(otherSet));\r\n}\r\n\r\nexport function FSharpSet__IsProperSupersetOf(x, otherSet) {\r\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(otherSet), FSharpSet__get_Tree(x));\r\n}\r\n\r\nexport function FSharpSet__ToList(x) {\r\n    return SetTreeModule_toList(FSharpSet__get_Tree(x));\r\n}\r\n\r\nexport function FSharpSet__ToArray(x) {\r\n    return SetTreeModule_toArray(FSharpSet__get_Tree(x));\r\n}\r\n\r\nexport function FSharpSet__ComputeHashCode(this$) {\r\n    let y;\r\n    let res = 0;\r\n    const enumerator = getEnumerator(this$);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const x_1 = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            res = (((y = (structuralHash(x_1) | 0), ((res << 1) + y) + 631)) | 0);\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n    return Math.abs(res) | 0;\r\n}\r\n\r\nexport function isEmpty(set$) {\r\n    return FSharpSet__get_IsEmpty(set$);\r\n}\r\n\r\nexport function contains(element, set$) {\r\n    return FSharpSet__Contains(set$, element);\r\n}\r\n\r\nexport function add(value, set$) {\r\n    return FSharpSet__Add(set$, value);\r\n}\r\n\r\nexport function singleton(value, comparer) {\r\n    return FSharpSet__Add(FSharpSet_Empty(comparer), value);\r\n}\r\n\r\nexport function remove(value, set$) {\r\n    return FSharpSet__Remove(set$, value);\r\n}\r\n\r\nexport function union(set1, set2) {\r\n    return FSharpSet_op_Addition(set1, set2);\r\n}\r\n\r\nexport function unionMany(sets, comparer) {\r\n    return fold_3((s1, s2) => FSharpSet_op_Addition(s1, s2), FSharpSet_Empty(comparer), sets);\r\n}\r\n\r\nexport function intersect(set1, set2) {\r\n    return FSharpSet_Intersection(set1, set2);\r\n}\r\n\r\nexport function intersectMany(sets) {\r\n    return FSharpSet_IntersectionMany(sets);\r\n}\r\n\r\nexport function iterate(action, set$) {\r\n    FSharpSet__Iterate(set$, action);\r\n}\r\n\r\nexport function empty(comparer) {\r\n    return FSharpSet_Empty(comparer);\r\n}\r\n\r\nexport function forAll(predicate, set$) {\r\n    return FSharpSet__ForAll(set$, predicate);\r\n}\r\n\r\nexport function exists(predicate, set$) {\r\n    return FSharpSet__Exists(set$, predicate);\r\n}\r\n\r\nexport function filter(predicate, set$) {\r\n    return FSharpSet__Filter(set$, predicate);\r\n}\r\n\r\nexport function partition(predicate, set$) {\r\n    return FSharpSet__Partition(set$, predicate);\r\n}\r\n\r\nexport function fold(folder, state, set$) {\r\n    return SetTreeModule_fold(folder, state, FSharpSet__get_Tree(set$));\r\n}\r\n\r\nexport function foldBack(folder, set$, state) {\r\n    return SetTreeModule_foldBack(folder, FSharpSet__get_Tree(set$), state);\r\n}\r\n\r\nexport function map(mapping, set$, comparer) {\r\n    return FSharpSet__Map(set$, mapping, comparer);\r\n}\r\n\r\nexport function count(set$) {\r\n    return FSharpSet__get_Count(set$);\r\n}\r\n\r\nexport function ofList(elements, comparer) {\r\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofSeq(comparer, elements));\r\n}\r\n\r\nexport function ofArray(array, comparer) {\r\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofArray(comparer, array));\r\n}\r\n\r\nexport function toList(set$) {\r\n    return FSharpSet__ToList(set$);\r\n}\r\n\r\nexport function toArray(set$) {\r\n    return FSharpSet__ToArray(set$);\r\n}\r\n\r\nexport function toSeq(set$) {\r\n    return map_1((x) => x, set$);\r\n}\r\n\r\nexport function ofSeq(elements, comparer) {\r\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofSeq(comparer, elements));\r\n}\r\n\r\nexport function difference(set1, set2) {\r\n    return FSharpSet_op_Subtraction(set1, set2);\r\n}\r\n\r\nexport function isSubset(set1, set2) {\r\n    return SetTreeModule_subset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2));\r\n}\r\n\r\nexport function isSuperset(set1, set2) {\r\n    return SetTreeModule_subset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set2), FSharpSet__get_Tree(set1));\r\n}\r\n\r\nexport function isProperSubset(set1, set2) {\r\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2));\r\n}\r\n\r\nexport function isProperSuperset(set1, set2) {\r\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set2), FSharpSet__get_Tree(set1));\r\n}\r\n\r\nexport function minElement(set$) {\r\n    return FSharpSet__get_MinimumElement(set$);\r\n}\r\n\r\nexport function maxElement(set$) {\r\n    return FSharpSet__get_MaximumElement(set$);\r\n}\r\n\r\nexport function unionWith(s1, s2) {\r\n    return fold_3((acc, x) => acc.add(x), s1, s2);\r\n}\r\n\r\nexport function intersectWith(s1, s2, comparer) {\r\n    const s2_1 = ofSeq(s2, comparer);\r\n    const enumerator = getEnumerator(s1.keys());\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            if (!FSharpSet__Contains(s2_1, x)) {\r\n                void s1.delete(x);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n}\r\n\r\nexport function exceptWith(s1, s2) {\r\n    const enumerator = getEnumerator(s2);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            void s1.delete(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n}\r\n\r\nexport function isSubsetOf(s1, s2, comparer) {\r\n    return isSubset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\r\n}\r\n\r\nexport function isSupersetOf(s1, s2, comparer) {\r\n    return isSuperset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\r\n}\r\n\r\nexport function isProperSubsetOf(s1, s2, comparer) {\r\n    return isProperSubset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\r\n}\r\n\r\nexport function isProperSupersetOf(s1, s2, comparer) {\r\n    return isProperSuperset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\r\n}\r\n\r\n","import { toFail, printf, toText, join } from \"../fable-library.3.4.0/String.js\";\nimport { Result_Map, FSharpResult$2 } from \"../fable-library.3.4.0/Choice.js\";\nimport { Util_CachedDecoders, Util_Cache$1__GetOrAdd_43981464, CaseStrategy, Util_Casing_convert, ErrorReason } from \"./Types.fs.js\";\nimport { tryParse as tryParse_2 } from \"../fable-library.3.4.0/Guid.js\";\nimport { toString as toString_12, FSharpRef } from \"../fable-library.3.4.0/Types.js\";\nimport { tryParse as tryParse_3 } from \"../fable-library.3.4.0/Int32.js\";\nimport { tryParse as tryParse_4, fromInt, fromNumber, fromBits, toNumber } from \"../fable-library.3.4.0/Long.js\";\nimport { parse, fromInt32 } from \"../fable-library.3.4.0/BigInt.js\";\nimport { tryParse as tryParse_5 } from \"../fable-library.3.4.0/Decimal.js\";\nimport Decimal from \"../fable-library.3.4.0/Decimal.js\";\nimport { toUniversalTime, tryParse as tryParse_6, minValue } from \"../fable-library.3.4.0/Date.js\";\nimport { tryParse as tryParse_7, minValue as minValue_1 } from \"../fable-library.3.4.0/DateOffset.js\";\nimport { tryParse as tryParse_8 } from \"../fable-library.3.4.0/TimeSpan.js\";\nimport { map as map_4, defaultArg, some } from \"../fable-library.3.4.0/Option.js\";\nimport { ofArray, toArray, map as map_1, length, singleton, append as append_1, tail as tail_1, head as head_1, isEmpty, ofSeq, empty, reverse, fold, tryLast, cons } from \"../fable-library.3.4.0/List.js\";\nimport { int16ToString, numberHash, mapCurriedArgs, compare, int32ToString, uncurry } from \"../fable-library.3.4.0/Util.js\";\nimport { map as map_2, tryFind, foldBack2, foldBack, fill, fold as fold_1 } from \"../fable-library.3.4.0/Array.js\";\nimport { contains, fold as fold_2, toList, append, reverse as reverse_1 } from \"../fable-library.3.4.0/Seq.js\";\nimport { empty as empty_1, map as map_3, tryFind as tryFind_1, add, ofSeq as ofSeq_1, ofList } from \"../fable-library.3.4.0/Map.js\";\nimport { getGenerics, getGenericTypeDefinition, makeTuple, getTupleElements, isTuple, isGenericType, parseEnum, getEnumValues, getEnumUnderlyingType, isEnum, getElementType, isArray, isUnion, makeRecord, getRecordElements, isRecord, fullName, getUnionCaseFields, makeUnion as makeUnion_1, getUnionCases, name as name_3, class_type } from \"../fable-library.3.4.0/Reflection.js\";\nimport { ofSeq as ofSeq_2 } from \"../fable-library.3.4.0/Set.js\";\n\nexport function Helpers_isUndefined(o) {\n    return (typeof o) === \"undefined\";\n}\n\nfunction genericMsg(msg, value_1, newLine) {\n    try {\n        return (((\"Expecting \" + msg) + \" but instead got:\") + (newLine ? \"\\n\" : \" \")) + (JSON.stringify(value_1, null, 4) + '');\n    }\n    catch (matchValue) {\n        return ((\"Expecting \" + msg) + \" but decoder failed. Couldn\\u0027t report given value due to circular structure.\") + (newLine ? \"\\n\" : \" \");\n    }\n}\n\nfunction errorToString(path, error) {\n    const reason_1 = (error.tag === 2) ? genericMsg(error.fields[0], error.fields[1], true) : ((error.tag === 1) ? ((genericMsg(error.fields[0], error.fields[1], false) + \"\\nReason: \") + error.fields[2]) : ((error.tag === 3) ? genericMsg(error.fields[0], error.fields[1], true) : ((error.tag === 4) ? (genericMsg(error.fields[0], error.fields[1], true) + ((\"\\nNode `\" + error.fields[2]) + \"` is unkown.\")) : ((error.tag === 5) ? (((\"Expecting \" + error.fields[0]) + \".\\n\") + (JSON.stringify(error.fields[1], null, 4) + '')) : ((error.tag === 7) ? (\"The following errors were found:\\n\\n\" + join(\"\\n\\n\", error.fields[0])) : ((error.tag === 6) ? (\"The following `failure` occurred with the decoder: \" + error.fields[0]) : genericMsg(error.fields[0], error.fields[1], false)))))));\n    if (error.tag === 7) {\n        return reason_1;\n    }\n    else {\n        return ((\"Error at: `\" + path) + \"`\\n\") + reason_1;\n    }\n}\n\nexport function fromValue(path, decoder, value_1) {\n    const matchValue = decoder(path, value_1);\n    if (matchValue.tag === 1) {\n        const error = matchValue.fields[0];\n        return new FSharpResult$2(1, errorToString(error[0], error[1]));\n    }\n    else {\n        return new FSharpResult$2(0, matchValue.fields[0]);\n    }\n}\n\nexport function fromString(decoder, value_1) {\n    try {\n        return fromValue(\"$\", decoder, JSON.parse(value_1));\n    }\n    catch (matchValue) {\n        if (matchValue instanceof SyntaxError) {\n            return new FSharpResult$2(1, \"Given an invalid JSON: \" + matchValue.message);\n        }\n        else {\n            throw matchValue;\n        }\n    }\n}\n\nexport function unsafeFromString(decoder, value_1) {\n    const matchValue = fromString(decoder, value_1);\n    if (matchValue.tag === 1) {\n        throw (new Error(matchValue.fields[0]));\n    }\n    else {\n        return matchValue.fields[0];\n    }\n}\n\nexport function decodeValue(path, decoder) {\n    const decoder_1 = decoder;\n    return (value_1) => fromValue(path, decoder_1, value_1);\n}\n\nexport function decodeString(decoder) {\n    const decoder_1 = decoder;\n    return (value_1) => fromString(decoder_1, value_1);\n}\n\nexport function string(path, value_1) {\n    if ((typeof value_1) === \"string\") {\n        return new FSharpResult$2(0, value_1);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a string\", value_1)]);\n    }\n}\n\nexport function guid(path, value_1) {\n    if ((typeof value_1) === \"string\") {\n        let matchValue;\n        let outArg = \"00000000-0000-0000-0000-000000000000\";\n        matchValue = [tryParse_2(value_1, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            return new FSharpResult$2(0, matchValue[1]);\n        }\n        else {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a guid\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a guid\", value_1)]);\n    }\n}\n\nexport function unit(path, value_1) {\n    if (value_1 == null) {\n        return new FSharpResult$2(0, void 0);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"null\", value_1)]);\n    }\n}\n\nexport const sbyte = (path) => ((value_2) => {\n    const name_1 = \"a sbyte\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((-128 <= value_4) ? (value_4 <= 127) : false) ? (new FSharpResult$2(0, (value_4 + 0x80 & 0xFF) - 0x80)) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, false, 8, new FSharpRef(() => outArg, (v) => {\n            outArg = (v | 0);\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const byte = (path) => ((value_2) => {\n    const name_1 = \"a byte\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((0 <= value_4) ? (value_4 <= 255) : false) ? (new FSharpResult$2(0, value_4 & 0xFF)) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, true, 8, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const int16 = (path) => ((value_2) => {\n    const name_1 = \"an int16\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((-32768 <= value_4) ? (value_4 <= 32767) : false) ? (new FSharpResult$2(0, (value_4 + 0x8000 & 0xFFFF) - 0x8000)) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, false, 16, new FSharpRef(() => outArg, (v) => {\n            outArg = (v | 0);\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const uint16 = (path) => ((value_2) => {\n    const name_1 = \"an uint16\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((0 <= value_4) ? (value_4 <= 65535) : false) ? (new FSharpResult$2(0, value_4 & 0xFFFF)) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, true, 16, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const int = (path) => ((value_2) => {\n    const name_1 = \"an int\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((-2147483648 <= value_4) ? (value_4 <= 2147483647) : false) ? (new FSharpResult$2(0, ~(~value_4))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, false, 32, new FSharpRef(() => outArg, (v) => {\n            outArg = (v | 0);\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const uint32 = (path) => ((value_2) => {\n    const name_1 = \"an uint32\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((0 <= value_4) ? (value_4 <= 4294967295) : false) ? (new FSharpResult$2(0, value_4 >>> 0)) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, true, 32, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const int64 = (path) => ((value_2) => {\n    const name_1 = \"an int64\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((toNumber(fromBits(0, 2147483648, false)) <= value_4) ? (value_4 <= toNumber(fromBits(4294967295, 2147483647, false))) : false) ? (new FSharpResult$2(0, fromNumber(value_4, false))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = fromInt(0);\n        matchValue = [tryParse_4(value_3, 511, false, 64, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const uint64 = (path) => ((value_2) => {\n    const name_1 = \"an uint64\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((toNumber(fromBits(0, 0, true)) <= value_4) ? (value_4 <= toNumber(fromBits(4294967295, 4294967295, true))) : false) ? (new FSharpResult$2(0, fromNumber(value_4, true))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = fromInt(0);\n        matchValue = [tryParse_4(value_3, 511, true, 64, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport function bigint(path, value_1) {\n    if ((typeof value_1) === \"number\") {\n        return new FSharpResult$2(0, fromInt32(value_1));\n    }\n    else if ((typeof value_1) === \"string\") {\n        try {\n            return new FSharpResult$2(0, parse(value_1));\n        }\n        catch (matchValue) {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a bigint\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a bigint\", value_1)]);\n    }\n}\n\nexport function bool(path, value_1) {\n    if ((typeof value_1) === \"boolean\") {\n        return new FSharpResult$2(0, value_1);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a boolean\", value_1)]);\n    }\n}\n\nexport function float(path, value_1) {\n    if ((typeof value_1) === \"number\") {\n        return new FSharpResult$2(0, value_1);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a float\", value_1)]);\n    }\n}\n\nexport function float32(path, value_1) {\n    if ((typeof value_1) === \"number\") {\n        return new FSharpResult$2(0, value_1);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a float32\", value_1)]);\n    }\n}\n\nexport function decimal(path, value_1) {\n    if ((typeof value_1) === \"number\") {\n        return new FSharpResult$2(0, new Decimal(value_1));\n    }\n    else if ((typeof value_1) === \"string\") {\n        let matchValue;\n        let outArg = new Decimal(0);\n        matchValue = [tryParse_5(value_1, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            return new FSharpResult$2(0, matchValue[1]);\n        }\n        else {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a decimal\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a decimal\", value_1)]);\n    }\n}\n\nexport function datetime(path, value_1) {\n    if ((typeof value_1) === \"string\") {\n        let matchValue;\n        let outArg = minValue();\n        matchValue = [tryParse_6(value_1, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            return new FSharpResult$2(0, toUniversalTime(matchValue[1]));\n        }\n        else {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a datetime\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a datetime\", value_1)]);\n    }\n}\n\nexport function datetimeOffset(path, value_1) {\n    if ((typeof value_1) === \"string\") {\n        let matchValue;\n        let outArg = minValue_1();\n        matchValue = [tryParse_7(value_1, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            return new FSharpResult$2(0, matchValue[1]);\n        }\n        else {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a datetimeoffset\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a datetime\", value_1)]);\n    }\n}\n\nexport function timespan(path, value_1) {\n    if ((typeof value_1) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_8(value_1, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            return new FSharpResult$2(0, matchValue[1]);\n        }\n        else {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a timespan\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a timespan\", value_1)]);\n    }\n}\n\nfunction decodeMaybeNull(path, decoder, value_1) {\n    const matchValue = decoder(path, value_1);\n    if (matchValue.tag === 1) {\n        if (value_1 == null) {\n            return new FSharpResult$2(0, void 0);\n        }\n        else if (matchValue.tag === 1) {\n            return new FSharpResult$2(1, matchValue.fields[0]);\n        }\n        else {\n            throw (new Error(\"Match failure\"));\n        }\n    }\n    else {\n        return new FSharpResult$2(0, some(matchValue.fields[0]));\n    }\n}\n\nexport function optional(fieldName, decoder, path, value_1) {\n    if (value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype)) {\n        const fieldValue = value_1[fieldName];\n        if (Helpers_isUndefined(fieldValue)) {\n            return new FSharpResult$2(0, void 0);\n        }\n        else {\n            return decodeMaybeNull((path + \".\") + fieldName, decoder, fieldValue);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(2, \"an object\", value_1)]);\n    }\n}\n\nfunction badPathError(fieldNames, currentPath, value_1) {\n    return new FSharpResult$2(1, [defaultArg(currentPath, join(\".\", cons(\"$\", fieldNames))), new ErrorReason(4, (\"an object with path `\" + join(\".\", fieldNames)) + \"`\", value_1, defaultArg(tryLast(fieldNames), \"\"))]);\n}\n\nexport function optionalAt(fieldNames, decoder, firstPath, firstValue) {\n    const _arg1 = fold(uncurry(2, (tupledArg) => {\n        const curPath = tupledArg[0];\n        const curValue = tupledArg[1];\n        const res = tupledArg[2];\n        return (field_1) => ((res == null) ? ((curValue == null) ? [curPath, curValue, new FSharpResult$2(0, void 0)] : ((curValue === null ? false : (Object.getPrototypeOf(curValue || false) === Object.prototype)) ? [(curPath + \".\") + field_1, curValue[field_1], void 0] : [curPath, curValue, new FSharpResult$2(1, [curPath, new ErrorReason(2, \"an object\", curValue)])])) : [curPath, curValue, res]);\n    }), [firstPath, firstValue, void 0], fieldNames);\n    if (_arg1[2] == null) {\n        const lastValue = _arg1[1];\n        if (Helpers_isUndefined(lastValue)) {\n            return new FSharpResult$2(0, void 0);\n        }\n        else {\n            return decodeMaybeNull(_arg1[0], decoder, lastValue);\n        }\n    }\n    else {\n        return _arg1[2];\n    }\n}\n\nexport function field(fieldName, decoder, path, value_1) {\n    if (value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype)) {\n        const fieldValue = value_1[fieldName];\n        if (Helpers_isUndefined(fieldValue)) {\n            return new FSharpResult$2(1, [path, new ErrorReason(3, (\"an object with a field named `\" + fieldName) + \"`\", value_1)]);\n        }\n        else {\n            return decoder((path + \".\") + fieldName, fieldValue);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(2, \"an object\", value_1)]);\n    }\n}\n\nexport function at(fieldNames, decoder, firstPath, firstValue) {\n    const _arg1 = fold(uncurry(2, (tupledArg) => {\n        const curPath = tupledArg[0];\n        const curValue = tupledArg[1];\n        const res = tupledArg[2];\n        return (field_1) => {\n            if (res == null) {\n                if (curValue == null) {\n                    return [curPath, curValue, badPathError(fieldNames, curPath, firstValue)];\n                }\n                else if (curValue === null ? false : (Object.getPrototypeOf(curValue || false) === Object.prototype)) {\n                    const curValue_1 = curValue[field_1];\n                    return Helpers_isUndefined(curValue_1) ? [curPath, curValue_1, badPathError(fieldNames, void 0, firstValue)] : [(curPath + \".\") + field_1, curValue_1, void 0];\n                }\n                else {\n                    return [curPath, curValue, new FSharpResult$2(1, [curPath, new ErrorReason(2, \"an object\", curValue)])];\n                }\n            }\n            else {\n                return [curPath, curValue, res];\n            }\n        };\n    }), [firstPath, firstValue, void 0], fieldNames);\n    if (_arg1[2] == null) {\n        return decoder(_arg1[0], _arg1[1]);\n    }\n    else {\n        return _arg1[2];\n    }\n}\n\nexport function index(requestedIndex, decoder, path, value_1) {\n    let copyOfStruct;\n    const currentPath = ((path + \".[\") + int32ToString(requestedIndex)) + \"]\";\n    if (Array.isArray(value_1)) {\n        const vArray = value_1;\n        if (requestedIndex < vArray.length) {\n            return decoder(currentPath, vArray[requestedIndex]);\n        }\n        else {\n            return new FSharpResult$2(1, [currentPath, new ErrorReason(5, (((\"a longer array. Need index `\" + int32ToString(requestedIndex)) + \"` but there are only `\") + ((copyOfStruct = vArray.length, int32ToString(copyOfStruct)))) + \"` entries\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [currentPath, new ErrorReason(0, \"an array\", value_1)]);\n    }\n}\n\nexport function option(decoder, path, value_1) {\n    if (value_1 == null) {\n        return new FSharpResult$2(0, void 0);\n    }\n    else {\n        return Result_Map((arg0) => some(arg0), decoder(path, value_1));\n    }\n}\n\nexport function list(decoder, path, value_1) {\n    if (Array.isArray(value_1)) {\n        let i = -1;\n        return Result_Map((list_1) => reverse(list_1), fold_1((acc, value_2) => {\n            i = ((i + 1) | 0);\n            if (acc.tag === 0) {\n                const matchValue = decoder(((path + \".[\") + int32ToString(i)) + \"]\", value_2);\n                if (matchValue.tag === 0) {\n                    return new FSharpResult$2(0, cons(matchValue.fields[0], acc.fields[0]));\n                }\n                else {\n                    return new FSharpResult$2(1, matchValue.fields[0]);\n                }\n            }\n            else {\n                return acc;\n            }\n        }, new FSharpResult$2(0, empty()), value_1));\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a list\", value_1)]);\n    }\n}\n\nexport function seq(decoder, path, value_1) {\n    if (Array.isArray(value_1)) {\n        let i = -1;\n        return Result_Map((source) => reverse_1(source), fold_1((acc, value_2) => {\n            i = ((i + 1) | 0);\n            if (acc.tag === 0) {\n                const matchValue = decoder(((path + \".[\") + int32ToString(i)) + \"]\", value_2);\n                if (matchValue.tag === 0) {\n                    return new FSharpResult$2(0, append([matchValue.fields[0]], acc.fields[0]));\n                }\n                else {\n                    return new FSharpResult$2(1, matchValue.fields[0]);\n                }\n            }\n            else {\n                return acc;\n            }\n        }, new FSharpResult$2(0, []), value_1));\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a seq\", value_1)]);\n    }\n}\n\nexport function array(decoder, path, value_1) {\n    if (Array.isArray(value_1)) {\n        let i = -1;\n        const tokens = value_1;\n        return fold_1((acc, value_2) => {\n            i = ((i + 1) | 0);\n            if (acc.tag === 0) {\n                const acc_1 = acc.fields[0];\n                const matchValue = decoder(((path + \".[\") + int32ToString(i)) + \"]\", value_2);\n                if (matchValue.tag === 0) {\n                    acc_1[i] = matchValue.fields[0];\n                    return new FSharpResult$2(0, acc_1);\n                }\n                else {\n                    return new FSharpResult$2(1, matchValue.fields[0]);\n                }\n            }\n            else {\n                return acc;\n            }\n        }, new FSharpResult$2(0, fill(new Array(tokens.length), 0, tokens.length, null)), tokens);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"an array\", value_1)]);\n    }\n}\n\nexport function keys(path, value_1) {\n    if (value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype)) {\n        return new FSharpResult$2(0, ofSeq(Object.keys(value_1)));\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"an object\", value_1)]);\n    }\n}\n\nexport function keyValuePairs(decoder, path, value_1) {\n    const matchValue = keys(path, value_1);\n    if (matchValue.tag === 1) {\n        return new FSharpResult$2(1, matchValue.fields[0]);\n    }\n    else {\n        return Result_Map((list_2) => reverse(list_2), fold((acc, prop) => {\n            if (acc.tag === 0) {\n                const matchValue_1 = decoder(path, value_1[prop]);\n                if (matchValue_1.tag === 0) {\n                    return new FSharpResult$2(0, cons([prop, matchValue_1.fields[0]], acc.fields[0]));\n                }\n                else {\n                    return new FSharpResult$2(1, matchValue_1.fields[0]);\n                }\n            }\n            else {\n                return acc;\n            }\n        }, new FSharpResult$2(0, empty()), matchValue.fields[0]));\n    }\n}\n\nexport function oneOf(decoders, path, value_1) {\n    const runner = (decoders_1_mut, errors_mut) => {\n        runner:\n        while (true) {\n            const decoders_1 = decoders_1_mut, errors = errors_mut;\n            if (isEmpty(decoders_1)) {\n                return new FSharpResult$2(1, [path, new ErrorReason(7, errors)]);\n            }\n            else {\n                const matchValue = fromValue(path, uncurry(2, head_1(decoders_1)), value_1);\n                if (matchValue.tag === 1) {\n                    decoders_1_mut = tail_1(decoders_1);\n                    errors_mut = append_1(errors, singleton(matchValue.fields[0]));\n                    continue runner;\n                }\n                else {\n                    return new FSharpResult$2(0, matchValue.fields[0]);\n                }\n            }\n            break;\n        }\n    };\n    return runner(decoders, empty());\n}\n\nexport function nil(output, path, value_1) {\n    if (value_1 == null) {\n        return new FSharpResult$2(0, output);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"null\", value_1)]);\n    }\n}\n\nexport function value(_arg1, v) {\n    return new FSharpResult$2(0, v);\n}\n\nexport function succeed(output, _arg2, _arg1) {\n    return new FSharpResult$2(0, output);\n}\n\nexport function fail(msg, path, _arg1) {\n    return new FSharpResult$2(1, [path, new ErrorReason(6, msg)]);\n}\n\nexport function andThen(cb, decoder, path, value_1) {\n    const matchValue = decoder(path, value_1);\n    if (matchValue.tag === 0) {\n        return cb(matchValue.fields[0], path, value_1);\n    }\n    else {\n        return new FSharpResult$2(1, matchValue.fields[0]);\n    }\n}\n\nexport function all(decoders, path, value_1) {\n    const runner = (decoders_1_mut, values_mut) => {\n        runner:\n        while (true) {\n            const decoders_1 = decoders_1_mut, values = values_mut;\n            if (isEmpty(decoders_1)) {\n                return new FSharpResult$2(0, values);\n            }\n            else {\n                const matchValue = head_1(decoders_1)(path)(value_1);\n                if (matchValue.tag === 1) {\n                    return new FSharpResult$2(1, matchValue.fields[0]);\n                }\n                else {\n                    decoders_1_mut = tail_1(decoders_1);\n                    values_mut = append_1(values, singleton(matchValue.fields[0]));\n                    continue runner;\n                }\n            }\n            break;\n        }\n    };\n    return runner(decoders, empty());\n}\n\nexport function map(ctor, d1, path, value_1) {\n    const matchValue = d1(path, value_1);\n    if (matchValue.tag === 1) {\n        return new FSharpResult$2(1, matchValue.fields[0]);\n    }\n    else {\n        return new FSharpResult$2(0, ctor(matchValue.fields[0]));\n    }\n}\n\nexport function map2(ctor, d1, d2, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0]));\n        }\n    }\n}\n\nexport function map3(ctor, d1, d2, d3, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0]));\n            }\n        }\n    }\n}\n\nexport function map4(ctor, d1, d2, d3, d4, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                const copyOfStruct_3 = matchValue[3];\n                if (copyOfStruct_3.tag === 1) {\n                    return new FSharpResult$2(1, copyOfStruct_3.fields[0]);\n                }\n                else {\n                    return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0]));\n                }\n            }\n        }\n    }\n}\n\nexport function map5(ctor, d1, d2, d3, d4, d5, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1), d5(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                const copyOfStruct_3 = matchValue[3];\n                if (copyOfStruct_3.tag === 1) {\n                    return new FSharpResult$2(1, copyOfStruct_3.fields[0]);\n                }\n                else {\n                    const copyOfStruct_4 = matchValue[4];\n                    if (copyOfStruct_4.tag === 1) {\n                        return new FSharpResult$2(1, copyOfStruct_4.fields[0]);\n                    }\n                    else {\n                        return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0], copyOfStruct_4.fields[0]));\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function map6(ctor, d1, d2, d3, d4, d5, d6, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1), d5(path, value_1), d6(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                const copyOfStruct_3 = matchValue[3];\n                if (copyOfStruct_3.tag === 1) {\n                    return new FSharpResult$2(1, copyOfStruct_3.fields[0]);\n                }\n                else {\n                    const copyOfStruct_4 = matchValue[4];\n                    if (copyOfStruct_4.tag === 1) {\n                        return new FSharpResult$2(1, copyOfStruct_4.fields[0]);\n                    }\n                    else {\n                        const copyOfStruct_5 = matchValue[5];\n                        if (copyOfStruct_5.tag === 1) {\n                            return new FSharpResult$2(1, copyOfStruct_5.fields[0]);\n                        }\n                        else {\n                            return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0], copyOfStruct_4.fields[0], copyOfStruct_5.fields[0]));\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function map7(ctor, d1, d2, d3, d4, d5, d6, d7, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1), d5(path, value_1), d6(path, value_1), d7(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                const copyOfStruct_3 = matchValue[3];\n                if (copyOfStruct_3.tag === 1) {\n                    return new FSharpResult$2(1, copyOfStruct_3.fields[0]);\n                }\n                else {\n                    const copyOfStruct_4 = matchValue[4];\n                    if (copyOfStruct_4.tag === 1) {\n                        return new FSharpResult$2(1, copyOfStruct_4.fields[0]);\n                    }\n                    else {\n                        const copyOfStruct_5 = matchValue[5];\n                        if (copyOfStruct_5.tag === 1) {\n                            return new FSharpResult$2(1, copyOfStruct_5.fields[0]);\n                        }\n                        else {\n                            const copyOfStruct_6 = matchValue[6];\n                            if (copyOfStruct_6.tag === 1) {\n                                return new FSharpResult$2(1, copyOfStruct_6.fields[0]);\n                            }\n                            else {\n                                return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0], copyOfStruct_4.fields[0], copyOfStruct_5.fields[0], copyOfStruct_6.fields[0]));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function map8(ctor, d1, d2, d3, d4, d5, d6, d7, d8, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1), d5(path, value_1), d6(path, value_1), d7(path, value_1), d8(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                const copyOfStruct_3 = matchValue[3];\n                if (copyOfStruct_3.tag === 1) {\n                    return new FSharpResult$2(1, copyOfStruct_3.fields[0]);\n                }\n                else {\n                    const copyOfStruct_4 = matchValue[4];\n                    if (copyOfStruct_4.tag === 1) {\n                        return new FSharpResult$2(1, copyOfStruct_4.fields[0]);\n                    }\n                    else {\n                        const copyOfStruct_5 = matchValue[5];\n                        if (copyOfStruct_5.tag === 1) {\n                            return new FSharpResult$2(1, copyOfStruct_5.fields[0]);\n                        }\n                        else {\n                            const copyOfStruct_6 = matchValue[6];\n                            if (copyOfStruct_6.tag === 1) {\n                                return new FSharpResult$2(1, copyOfStruct_6.fields[0]);\n                            }\n                            else {\n                                const copyOfStruct_7 = matchValue[7];\n                                if (copyOfStruct_7.tag === 1) {\n                                    return new FSharpResult$2(1, copyOfStruct_7.fields[0]);\n                                }\n                                else {\n                                    return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0], copyOfStruct_4.fields[0], copyOfStruct_5.fields[0], copyOfStruct_6.fields[0], copyOfStruct_7.fields[0]));\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function dict(decoder) {\n    let d1;\n    const decoder_1 = decoder;\n    d1 = ((path) => ((value_1) => keyValuePairs(decoder_1, path, value_1)));\n    return (path_1) => ((value_2) => map((elements) => ofList(elements), uncurry(2, d1), path_1, value_2));\n}\n\nfunction unwrapWith(errors, path, decoder, value_1) {\n    const matchValue = decoder(path, value_1);\n    if (matchValue.tag === 1) {\n        void (errors.push(matchValue.fields[0]));\n        return null;\n    }\n    else {\n        return matchValue.fields[0];\n    }\n}\n\nexport class Getters$1 {\n    constructor(path, v) {\n        let _this, _this_1;\n        this.errors = [];\n        this.required = ((_this = this, {\n            Field(fieldName, decoder) {\n                return unwrapWith(_this.errors, path, (path_1, value_1) => field(fieldName, decoder, path_1, value_1), v);\n            },\n            At(fieldNames, decoder_2) {\n                return unwrapWith(_this.errors, path, (firstPath, firstValue) => at(fieldNames, decoder_2, firstPath, firstValue), v);\n            },\n            Raw(decoder_4) {\n                return unwrapWith(_this.errors, path, decoder_4, v);\n            },\n        }));\n        this.optional = ((_this_1 = this, {\n            Field(fieldName_1, decoder_5) {\n                return unwrapWith(_this_1.errors, path, (path_2, value_2) => optional(fieldName_1, decoder_5, path_2, value_2), v);\n            },\n            At(fieldNames_1, decoder_7) {\n                return unwrapWith(_this_1.errors, path, (firstPath_1, firstValue_1) => optionalAt(fieldNames_1, decoder_7, firstPath_1, firstValue_1), v);\n            },\n            Raw(decoder_9) {\n                const matchValue = decoder_9(path, v);\n                if (matchValue.tag === 1) {\n                    const reason = matchValue.fields[0][1];\n                    const error = matchValue.fields[0];\n                    let pattern_matching_result, v_2;\n                    switch (reason.tag) {\n                        case 1: {\n                            pattern_matching_result = 0;\n                            v_2 = reason.fields[1];\n                            break;\n                        }\n                        case 2: {\n                            pattern_matching_result = 0;\n                            v_2 = reason.fields[1];\n                            break;\n                        }\n                        case 3:\n                        case 4: {\n                            pattern_matching_result = 1;\n                            break;\n                        }\n                        case 5:\n                        case 6:\n                        case 7: {\n                            pattern_matching_result = 2;\n                            break;\n                        }\n                        default: {\n                            pattern_matching_result = 0;\n                            v_2 = reason.fields[1];\n                        }\n                    }\n                    switch (pattern_matching_result) {\n                        case 0: {\n                            if (v_2 == null) {\n                                return void 0;\n                            }\n                            else {\n                                void (_this_1.errors.push(error));\n                                return null;\n                            }\n                        }\n                        case 1: {\n                            return void 0;\n                        }\n                        case 2: {\n                            void (_this_1.errors.push(error));\n                            return null;\n                        }\n                    }\n                }\n                else {\n                    return some(matchValue.fields[0]);\n                }\n            },\n        }));\n    }\n    get Required() {\n        const __ = this;\n        return __.required;\n    }\n    get Optional() {\n        const __ = this;\n        return __.optional;\n    }\n}\n\nexport function Getters$1$reflection(gen0) {\n    return class_type(\"Thoth.Json.Decode.Getters`1\", [gen0], Getters$1);\n}\n\nexport function Getters$1_$ctor_4A51B60E(path, v) {\n    return new Getters$1(path, v);\n}\n\nexport function Getters$1__get_Errors(__) {\n    return toList(__.errors);\n}\n\nexport function object(builder, path, v) {\n    const getters = Getters$1_$ctor_4A51B60E(path, v);\n    const result = builder(getters);\n    const matchValue = Getters$1__get_Errors(getters);\n    if (!isEmpty(matchValue)) {\n        const errors = matchValue;\n        if (length(errors) > 1) {\n            return new FSharpResult$2(1, [path, new ErrorReason(7, map_1((tupledArg) => errorToString(tupledArg[0], tupledArg[1]), errors))]);\n        }\n        else {\n            return new FSharpResult$2(1, head_1(matchValue));\n        }\n    }\n    else {\n        return new FSharpResult$2(0, result);\n    }\n}\n\nexport function tuple2(decoder1, decoder2) {\n    let decoder_3;\n    const decoder = decoder1;\n    decoder_3 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_3) => ((value_4) => andThen(uncurry(3, (v1) => {\n        let decoder_2;\n        const decoder_1 = decoder2;\n        decoder_2 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_2) => ((value_3) => andThen((v2, arg10$0040, arg20$0040) => succeed([v1, v2], arg10$0040, arg20$0040), uncurry(2, decoder_2), path_2, value_3));\n    }), uncurry(2, decoder_3), path_3, value_4));\n}\n\nexport function tuple3(decoder1, decoder2, decoder3) {\n    let decoder_5;\n    const decoder = decoder1;\n    decoder_5 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_5) => ((value_6) => andThen(uncurry(3, (v1) => {\n        let decoder_4;\n        const decoder_1 = decoder2;\n        decoder_4 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_4) => ((value_5) => andThen(uncurry(3, (v2) => {\n            let decoder_3;\n            const decoder_2 = decoder3;\n            decoder_3 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_3) => ((value_4) => andThen((v3, arg10$0040, arg20$0040) => succeed([v1, v2, v3], arg10$0040, arg20$0040), uncurry(2, decoder_3), path_3, value_4));\n        }), uncurry(2, decoder_4), path_4, value_5));\n    }), uncurry(2, decoder_5), path_5, value_6));\n}\n\nexport function tuple4(decoder1, decoder2, decoder3, decoder4) {\n    let decoder_7;\n    const decoder = decoder1;\n    decoder_7 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_7) => ((value_8) => andThen(uncurry(3, (v1) => {\n        let decoder_6;\n        const decoder_1 = decoder2;\n        decoder_6 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_6) => ((value_7) => andThen(uncurry(3, (v2) => {\n            let decoder_5;\n            const decoder_2 = decoder3;\n            decoder_5 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_5) => ((value_6) => andThen(uncurry(3, (v3) => {\n                let decoder_4;\n                const decoder_3 = decoder4;\n                decoder_4 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\n                return (path_4) => ((value_5) => andThen((v4, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4], arg10$0040, arg20$0040), uncurry(2, decoder_4), path_4, value_5));\n            }), uncurry(2, decoder_5), path_5, value_6));\n        }), uncurry(2, decoder_6), path_6, value_7));\n    }), uncurry(2, decoder_7), path_7, value_8));\n}\n\nexport function tuple5(decoder1, decoder2, decoder3, decoder4, decoder5) {\n    let decoder_9;\n    const decoder = decoder1;\n    decoder_9 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_9) => ((value_10) => andThen(uncurry(3, (v1) => {\n        let decoder_8;\n        const decoder_1 = decoder2;\n        decoder_8 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_8) => ((value_9) => andThen(uncurry(3, (v2) => {\n            let decoder_7;\n            const decoder_2 = decoder3;\n            decoder_7 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_7) => ((value_8) => andThen(uncurry(3, (v3) => {\n                let decoder_6;\n                const decoder_3 = decoder4;\n                decoder_6 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\n                return (path_6) => ((value_7) => andThen(uncurry(3, (v4) => {\n                    let decoder_5;\n                    const decoder_4 = decoder5;\n                    decoder_5 = ((path_4) => ((value_5) => index(4, decoder_4, path_4, value_5)));\n                    return (path_5) => ((value_6) => andThen((v5, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4, v5], arg10$0040, arg20$0040), uncurry(2, decoder_5), path_5, value_6));\n                }), uncurry(2, decoder_6), path_6, value_7));\n            }), uncurry(2, decoder_7), path_7, value_8));\n        }), uncurry(2, decoder_8), path_8, value_9));\n    }), uncurry(2, decoder_9), path_9, value_10));\n}\n\nexport function tuple6(decoder1, decoder2, decoder3, decoder4, decoder5, decoder6) {\n    let decoder_11;\n    const decoder = decoder1;\n    decoder_11 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_11) => ((value_12) => andThen(uncurry(3, (v1) => {\n        let decoder_10;\n        const decoder_1 = decoder2;\n        decoder_10 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_10) => ((value_11) => andThen(uncurry(3, (v2) => {\n            let decoder_9;\n            const decoder_2 = decoder3;\n            decoder_9 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_9) => ((value_10) => andThen(uncurry(3, (v3) => {\n                let decoder_8;\n                const decoder_3 = decoder4;\n                decoder_8 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\n                return (path_8) => ((value_9) => andThen(uncurry(3, (v4) => {\n                    let decoder_7;\n                    const decoder_4 = decoder5;\n                    decoder_7 = ((path_4) => ((value_5) => index(4, decoder_4, path_4, value_5)));\n                    return (path_7) => ((value_8) => andThen(uncurry(3, (v5) => {\n                        let decoder_6;\n                        const decoder_5 = decoder6;\n                        decoder_6 = ((path_5) => ((value_6) => index(5, decoder_5, path_5, value_6)));\n                        return (path_6) => ((value_7) => andThen((v6, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4, v5, v6], arg10$0040, arg20$0040), uncurry(2, decoder_6), path_6, value_7));\n                    }), uncurry(2, decoder_7), path_7, value_8));\n                }), uncurry(2, decoder_8), path_8, value_9));\n            }), uncurry(2, decoder_9), path_9, value_10));\n        }), uncurry(2, decoder_10), path_10, value_11));\n    }), uncurry(2, decoder_11), path_11, value_12));\n}\n\nexport function tuple7(decoder1, decoder2, decoder3, decoder4, decoder5, decoder6, decoder7) {\n    let decoder_13;\n    const decoder = decoder1;\n    decoder_13 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_13) => ((value_14) => andThen(uncurry(3, (v1) => {\n        let decoder_12;\n        const decoder_1 = decoder2;\n        decoder_12 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_12) => ((value_13) => andThen(uncurry(3, (v2) => {\n            let decoder_11;\n            const decoder_2 = decoder3;\n            decoder_11 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_11) => ((value_12) => andThen(uncurry(3, (v3) => {\n                let decoder_10;\n                const decoder_3 = decoder4;\n                decoder_10 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\n                return (path_10) => ((value_11) => andThen(uncurry(3, (v4) => {\n                    let decoder_9;\n                    const decoder_4 = decoder5;\n                    decoder_9 = ((path_4) => ((value_5) => index(4, decoder_4, path_4, value_5)));\n                    return (path_9) => ((value_10) => andThen(uncurry(3, (v5) => {\n                        let decoder_8;\n                        const decoder_5 = decoder6;\n                        decoder_8 = ((path_5) => ((value_6) => index(5, decoder_5, path_5, value_6)));\n                        return (path_8) => ((value_9) => andThen(uncurry(3, (v6) => {\n                            let decoder_7;\n                            const decoder_6 = decoder7;\n                            decoder_7 = ((path_6) => ((value_7) => index(6, decoder_6, path_6, value_7)));\n                            return (path_7) => ((value_8) => andThen((v7, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4, v5, v6, v7], arg10$0040, arg20$0040), uncurry(2, decoder_7), path_7, value_8));\n                        }), uncurry(2, decoder_8), path_8, value_9));\n                    }), uncurry(2, decoder_9), path_9, value_10));\n                }), uncurry(2, decoder_10), path_10, value_11));\n            }), uncurry(2, decoder_11), path_11, value_12));\n        }), uncurry(2, decoder_12), path_12, value_13));\n    }), uncurry(2, decoder_13), path_13, value_14));\n}\n\nexport function tuple8(decoder1, decoder2, decoder3, decoder4, decoder5, decoder6, decoder7, decoder8) {\n    let decoder_15;\n    const decoder = decoder1;\n    decoder_15 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_15) => ((value_16) => andThen(uncurry(3, (v1) => {\n        let decoder_14;\n        const decoder_1 = decoder2;\n        decoder_14 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_14) => ((value_15) => andThen(uncurry(3, (v2) => {\n            let decoder_13;\n            const decoder_2 = decoder3;\n            decoder_13 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_13) => ((value_14) => andThen(uncurry(3, (v3) => {\n                let decoder_12;\n                const decoder_3 = decoder4;\n                decoder_12 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\n                return (path_12) => ((value_13) => andThen(uncurry(3, (v4) => {\n                    let decoder_11;\n                    const decoder_4 = decoder5;\n                    decoder_11 = ((path_4) => ((value_5) => index(4, decoder_4, path_4, value_5)));\n                    return (path_11) => ((value_12) => andThen(uncurry(3, (v5) => {\n                        let decoder_10;\n                        const decoder_5 = decoder6;\n                        decoder_10 = ((path_5) => ((value_6) => index(5, decoder_5, path_5, value_6)));\n                        return (path_10) => ((value_11) => andThen(uncurry(3, (v6) => {\n                            let decoder_9;\n                            const decoder_6 = decoder7;\n                            decoder_9 = ((path_6) => ((value_7) => index(6, decoder_6, path_6, value_7)));\n                            return (path_9) => ((value_10) => andThen(uncurry(3, (v7) => {\n                                let decoder_8;\n                                const decoder_7 = decoder8;\n                                decoder_8 = ((path_7) => ((value_8) => index(7, decoder_7, path_7, value_8)));\n                                return (path_8) => ((value_9) => andThen((v8, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4, v5, v6, v7, v8], arg10$0040, arg20$0040), uncurry(2, decoder_8), path_8, value_9));\n                            }), uncurry(2, decoder_9), path_9, value_10));\n                        }), uncurry(2, decoder_10), path_10, value_11));\n                    }), uncurry(2, decoder_11), path_11, value_12));\n                }), uncurry(2, decoder_12), path_12, value_13));\n            }), uncurry(2, decoder_13), path_13, value_14));\n        }), uncurry(2, decoder_14), path_14, value_15));\n    }), uncurry(2, decoder_15), path_15, value_16));\n}\n\nfunction toMap(xs) {\n    return ofSeq_1(xs);\n}\n\nfunction toSet(xs) {\n    return ofSeq_2(xs, {\n        Compare: (x, y) => compare(x, y),\n    });\n}\n\nfunction autoObject(decoderInfos, path, value_1) {\n    if (!(value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype))) {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"an object\", value_1)]);\n    }\n    else {\n        return foldBack(uncurry(2, (tupledArg) => {\n            const name = tupledArg[0];\n            return (acc) => ((acc.tag === 0) ? Result_Map((v) => cons(v, acc.fields[0]), tupledArg[1]((path + \".\") + name)(value_1[name])) : acc);\n        }), decoderInfos, new FSharpResult$2(0, empty()));\n    }\n}\n\nfunction autoObject2(keyDecoder, valueDecoder, path, value_1) {\n    if (!(value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype))) {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"an object\", value_1)]);\n    }\n    else {\n        return fold_2((acc, name) => {\n            if (acc.tag === 0) {\n                const matchValue = keyDecoder(path, name);\n                if (matchValue.tag === 0) {\n                    const _arg1 = valueDecoder((path + \".\") + name, value_1[name]);\n                    if (_arg1.tag === 0) {\n                        return new FSharpResult$2(0, cons([matchValue.fields[0], _arg1.fields[0]], acc.fields[0]));\n                    }\n                    else {\n                        return new FSharpResult$2(1, _arg1.fields[0]);\n                    }\n                }\n                else {\n                    return new FSharpResult$2(1, matchValue.fields[0]);\n                }\n            }\n            else {\n                return acc;\n            }\n        }, new FSharpResult$2(0, empty()), Object.keys(value_1));\n    }\n}\n\nfunction mixedArray(msg, decoders, path, values) {\n    let arg30, arg10;\n    if (decoders.length !== values.length) {\n        return new FSharpResult$2(1, [path, new ErrorReason(6, (arg30 = (values.length | 0), (arg10 = (decoders.length | 0), toText(printf(\"Expected %i %s but got %i\"))(arg10)(msg)(arg30))))]);\n    }\n    else {\n        return foldBack2(uncurry(3, mapCurriedArgs((value_1) => ((decoder) => ((acc) => ((acc.tag === 0) ? Result_Map((v) => cons(v, acc.fields[0]), decoder(path, value_1)) : acc))), [0, [0, 2], 0])), values, decoders, new FSharpResult$2(0, empty()));\n    }\n}\n\nfunction makeUnion(extra, caseStrategy, t, name, path, values) {\n    const uci = tryFind((x) => (name_3(x) === name), getUnionCases(t, true));\n    if (uci != null) {\n        const uci_1 = uci;\n        if (values.length === 0) {\n            return new FSharpResult$2(0, makeUnion_1(uci_1, [], true));\n        }\n        else {\n            return Result_Map((values_1) => makeUnion_1(uci_1, toArray(values_1), true), mixedArray(\"union fields\", map_2((fi) => autoDecoder(extra, caseStrategy, false, fi[1]), getUnionCaseFields(uci_1)), path, values));\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(6, ((\"Cannot find case \" + name) + \" in \") + fullName(t))]);\n    }\n}\n\nfunction autoDecodeRecordsAndUnions(extra, caseStrategy, isOptional, t) {\n    const decoderRef = new FSharpRef(null);\n    const extra_1 = add(fullName(t), decoderRef, extra);\n    let decoder;\n    if (isRecord(t, true)) {\n        const decoders = map_2((fi) => [Util_Casing_convert(caseStrategy, name_3(fi)), autoDecoder(extra_1, caseStrategy, false, fi[1])], getRecordElements(t, true));\n        decoder = ((path) => ((value_1) => Result_Map((xs) => makeRecord(t, toArray(xs), true), autoObject(decoders, path, value_1))));\n    }\n    else if (isUnion(t, true)) {\n        decoder = ((path_1) => ((value_2) => {\n            if ((typeof value_2) === \"string\") {\n                return makeUnion(extra_1, caseStrategy, t, value_2, path_1, []);\n            }\n            else if (Array.isArray(value_2)) {\n                const values = value_2;\n                return makeUnion(extra_1, caseStrategy, t, values[0], path_1, values.slice(1, values.length));\n            }\n            else {\n                return new FSharpResult$2(1, [path_1, new ErrorReason(0, \"a string or array\", value_2)]);\n            }\n        }));\n    }\n    else if (isOptional) {\n        decoder = ((path_2) => ((value_3) => (new FSharpResult$2(1, [path_2, new ErrorReason(2, \"an extra coder for \" + fullName(t), value_3)]))));\n    }\n    else {\n        let message;\n        const arg10 = fullName(t);\n        message = toText(printf(\"Cannot generate auto decoder for %s. Please pass an extra decoder.\"))(arg10);\n        throw (new Error(message));\n    }\n    decoderRef.contents = decoder;\n    return decoder;\n}\n\nfunction autoDecoder(extra, caseStrategy, isOptional, t) {\n    let decoder_15;\n    const fullname = fullName(t);\n    const matchValue = tryFind_1(fullname, extra);\n    if (matchValue == null) {\n        if (isArray(t)) {\n            const decoder = autoDecoder(extra, caseStrategy, false, getElementType(t));\n            return (path_1) => ((value_2) => array(uncurry(2, decoder), path_1, value_2));\n        }\n        else if (isEnum(t)) {\n            const enumType = fullName(getEnumUnderlyingType(t));\n            if (enumType === \"System.SByte\") {\n                return (path_2) => ((value_4) => {\n                    const t_2 = t;\n                    const path_3 = path_2;\n                    const value_5 = value_4;\n                    const matchValue_1 = sbyte(path_3)(value_5);\n                    if (matchValue_1.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_1.fields[0]);\n                    }\n                    else {\n                        const enumValue = matchValue_1.fields[0];\n                        return contains(enumValue, getEnumValues(t_2), {\n                            Equals: (x, y) => (x === y),\n                            GetHashCode: (x) => numberHash(x),\n                        }) ? (new FSharpResult$2(0, parseEnum(t_2, enumValue.toString()))) : (new FSharpResult$2(1, [path_3, new ErrorReason(1, fullName(t_2), value_5, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else if (enumType === \"System.Byte\") {\n                return (path_4) => ((value_7) => {\n                    const t_3 = t;\n                    const path_5 = path_4;\n                    const value_8 = value_7;\n                    const matchValue_2 = byte(path_5)(value_8);\n                    if (matchValue_2.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_2.fields[0]);\n                    }\n                    else {\n                        const enumValue_1 = matchValue_2.fields[0];\n                        return contains(enumValue_1, getEnumValues(t_3), {\n                            Equals: (x_1, y_1) => (x_1 === y_1),\n                            GetHashCode: (x_1) => numberHash(x_1),\n                        }) ? (new FSharpResult$2(0, parseEnum(t_3, enumValue_1.toString()))) : (new FSharpResult$2(1, [path_5, new ErrorReason(1, fullName(t_3), value_8, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else if (enumType === \"System.Int16\") {\n                return (path_6) => ((value_10) => {\n                    const t_4 = t;\n                    const path_7 = path_6;\n                    const value_11 = value_10;\n                    const matchValue_3 = int16(path_7)(value_11);\n                    if (matchValue_3.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_3.fields[0]);\n                    }\n                    else {\n                        const enumValue_2 = matchValue_3.fields[0];\n                        return contains(enumValue_2, getEnumValues(t_4), {\n                            Equals: (x_2, y_2) => (x_2 === y_2),\n                            GetHashCode: (x_2) => numberHash(x_2),\n                        }) ? (new FSharpResult$2(0, parseEnum(t_4, int16ToString(enumValue_2)))) : (new FSharpResult$2(1, [path_7, new ErrorReason(1, fullName(t_4), value_11, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else if (enumType === \"System.UInt16\") {\n                return (path_8) => ((value_13) => {\n                    const t_5 = t;\n                    const path_9 = path_8;\n                    const value_14 = value_13;\n                    const matchValue_4 = uint16(path_9)(value_14);\n                    if (matchValue_4.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_4.fields[0]);\n                    }\n                    else {\n                        const enumValue_3 = matchValue_4.fields[0];\n                        return contains(enumValue_3, getEnumValues(t_5), {\n                            Equals: (x_3, y_3) => (x_3 === y_3),\n                            GetHashCode: (x_3) => numberHash(x_3),\n                        }) ? (new FSharpResult$2(0, parseEnum(t_5, enumValue_3.toString()))) : (new FSharpResult$2(1, [path_9, new ErrorReason(1, fullName(t_5), value_14, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else if (enumType === \"System.Int32\") {\n                return (path_10) => ((value_16) => {\n                    const t_6 = t;\n                    const path_11 = path_10;\n                    const value_17 = value_16;\n                    const matchValue_5 = int(path_11)(value_17);\n                    if (matchValue_5.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_5.fields[0]);\n                    }\n                    else {\n                        const enumValue_4 = matchValue_5.fields[0];\n                        return contains(enumValue_4, getEnumValues(t_6), {\n                            Equals: (x_4, y_4) => (x_4 === y_4),\n                            GetHashCode: (x_4) => numberHash(x_4),\n                        }) ? (new FSharpResult$2(0, parseEnum(t_6, int32ToString(enumValue_4)))) : (new FSharpResult$2(1, [path_11, new ErrorReason(1, fullName(t_6), value_17, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else if (enumType === \"System.UInt32\") {\n                return (path_12) => ((value_19) => {\n                    const t_7 = t;\n                    const path_13 = path_12;\n                    const value_20 = value_19;\n                    const matchValue_6 = uint32(path_13)(value_20);\n                    if (matchValue_6.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_6.fields[0]);\n                    }\n                    else {\n                        const enumValue_5 = matchValue_6.fields[0];\n                        return contains(enumValue_5, getEnumValues(t_7), {\n                            Equals: (x_5, y_5) => (x_5 === y_5),\n                            GetHashCode: (x_5) => numberHash(x_5),\n                        }) ? (new FSharpResult$2(0, parseEnum(t_7, enumValue_5.toString()))) : (new FSharpResult$2(1, [path_13, new ErrorReason(1, fullName(t_7), value_20, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else {\n                const arg10 = fullName(t);\n                const clo2 = toFail(printf(\"Cannot generate auto decoder for %s.\\nThoth.Json.Net only support the folluwing enum types:\\n- sbyte\\n- byte\\n- int16\\n- uint16\\n- int\\n- uint32\\nIf you can\\u0027t use one of these types, please pass an extra decoder.\\n                    \"))(arg10);\n                return (arg20) => {\n                    const clo3 = clo2(arg20);\n                    return (arg30) => clo3(arg30);\n                };\n            }\n        }\n        else if (isGenericType(t)) {\n            if (isTuple(t)) {\n                const decoders = map_2((t_8) => autoDecoder(extra, caseStrategy, false, t_8), getTupleElements(t));\n                return (path_14) => ((value_21) => (Array.isArray(value_21) ? Result_Map((xs) => makeTuple(toArray(xs), t), mixedArray(\"tuple elements\", decoders, path_14, value_21)) : (new FSharpResult$2(1, [path_14, new ErrorReason(0, \"an array\", value_21)]))));\n            }\n            else {\n                const fullname_1 = fullName(getGenericTypeDefinition(t));\n                if (fullname_1 === \"Microsoft.FSharp.Core.FSharpOption`1[System.Object]\") {\n                    const decoder_13 = autoDecoder(extra, caseStrategy, true, getGenerics(t)[0]);\n                    return (path_15) => ((value_22) => option(uncurry(2, decoder_13), path_15, value_22));\n                }\n                else if (fullname_1 === \"Microsoft.FSharp.Collections.FSharpList`1[System.Object]\") {\n                    const decoder_14 = autoDecoder(extra, caseStrategy, false, getGenerics(t)[0]);\n                    return (path_16) => ((value_23) => list(uncurry(2, decoder_14), path_16, value_23));\n                }\n                else if (fullname_1 === \"Microsoft.FSharp.Collections.FSharpMap`2[System.Object,System.Object]\") {\n                    const keyDecoder = autoDecoder(extra, caseStrategy, false, getGenerics(t)[0]);\n                    const valueDecoder = autoDecoder(extra, caseStrategy, false, getGenerics(t)[1]);\n                    let d1;\n                    const decoders_1 = ofArray([(path_17) => ((value_24) => autoObject2(uncurry(2, keyDecoder), uncurry(2, valueDecoder), path_17, value_24)), (decoder_15 = tuple2(uncurry(2, keyDecoder), uncurry(2, valueDecoder)), (path_18) => ((value_25) => list(uncurry(2, decoder_15), path_18, value_25)))]);\n                    d1 = ((path_19) => ((value_26) => oneOf(decoders_1, path_19, value_26)));\n                    return (path_20) => ((value_28) => map((ar) => toMap(ar), uncurry(2, d1), path_20, value_28));\n                }\n                else if (fullname_1 === \"Microsoft.FSharp.Collections.FSharpSet`1[System.Object]\") {\n                    const decoder_16 = autoDecoder(extra, caseStrategy, false, getGenerics(t)[0]);\n                    return (path_21) => ((value_29) => {\n                        const matchValue_7 = array(uncurry(2, decoder_16), path_21, value_29);\n                        return (matchValue_7.tag === 0) ? (new FSharpResult$2(0, toSet(matchValue_7.fields[0]))) : (new FSharpResult$2(1, matchValue_7.fields[0]));\n                    });\n                }\n                else {\n                    return autoDecodeRecordsAndUnions(extra, caseStrategy, isOptional, t);\n                }\n            }\n        }\n        else if (fullname === \"System.Boolean\") {\n            return (path_22) => ((value_31) => bool(path_22, value_31));\n        }\n        else if (fullname === \"Microsoft.FSharp.Core.Unit\") {\n            return (path_23) => ((value_32) => unit(path_23, value_32));\n        }\n        else if (fullname === \"System.String\") {\n            return (path_24) => ((value_33) => string(path_24, value_33));\n        }\n        else if (fullname === \"System.SByte\") {\n            return sbyte;\n        }\n        else if (fullname === \"System.Byte\") {\n            return byte;\n        }\n        else if (fullname === \"System.Int16\") {\n            return int16;\n        }\n        else if (fullname === \"System.UInt16\") {\n            return uint16;\n        }\n        else if (fullname === \"System.Int32\") {\n            return int;\n        }\n        else if (fullname === \"System.UInt32\") {\n            return uint32;\n        }\n        else if (fullname === \"System.Double\") {\n            return (path_25) => ((value_34) => float(path_25, value_34));\n        }\n        else if (fullname === \"System.Single\") {\n            return (path_26) => ((value_35) => float32(path_26, value_35));\n        }\n        else if (fullname === \"System.DateTime\") {\n            return (path_27) => ((value_36) => datetime(path_27, value_36));\n        }\n        else if (fullname === \"System.DateTimeOffset\") {\n            return (path_28) => ((value_37) => datetimeOffset(path_28, value_37));\n        }\n        else if (fullname === \"System.TimeSpan\") {\n            return (path_29) => ((value_38) => timespan(path_29, value_38));\n        }\n        else if (fullname === \"System.Guid\") {\n            return (path_30) => ((value_39) => guid(path_30, value_39));\n        }\n        else if (fullname === \"System.Object\") {\n            return (_arg1_6) => ((v) => (new FSharpResult$2(0, v)));\n        }\n        else {\n            return autoDecodeRecordsAndUnions(extra, caseStrategy, isOptional, t);\n        }\n    }\n    else {\n        const decoderRef = matchValue;\n        return (path) => ((value_1) => decoderRef.contents(path)(value_1));\n    }\n}\n\nfunction makeExtra(extra) {\n    if (extra != null) {\n        return map_3((_arg2, tupledArg) => (new FSharpRef(tupledArg[1])), extra.Coders);\n    }\n    else {\n        return empty_1();\n    }\n}\n\nexport class Auto {\n    constructor() {\n    }\n}\n\nexport function Auto$reflection() {\n    return class_type(\"Thoth.Json.Decode.Auto\", void 0, Auto);\n}\n\nexport function Auto_generateBoxedDecoderCached_79988AEF(t, caseStrategy, extra) {\n    let y_1, y;\n    const caseStrategy_1 = defaultArg(caseStrategy, new CaseStrategy(0));\n    return Util_Cache$1__GetOrAdd_43981464(Util_CachedDecoders, (y_1 = ((y = fullName(t), toString_12(caseStrategy_1) + y)), defaultArg(map_4((e) => e.Hash, extra), \"\") + y_1), () => autoDecoder(makeExtra(extra), caseStrategy_1, false, t));\n}\n\nexport function Auto_generateBoxedDecoder_79988AEF(t, caseStrategy, extra) {\n    const caseStrategy_1 = defaultArg(caseStrategy, new CaseStrategy(0));\n    return autoDecoder(makeExtra(extra), caseStrategy_1, false, t);\n}\n\n","import { toString as toString_1 } from \"../fable-library.3.4.0/Decimal.js\";\nimport { Lazy, mapCurriedArgs, uncurry, getEnumerator } from \"../fable-library.3.4.0/Util.js\";\nimport { empty, map as map_3, tryFind, add, toList } from \"../fable-library.3.4.0/Map.js\";\nimport { toString as toString_2 } from \"../fable-library.3.4.0/BigInt.js\";\nimport { toString as toString_3 } from \"../fable-library.3.4.0/Date.js\";\nimport { toString as toString_4 } from \"../fable-library.3.4.0/TimeSpan.js\";\nimport { defaultArg, map, defaultArgWith, some } from \"../fable-library.3.4.0/Option.js\";\nimport { toString as toString_5, FSharpRef } from \"../fable-library.3.4.0/Types.js\";\nimport { class_type, getGenerics, getGenericTypeDefinition, getTupleFields, getTupleElements, isTuple, isGenericType, getEnumUnderlyingType, isEnum, getElementType, isArray, getUnionCaseFields, getUnionFields, isUnion, getRecordElements, getRecordField, name, isRecord, fullName } from \"../fable-library.3.4.0/Reflection.js\";\nimport { fill, map as map_1 } from \"../fable-library.3.4.0/Array.js\";\nimport { Util_CachedEncoders, Util_Cache$1__GetOrAdd_43981464, CaseStrategy, Util_Casing_convert } from \"./Types.fs.js\";\nimport { mapIndexed, map as map_2, fold } from \"../fable-library.3.4.0/Seq.js\";\nimport { toFail, printf, toText } from \"../fable-library.3.4.0/String.js\";\n\nexport function guid(value) {\n    return value;\n}\n\nexport function decimal(value) {\n    return toString_1(value);\n}\n\nexport const nil = null;\n\nexport function object(values) {\n    const o = {};\n    const enumerator = getEnumerator(values);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const forLoopVar = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            o[forLoopVar[0]] = forLoopVar[1];\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return o;\n}\n\nexport function list(values) {\n    return Array.from(values);\n}\n\nexport function seq(values) {\n    return Array.from(values);\n}\n\nexport function dict(values) {\n    return object(toList(values));\n}\n\nexport function bigint(value) {\n    return toString_2(value);\n}\n\nexport function datetimeOffset(value) {\n    return toString_3(value, \"O\", {});\n}\n\nexport function timespan(value) {\n    return toString_4(value);\n}\n\nexport function sbyte(value) {\n    return String(value);\n}\n\nexport function byte(value) {\n    return String(value);\n}\n\nexport function int16(value) {\n    return String(value);\n}\n\nexport function uint16(value) {\n    return String(value);\n}\n\nexport function int64(value) {\n    return String(value);\n}\n\nexport function uint64(value) {\n    return String(value);\n}\n\nexport function unit() {\n    return null;\n}\n\nexport function tuple2(enc1, enc2, v1, v2) {\n    return [enc1(v1), enc2(v2)];\n}\n\nexport function tuple3(enc1, enc2, enc3, v1, v2, v3) {\n    return [enc1(v1), enc2(v2), enc3(v3)];\n}\n\nexport function tuple4(enc1, enc2, enc3, enc4, v1, v2, v3, v4) {\n    return [enc1(v1), enc2(v2), enc3(v3), enc4(v4)];\n}\n\nexport function tuple5(enc1, enc2, enc3, enc4, enc5, v1, v2, v3, v4, v5) {\n    return [enc1(v1), enc2(v2), enc3(v3), enc4(v4), enc5(v5)];\n}\n\nexport function tuple6(enc1, enc2, enc3, enc4, enc5, enc6, v1, v2, v3, v4, v5, v6) {\n    return [enc1(v1), enc2(v2), enc3(v3), enc4(v4), enc5(v5), enc6(v6)];\n}\n\nexport function tuple7(enc1, enc2, enc3, enc4, enc5, enc6, enc7, v1, v2, v3, v4, v5, v6, v7) {\n    return [enc1(v1), enc2(v2), enc3(v3), enc4(v4), enc5(v5), enc6(v6), enc7(v7)];\n}\n\nexport function tuple8(enc1, enc2, enc3, enc4, enc5, enc6, enc7, enc8, v1, v2, v3, v4, v5, v6, v7, v8) {\n    return [enc1(v1), enc2(v2), enc3(v3), enc4(v4), enc5(v5), enc6(v6), enc7(v7), enc8(v8)];\n}\n\nexport function Enum_byte(value) {\n    return byte(value);\n}\n\nexport function Enum_sbyte(value) {\n    return sbyte(value);\n}\n\nexport function Enum_int16(value) {\n    return int16(value);\n}\n\nexport function Enum_uint16(value) {\n    return uint16(value);\n}\n\nexport function Enum_int(value) {\n    return value;\n}\n\nexport function Enum_uint32(value) {\n    return value;\n}\n\nexport function datetime(value) {\n    return toString_3(value, \"O\", {});\n}\n\nexport function toString(space, value) {\n    return JSON.stringify(value, uncurry(2, null), some(space));\n}\n\nexport function option(encoder) {\n    return (arg) => defaultArgWith(map(encoder, arg), () => nil);\n}\n\nfunction autoEncodeRecordsAndUnions(extra, caseStrategy, skipNullField, t) {\n    const encoderRef = new FSharpRef(null);\n    const extra_1 = add(fullName(t), encoderRef, extra);\n    let encoder;\n    if (isRecord(t, true)) {\n        const setters = map_1((fi) => {\n            const targetKey = Util_Casing_convert(caseStrategy, name(fi));\n            const encode_1 = autoEncoder(extra_1, caseStrategy, skipNullField, fi[1]);\n            return (source) => ((target) => {\n                const value = getRecordField(source, fi);\n                if ((!skipNullField) ? true : (skipNullField ? (!(value == null)) : false)) {\n                    target[targetKey]=encode_1(value);\n                }\n                return target;\n            });\n        }, getRecordElements(t, true));\n        encoder = ((source_1) => fold(uncurry(2, mapCurriedArgs((target_1) => ((set$) => set$(source_1, target_1)), [0, [0, 2]])), {}, setters));\n    }\n    else if (isUnion(t, true)) {\n        encoder = ((value_1) => {\n            const patternInput = getUnionFields(value_1, t, true);\n            const info = patternInput[0];\n            const fields = patternInput[1];\n            const matchValue = fields.length | 0;\n            if (matchValue === 0) {\n                return name(info);\n            }\n            else {\n                const len = matchValue | 0;\n                const fieldTypes = getUnionCaseFields(info);\n                const target_2 = fill(new Array(len + 1), 0, len + 1, null);\n                target_2[0] = name(info);\n                for (let i = 1; i <= len; i++) {\n                    const encode_2 = autoEncoder(extra_1, caseStrategy, skipNullField, fieldTypes[i - 1][1]);\n                    target_2[i] = encode_2(fields[i - 1]);\n                }\n                return target_2;\n            }\n        });\n    }\n    else {\n        let message;\n        const arg10 = fullName(t);\n        message = toText(printf(\"Cannot generate auto encoder for %s. Please pass an extra encoder.\"))(arg10);\n        throw (new Error(message));\n    }\n    encoderRef.contents = encoder;\n    return encoder;\n}\n\nfunction autoEncoder(extra, caseStrategy, skipNullField, t) {\n    const fullname = fullName(t);\n    const matchValue = tryFind(fullname, extra);\n    if (matchValue == null) {\n        if (isArray(t)) {\n            const encoder = autoEncoder(extra, caseStrategy, skipNullField, getElementType(t));\n            return (value) => seq(map_2(encoder, value));\n        }\n        else if (isEnum(t)) {\n            const enumType = fullName(getEnumUnderlyingType(t));\n            if (enumType === \"System.SByte\") {\n                return (value_1) => sbyte(value_1);\n            }\n            else if (enumType === \"System.Byte\") {\n                return (value_2) => byte(value_2);\n            }\n            else if (enumType === \"System.Int16\") {\n                return (value_3) => int16(value_3);\n            }\n            else if (enumType === \"System.UInt16\") {\n                return (value_4) => uint16(value_4);\n            }\n            else if (enumType === \"System.Int32\") {\n                return (value_5) => value_5;\n            }\n            else if (enumType === \"System.UInt32\") {\n                return (value_7) => value_7;\n            }\n            else {\n                const arg10 = fullName(t);\n                const clo2 = toFail(printf(\"Cannot generate auto encoder for %s.\\nThoth.Json.Net only support the folluwing enum types:\\n- sbyte\\n- byte\\n- int16\\n- uint16\\n- int\\n- uint32\\nIf you can\\u0027t use one of these types, please pass an extra encoder.\\n                    \"))(arg10);\n                return (arg20) => clo2(arg20);\n            }\n        }\n        else if (isGenericType(t)) {\n            if (isTuple(t)) {\n                const encoders = map_1((t_2) => autoEncoder(extra, caseStrategy, skipNullField, t_2), getTupleElements(t));\n                return (value_9) => seq(mapIndexed((i, x) => encoders[i](x), getTupleFields(value_9)));\n            }\n            else {\n                const fullname_1 = fullName(getGenericTypeDefinition(t));\n                if (fullname_1 === \"Microsoft.FSharp.Core.FSharpOption`1[System.Object]\") {\n                    const encoder_2 = new Lazy(() => option(autoEncoder(extra, caseStrategy, skipNullField, getGenerics(t)[0])));\n                    return (value_10) => {\n                        if (value_10 == null) {\n                            return nil;\n                        }\n                        else {\n                            return encoder_2.Value(value_10);\n                        }\n                    };\n                }\n                else if ((fullname_1 === \"Microsoft.FSharp.Collections.FSharpList`1[System.Object]\") ? true : (fullname_1 === \"Microsoft.FSharp.Collections.FSharpSet`1[System.Object]\")) {\n                    const encoder_3 = autoEncoder(extra, caseStrategy, skipNullField, getGenerics(t)[0]);\n                    return (value_11) => seq(map_2(encoder_3, value_11));\n                }\n                else if (fullname_1 === \"Microsoft.FSharp.Collections.FSharpMap`2[System.Object,System.Object]\") {\n                    const keyType = getGenerics(t)[0];\n                    const valueEncoder = autoEncoder(extra, caseStrategy, skipNullField, getGenerics(t)[1]);\n                    if ((fullName(keyType) === \"System.String\") ? true : (fullName(keyType) === \"System.Guid\")) {\n                        return (value_12) => fold((target, _arg1) => {\n                            const activePatternResult14348 = _arg1;\n                            target[activePatternResult14348[0]]=valueEncoder(activePatternResult14348[1]);\n                            return target;\n                        }, {}, value_12);\n                    }\n                    else {\n                        let keyEncoder;\n                        const clo4 = autoEncoder(extra, caseStrategy, skipNullField, keyType);\n                        keyEncoder = ((arg40) => clo4(arg40));\n                        return (value_13) => seq(map_2((_arg2) => {\n                            const activePatternResult14352 = _arg2;\n                            return [keyEncoder(activePatternResult14352[0]), valueEncoder(activePatternResult14352[1])];\n                        }, value_13));\n                    }\n                }\n                else {\n                    return autoEncodeRecordsAndUnions(extra, caseStrategy, skipNullField, t);\n                }\n            }\n        }\n        else if (fullname === \"System.Boolean\") {\n            return (value_14) => value_14;\n        }\n        else if (fullname === \"Microsoft.FSharp.Core.Unit\") {\n            return unit;\n        }\n        else if (fullname === \"System.String\") {\n            return (value_16) => value_16;\n        }\n        else if (fullname === \"System.SByte\") {\n            return (value_18) => sbyte(value_18);\n        }\n        else if (fullname === \"System.Byte\") {\n            return (value_19) => byte(value_19);\n        }\n        else if (fullname === \"System.Int16\") {\n            return (value_20) => int16(value_20);\n        }\n        else if (fullname === \"System.UInt16\") {\n            return (value_21) => uint16(value_21);\n        }\n        else if (fullname === \"System.Int32\") {\n            return (value_22) => value_22;\n        }\n        else if (fullname === \"System.UInt32\") {\n            return (value_24) => value_24;\n        }\n        else if (fullname === \"System.Double\") {\n            return (value_26) => value_26;\n        }\n        else if (fullname === \"System.Single\") {\n            return (value_28) => value_28;\n        }\n        else if (fullname === \"System.DateTime\") {\n            return (value_30) => datetime(value_30);\n        }\n        else if (fullname === \"System.DateTimeOffset\") {\n            return (value_31) => datetimeOffset(value_31);\n        }\n        else if (fullname === \"System.TimeSpan\") {\n            return (value_32) => timespan(value_32);\n        }\n        else if (fullname === \"System.Guid\") {\n            return (value_33) => guid(value_33);\n        }\n        else if (fullname === \"System.Object\") {\n            return (x_1) => x_1;\n        }\n        else {\n            return autoEncodeRecordsAndUnions(extra, caseStrategy, skipNullField, t);\n        }\n    }\n    else {\n        const encoderRef = matchValue;\n        return (v) => encoderRef.contents(v);\n    }\n}\n\nfunction makeExtra(extra) {\n    if (extra != null) {\n        return map_3((_arg2, tupledArg) => (new FSharpRef(tupledArg[0])), extra.Coders);\n    }\n    else {\n        return empty();\n    }\n}\n\nexport class Auto {\n    constructor() {\n    }\n}\n\nexport function Auto$reflection() {\n    return class_type(\"Thoth.Json.Encode.Auto\", void 0, Auto);\n}\n\nexport function Auto_generateBoxedEncoderCached_Z20B7B430(t, caseStrategy, extra, skipNullField) {\n    let y_1, y;\n    const caseStrategy_1 = defaultArg(caseStrategy, new CaseStrategy(0));\n    const skipNullField_1 = defaultArg(skipNullField, true);\n    return Util_Cache$1__GetOrAdd_43981464(Util_CachedEncoders, (y_1 = ((y = fullName(t), toString_5(caseStrategy_1) + y)), defaultArg(map((e) => e.Hash, extra), \"\") + y_1), () => autoEncoder(makeExtra(extra), caseStrategy_1, skipNullField_1, t));\n}\n\nexport function Auto_generateBoxedEncoder_Z20B7B430(t, caseStrategy, extra, skipNullField) {\n    const caseStrategy_1 = defaultArg(caseStrategy, new CaseStrategy(0));\n    const skipNullField_1 = defaultArg(skipNullField, true);\n    return autoEncoder(makeExtra(extra), caseStrategy_1, skipNullField_1, t);\n}\n\nexport function encode(space, value) {\n    return toString(space, value);\n}\n\n","import { reverse, empty, cons, fold } from \"../fable-library.3.4.0/List.js\";\nimport { uncurry } from \"../fable-library.3.4.0/Util.js\";\nimport { toString } from \"../fable-library.3.4.0/Types.js\";\nimport { join } from \"../fable-library.3.4.0/String.js\";\n\nexport function Helpers_extractClasses(xs) {\n    return fold(uncurry(2, (tupledArg) => {\n        const classes = tupledArg[0];\n        const props = tupledArg[1];\n        return (x) => {\n            const matchValue = x;\n            return (matchValue[0] === \"className\") ? [cons(toString(matchValue[1]), classes), props] : [classes, cons(x, props)];\n        };\n    }), [empty(), empty()], reverse(xs));\n}\n\nexport function Helpers_combineClasses(cn, xs) {\n    const tupledArg = Helpers_extractClasses(xs);\n    return cons([\"className\", join(\" \", cons(cn, tupledArg[0]))], tupledArg[1]);\n}\n\n","import { Result_MapError, Result_Map, FSharpResult$2 } from \"../fable-library.3.4.0/Choice.js\";\nimport { class_type } from \"../fable-library.3.4.0/Reflection.js\";\nimport { equals, getEnumerator } from \"../fable-library.3.4.0/Util.js\";\n\nexport function reject(reason) {\n    return Promise.reject(reason);\n}\n\nexport function result(a) {\n    return a.then(((arg) => (new FSharpResult$2(0, arg))),((arg_1) => (new FSharpResult$2(1, arg_1))));\n}\n\nexport function mapResult(fn, a) {\n    return a.then(((result_1) => Result_Map(fn, result_1)));\n}\n\nexport function bindResult(fn, a) {\n    return a.then(((a_1) => {\n        if (a_1.tag === 1) {\n            return Promise.resolve((new FSharpResult$2(1, a_1.fields[0])));\n        }\n        else {\n            return result(fn(a_1.fields[0]));\n        }\n    }));\n}\n\nexport function mapResultError(fn, a) {\n    return a.then(((result_1) => Result_MapError(fn, result_1)));\n}\n\nexport function tap(fn, a) {\n    return a.then(((x) => {\n        fn(x);\n        return x;\n    }));\n}\n\nexport class PromiseBuilder {\n    constructor() {\n    }\n}\n\nexport function PromiseBuilder$reflection() {\n    return class_type(\"Promise.PromiseBuilder\", void 0, PromiseBuilder);\n}\n\nexport function PromiseBuilder_$ctor() {\n    return new PromiseBuilder();\n}\n\nexport function PromiseBuilder__For_1565554B(x, seq, body) {\n    let p = Promise.resolve(undefined);\n    const enumerator = getEnumerator(seq);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const a = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            p = (p.then((() => body(a))));\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return p;\n}\n\nexport function PromiseBuilder__While_2044D34(x, guard, p) {\n    if (guard()) {\n        return p.then((() => PromiseBuilder__While_2044D34(x, guard, p)));\n    }\n    else {\n        return Promise.resolve(undefined);\n    }\n}\n\nexport function PromiseBuilder__TryFinally_7D49A2FD(x, p, compensation) {\n    return p.then(((x_1) => {\n        compensation();\n        return x_1;\n    }),((er) => {\n        compensation();\n        throw er;\n    }));\n}\n\nexport function PromiseBuilder__Delay_62FBFDE1(x, generator) {\n    return {\n        then: (f1, f2) => {\n            try {\n                return generator().then(f1, f2);\n            }\n            catch (er) {\n                if (equals(f2, null)) {\n                    return Promise.reject(er);\n                }\n                else {\n                    try {\n                        return Promise.resolve(f2(er));\n                    }\n                    catch (er_1) {\n                        return Promise.reject(er_1);\n                    }\n                }\n            }\n        },\n        catch: (f) => {\n            try {\n                return generator().catch(f);\n            }\n            catch (er_2) {\n                try {\n                    return Promise.resolve(f(er_2));\n                }\n                catch (er_3) {\n                    return Promise.reject(er_3);\n                }\n            }\n        },\n    };\n}\n\nexport function PromiseBuilder__Run_212F1D4B(x, p) {\n    return new Promise(((success, fail) => {\n        try {\n            const p_1 = Promise.resolve(p);\n            p_1.then(success, fail);\n        }\n        catch (er) {\n            fail(er);\n        }\n    }));\n}\n\nexport function PromiseBuilder__Using_74F7E79D(x, resource, binder) {\n    return PromiseBuilder__TryFinally_7D49A2FD(x, binder(resource), () => {\n        let copyOfStruct = resource;\n        copyOfStruct.Dispose();\n    });\n}\n\n","import { PromiseBuilder_$ctor } from \"./Promise.fs.js\";\n\nexport const promise = PromiseBuilder_$ctor();\n\n","import { Union } from \"../fable-library.3.4.0/Types.js\";\nimport { class_type, union_type, int32_type, array_type } from \"../fable-library.3.4.0/Reflection.js\";\nimport { fill } from \"../fable-library.3.4.0/Array.js\";\nimport { isDisposable, comparePrimitives, max } from \"../fable-library.3.4.0/Util.js\";\nimport { toArray, value as value_1, some } from \"../fable-library.3.4.0/Option.js\";\nimport { iterate as iterate_1, singleton, collect, take, skip, append, delay } from \"../fable-library.3.4.0/Seq.js\";\nimport { rangeDouble } from \"../fable-library.3.4.0/Range.js\";\nimport { useReact_useMemo_CF4EA67, useReact_useEffect_3A5B6456, useReact_useEffect_Z101E1A95, useReact_useEffect_Z5234A374, useReact_useCallbackRef_7C4B0DD6, React_createDisposable_3A5B6456, useReact_useEffectOnce_Z5ECA432F, useFeliz_React__React_useState_Static_1505, useReact_useRef_1505 } from \"../Feliz.1.53.0/React.fs.js\";\nimport { isCancellationRequested, cancel, createCancellationToken } from \"../fable-library.3.4.0/Async.js\";\nimport { PromiseBuilder__While_2044D34, PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../Fable.Promise.2.0.0/Promise.fs.js\";\nimport { iterate } from \"../fable-library.3.4.0/List.js\";\nimport { promise } from \"../Fable.Promise.2.0.0/PromiseImpl.fs.js\";\n\nexport class RingState$1 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Writable\", \"ReadWritable\"];\n    }\n}\n\nexport function RingState$1$reflection(gen0) {\n    return union_type(\"Feliz.UseElmish.RingState`1\", [gen0], RingState$1, () => [[[\"wx\", array_type(gen0)], [\"ix\", int32_type]], [[\"rw\", array_type(gen0)], [\"wix\", int32_type], [\"rix\", int32_type]]]);\n}\n\nexport class RingBuffer$1 {\n    constructor(size) {\n        this.state = (new RingState$1(0, fill(new Array(max((x, y) => comparePrimitives(x, y), size, 10)), 0, max((x, y) => comparePrimitives(x, y), size, 10), null), 0));\n    }\n}\n\nexport function RingBuffer$1$reflection(gen0) {\n    return class_type(\"Feliz.UseElmish.RingBuffer`1\", [gen0], RingBuffer$1);\n}\n\nexport function RingBuffer$1_$ctor_Z524259A4(size) {\n    return new RingBuffer$1(size);\n}\n\nexport function RingBuffer$1__Pop(_) {\n    const matchValue = _.state;\n    if (matchValue.tag === 1) {\n        const wix = matchValue.fields[1] | 0;\n        const rix = matchValue.fields[2] | 0;\n        const items = matchValue.fields[0];\n        const rix$0027 = ((rix + 1) % items.length) | 0;\n        if (rix$0027 === wix) {\n            _.state = (new RingState$1(0, items, wix));\n        }\n        else {\n            _.state = (new RingState$1(1, items, wix, rix$0027));\n        }\n        return some(items[rix]);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function RingBuffer$1__Push_2B595(_, item) {\n    const matchValue = _.state;\n    if (matchValue.tag === 1) {\n        const wix_1 = matchValue.fields[1] | 0;\n        const rix = matchValue.fields[2] | 0;\n        const items_1 = matchValue.fields[0];\n        items_1[wix_1] = item;\n        const wix$0027 = ((wix_1 + 1) % items_1.length) | 0;\n        if (wix$0027 === rix) {\n            _.state = (new RingState$1(1, RingBuffer$1__doubleSize(_, rix, items_1), items_1.length, 0));\n        }\n        else {\n            _.state = (new RingState$1(1, items_1, wix$0027, rix));\n        }\n    }\n    else {\n        const ix = matchValue.fields[1] | 0;\n        const items = matchValue.fields[0];\n        items[ix] = item;\n        const wix = ((ix + 1) % items.length) | 0;\n        _.state = (new RingState$1(1, items, wix, ix));\n    }\n}\n\nfunction RingBuffer$1__doubleSize(this$, ix, items) {\n    return Array.from(delay(() => append(skip(ix, items), delay(() => append(take(ix, items), delay(() => collect((matchValue) => singleton(null), rangeDouble(0, 1, items.length))))))));\n}\n\nexport function useFeliz_React__React_useElmish_Static_17DC4F1D(init, update, dependencies) {\n    const state = useReact_useRef_1505(init[0]);\n    const ring = useReact_useRef_1505(RingBuffer$1_$ctor_Z524259A4(10));\n    const patternInput = useFeliz_React__React_useState_Static_1505(init[0]);\n    let token_1;\n    const cts = useReact_useRef_1505(createCancellationToken());\n    const token = useReact_useRef_1505(cts.current);\n    useReact_useEffectOnce_Z5ECA432F(() => React_createDisposable_3A5B6456(() => {\n        cancel(cts.current);\n    }));\n    token_1 = token;\n    const setChildState_1 = () => {\n        void setTimeout(() => {\n            let copyOfStruct;\n            if (!((copyOfStruct = token_1.current, isCancellationRequested(copyOfStruct)))) {\n                patternInput[1](state.current);\n            }\n        }, 0);\n    };\n    const dispatch = (msg) => {\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            let nextMsg = some(msg);\n            return PromiseBuilder__While_2044D34(promise, () => {\n                let copyOfStruct_1;\n                return (nextMsg != null) ? (!((copyOfStruct_1 = token_1.current, isCancellationRequested(copyOfStruct_1)))) : false;\n            }, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                const patternInput_1 = update(value_1(nextMsg), state.current);\n                iterate((sub) => {\n                    sub(dispatch);\n                }, patternInput_1[1]);\n                nextMsg = RingBuffer$1__Pop(ring.current);\n                state.current = patternInput_1[0];\n                setChildState_1();\n                return Promise.resolve();\n            }));\n        }));\n        pr.then();\n    };\n    const dispatch_1 = useReact_useCallbackRef_7C4B0DD6(dispatch);\n    useReact_useEffect_Z5234A374(() => React_createDisposable_3A5B6456(() => {\n        let matchValue;\n        iterate_1((o) => {\n            o.Dispose();\n        }, toArray((matchValue = state.current, isDisposable(matchValue) ? matchValue : (void 0))));\n    }), dependencies);\n    useReact_useEffect_Z101E1A95(() => {\n        state.current = init[0];\n        setChildState_1();\n        iterate((sub_1) => {\n            sub_1(dispatch_1);\n        }, init[1]);\n    }, dependencies);\n    useReact_useEffect_3A5B6456(() => {\n        iterate_1(dispatch_1, toArray(RingBuffer$1__Pop(ring.current)));\n    });\n    return [patternInput[0], dispatch_1];\n}\n\nexport function useFeliz_React__React_useElmish_Static_645B1FB7(init, update, dependencies) {\n    return useFeliz_React__React_useElmish_Static_17DC4F1D(useReact_useMemo_CF4EA67(init, dependencies), update, dependencies);\n}\n\n","import { toString as toString_1, Record, Union } from \"./fable_modules/fable-library.3.4.0/Types.js\";\nimport { list_type, array_type, record_type, bool_type, string_type, union_type, class_type } from \"./fable_modules/fable-library.3.4.0/Reflection.js\";\nimport { Cmd_OfFunc_attempt, Cmd_batch, Cmd_none } from \"./fable_modules/Fable.Elmish.3.1.0/cmd.fs.js\";\nimport { RouterModule_router, RouterModule_urlSegments } from \"./fable_modules/Feliz.Router.3.8.0/Router.fs.js\";\nimport { newGuid } from \"./fable_modules/fable-library.3.4.0/Guid.js\";\nimport { printf, toConsole, isNullOrEmpty } from \"./fable_modules/fable-library.3.4.0/String.js\";\nimport { map, append } from \"./fable_modules/fable-library.3.4.0/Array.js\";\nimport { createObj, uncurry, equals } from \"./fable_modules/fable-library.3.4.0/Util.js\";\nimport { fromString, Auto_generateBoxedDecoder_79988AEF } from \"./fable_modules/Thoth.Json.6.0.0/Decode.fs.js\";\nimport { bind } from \"./fable_modules/fable-library.3.4.0/Option.js\";\nimport { Auto_generateBoxedEncoder_Z20B7B430, toString } from \"./fable_modules/Thoth.Json.6.0.0/Encode.fs.js\";\nimport { singleton as singleton_1, tail, head, isEmpty, cons, ofArray } from \"./fable_modules/fable-library.3.4.0/List.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport { Helpers_combineClasses } from \"./fable_modules/Feliz.Bulma.2.18.0/ElementBuilders.fs.js\";\nimport { Interop_reactApi } from \"./fable_modules/Feliz.1.53.0/Interop.fs.js\";\nimport { empty, singleton, append as append_1, delay, toList } from \"./fable_modules/fable-library.3.4.0/Seq.js\";\nimport { useFeliz_React__React_useElmish_Static_645B1FB7 } from \"./fable_modules/Feliz.UseElmish.1.5.1/UseElmish.fs.js\";\nimport { render } from \"react-dom\";\nimport \"./styles/global.scss\";\n\n\nexport class TodoId extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"TodoId\"];\n    }\n}\n\nexport function TodoId$reflection() {\n    return union_type(\"Main.TodoId\", [], TodoId, () => [[[\"Item\", class_type(\"System.Guid\")]]]);\n}\n\nexport class TodoEntry extends Record {\n    constructor(Id, Description, IsCompleted) {\n        super();\n        this.Id = Id;\n        this.Description = Description;\n        this.IsCompleted = IsCompleted;\n    }\n}\n\nexport function TodoEntry$reflection() {\n    return record_type(\"Main.TodoEntry\", [], TodoEntry, () => [[\"Id\", TodoId$reflection()], [\"Description\", string_type], [\"IsCompleted\", bool_type]]);\n}\n\nexport class Model extends Record {\n    constructor(Entries, NewEntryDescription, CurrentUrls) {\n        super();\n        this.Entries = Entries;\n        this.NewEntryDescription = NewEntryDescription;\n        this.CurrentUrls = CurrentUrls;\n    }\n}\n\nexport function Model$reflection() {\n    return record_type(\"Main.Model\", [], Model, () => [[\"Entries\", array_type(TodoEntry$reflection())], [\"NewEntryDescription\", string_type], [\"CurrentUrls\", list_type(string_type)]]);\n}\n\nexport class Message extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Failure\", \"EntryChanged\", \"AddedEntry\", \"MarkedEntry\", \"RemovedEntry\", \"UrlChanged\"];\n    }\n}\n\nexport function Message$reflection() {\n    return union_type(\"Main.Message\", [], Message, () => [[[\"Item\", string_type]], [[\"Item\", string_type]], [], [[\"Item1\", TodoId$reflection()], [\"Item2\", bool_type]], [[\"Item\", TodoId$reflection()]], [[\"Item\", list_type(string_type)]]]);\n}\n\nexport function init(_arg1) {\n    if (_arg1 != null) {\n        return [_arg1, Cmd_none()];\n    }\n    else {\n        return [new Model([], \"\", RouterModule_urlSegments(window.location.hash, 1)), Cmd_none()];\n    }\n}\n\nexport function withEntryChanged(description, model) {\n    return [new Model(model.Entries, description, model.CurrentUrls), Cmd_none()];\n}\n\nexport function withAddedEntry(model) {\n    const newEntry = new TodoEntry(new TodoId(0, newGuid()), model.NewEntryDescription, false);\n    return [new Model(isNullOrEmpty(model.NewEntryDescription) ? model.Entries : append([newEntry], model.Entries), \"\", model.CurrentUrls), Cmd_none()];\n}\n\nexport function withMarkedEntry(id, isCompleted, model) {\n    return [new Model(map((entry) => {\n        if (equals(entry.Id, id)) {\n            return new TodoEntry(entry.Id, entry.Description, !isCompleted);\n        }\n        else {\n            return entry;\n        }\n    }, model.Entries), model.NewEntryDescription, model.CurrentUrls), Cmd_none()];\n}\n\nexport function withRemovedEntry(id, model) {\n    return [new Model(model.Entries.filter((entry) => (!equals(entry.Id, id))), model.NewEntryDescription, model.CurrentUrls), Cmd_none()];\n}\n\nexport function withUrlChanged(segments, model) {\n    return [new Model(model.Entries, model.NewEntryDescription, segments), Cmd_none()];\n}\n\nexport function update(message, model) {\n    switch (message.tag) {\n        case 1: {\n            return withEntryChanged(message.fields[0], model);\n        }\n        case 2: {\n            return withAddedEntry(model);\n        }\n        case 3: {\n            return withMarkedEntry(message.fields[0], message.fields[1], model);\n        }\n        case 4: {\n            return withRemovedEntry(message.fields[0], model);\n        }\n        case 5: {\n            return withUrlChanged(message.fields[0], model);\n        }\n        default: {\n            toConsole(printf(\"%s\"))(message.fields[0]);\n            return [model, Cmd_none()];\n        }\n    }\n}\n\nconst Storage_key = \"modotte-todo-spa-elmish\";\n\nconst Storage_decoder = Auto_generateBoxedDecoder_79988AEF(Model$reflection(), void 0, void 0);\n\nexport function Storage_load() {\n    return bind((arg) => {\n        const _arg1 = fromString(uncurry(2, Storage_decoder), arg);\n        if (_arg1.tag === 0) {\n            return _arg1.fields[0];\n        }\n        else {\n            return void 0;\n        }\n    }, localStorage.getItem(Storage_key));\n}\n\nexport function Storage_save(model) {\n    localStorage.setItem(Storage_key, toString(1, Auto_generateBoxedEncoder_Z20B7B430(Model$reflection(), void 0, void 0, void 0)(model)));\n}\n\nexport function Storage_updateStorage(message, model) {\n    if (message.tag === 0) {\n        return [model, Cmd_none()];\n    }\n    else {\n        const patternInput = update(message, model);\n        const newModel = patternInput[0];\n        return [newModel, Cmd_batch(ofArray([Cmd_OfFunc_attempt((model_2) => {\n            Storage_save(model_2);\n        }, newModel, (arg) => (new Message(0, toString_1(arg)))), patternInput[1]]))];\n    }\n}\n\nexport function makeDeleteButton(dispatch, entry) {\n    const props = ofArray([[\"className\", \"is-danger\"], [\"style\", {\n        marginRight: 5,\n    }], [\"children\", \"Delete\"], [\"onClick\", (_arg1) => {\n        dispatch(new Message(4, entry.Id));\n    }]]);\n    return createElement(\"button\", createObj(Helpers_combineClasses(\"button\", props)));\n}\n\nexport function makeEntryButtons(dispatch, entry) {\n    let children, value_16;\n    const checkboxId = newGuid();\n    const children_2 = ofArray([(children = ofArray([createElement(\"input\", createObj(cons([\"type\", \"checkbox\"], Helpers_combineClasses(\"is-checkradio\", ofArray([[\"className\", \"is-primary\"], [\"id\", checkboxId], [\"className\", \"is-large\"], [\"className\", \"is-circle\"], [\"checked\", entry.IsCompleted], [\"onChange\", (ev) => {\n        const _arg1 = ev.target.checked;\n        dispatch(new Message(3, entry.Id, entry.IsCompleted));\n    }]]))))), createElement(\"label\", {\n        htmlFor: checkboxId,\n        children: entry.Description,\n    })]), createElement(\"td\", {\n        children: Interop_reactApi.Children.toArray(Array.from(children)),\n    })), (value_16 = makeDeleteButton(dispatch, entry), createElement(\"td\", {\n        children: [value_16],\n    }))]);\n    return createElement(\"tr\", {\n        children: Interop_reactApi.Children.toArray(Array.from(children_2)),\n    });\n}\n\nexport function makeEntryInputArea(dispatch, model) {\n    let props, value_8;\n    const props_4 = ofArray([[\"className\", \"is-grouped\"], [\"className\", \"is-grouped-centered\"], [\"children\", Interop_reactApi.Children.toArray([(props = ofArray([[\"required\", true], [\"placeholder\", \"Add a task\"], (value_8 = model.NewEntryDescription, [\"ref\", (e) => {\n        if ((!(e == null)) ? (!equals(e.value, value_8)) : false) {\n            e.value = value_8;\n        }\n    }]), [\"onChange\", (ev) => {\n        dispatch(new Message(1, ev.target.value));\n    }]]), createElement(\"input\", createObj(cons([\"type\", \"text\"], Helpers_combineClasses(\"input\", props))))), createElement(\"button\", createObj(Helpers_combineClasses(\"button\", ofArray([[\"className\", \"is-success\"], [\"onClick\", (_arg1) => {\n        dispatch(new Message(2));\n    }], [\"children\", \"+\"]]))))])]]);\n    return createElement(\"div\", createObj(Helpers_combineClasses(\"field\", props_4)));\n}\n\nexport function makeTodosStateTabs(model) {\n    const makeTab = (isActive, name, link) => {\n        const props_1 = toList(delay(() => append_1(isActive ? singleton([\"className\", \"is-active\"]) : ((empty())), delay(() => singleton([\"children\", Interop_reactApi.Children.toArray([createElement(\"a\", {\n            children: name,\n            href: link,\n        })])])))));\n        return createElement(\"li\", createObj(Helpers_combineClasses(\"\", props_1)));\n    };\n    const props_7 = ofArray([[\"className\", \"is-centered\"], [\"children\", Interop_reactApi.Children.toArray(Array.from(toList(delay(() => {\n        let children, children_2, children_4;\n        const matchValue = model.CurrentUrls;\n        let pattern_matching_result;\n        if (!isEmpty(matchValue)) {\n            if (head(matchValue) === \"active\") {\n                if (isEmpty(tail(matchValue))) {\n                    pattern_matching_result = 1;\n                }\n                else {\n                    pattern_matching_result = 3;\n                }\n            }\n            else if (head(matchValue) === \"archived\") {\n                if (isEmpty(tail(matchValue))) {\n                    pattern_matching_result = 2;\n                }\n                else {\n                    pattern_matching_result = 3;\n                }\n            }\n            else {\n                pattern_matching_result = 3;\n            }\n        }\n        else {\n            pattern_matching_result = 0;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return singleton((children = ofArray([makeTab(true, \"All\", \"#/\"), makeTab(false, \"Active\", \"#/active\"), makeTab(false, \"Archived\", \"#/archived\")]), createElement(\"ul\", {\n                    children: Interop_reactApi.Children.toArray(Array.from(children)),\n                })));\n            }\n            case 1: {\n                return singleton((children_2 = ofArray([makeTab(false, \"All\", \"#/\"), makeTab(true, \"Active\", \"#/active\"), makeTab(false, \"Archived\", \"#/archived\")]), createElement(\"ul\", {\n                    children: Interop_reactApi.Children.toArray(Array.from(children_2)),\n                })));\n            }\n            case 2: {\n                return singleton((children_4 = ofArray([makeTab(false, \"All\", \"#/\"), makeTab(false, \"Active\", \"#/active\"), makeTab(true, \"Archived\", \"#/archived\")]), createElement(\"ul\", {\n                    children: Interop_reactApi.Children.toArray(Array.from(children_4)),\n                })));\n            }\n            case 3: {\n                return singleton(createElement(\"h1\", {\n                    style: {\n                        textAlign: \"center\",\n                    },\n                    children: \"Tabs broken\",\n                }));\n            }\n        }\n    }))))]]);\n    return createElement(\"div\", createObj(Helpers_combineClasses(\"tabs\", props_7)));\n}\n\nexport function rootContainer(children) {\n    const props = ofArray([[\"className\", \"is-fluid\"], [\"children\", Interop_reactApi.Children.toArray([children])]]);\n    return createElement(\"div\", createObj(Helpers_combineClasses(\"container\", props)));\n}\n\nexport function headerComponent(dispatch, model) {\n    let props;\n    const children = ofArray([(props = ofArray([[\"style\", {\n        textAlign: \"center\",\n    }], [\"className\", \"is-2\"], [\"children\", \"TodoSPA Demo\"]]), createElement(\"h1\", createObj(Helpers_combineClasses(\"title\", props)))), makeEntryInputArea(dispatch, model), makeTodosStateTabs(model)]);\n    return createElement(\"div\", {\n        children: Interop_reactApi.Children.toArray(Array.from(children)),\n    });\n}\n\nexport function showEntries(dispatch, entries) {\n    let props_1, children;\n    const elms = singleton_1((props_1 = ofArray([[\"className\", \"is-striped\"], [\"className\", \"is-hoverable\"], [\"className\", \"is-fullwidth\"], [\"children\", Interop_reactApi.Children.toArray([(children = ofArray(map((entry) => makeEntryButtons(dispatch, entry), entries)), createElement(\"tbody\", {\n        children: Interop_reactApi.Children.toArray(Array.from(children)),\n    }))])]]), createElement(\"table\", createObj(Helpers_combineClasses(\"table\", props_1)))));\n    return createElement(\"div\", {\n        className: \"table-container\",\n        children: Interop_reactApi.Children.toArray(Array.from(elms)),\n    });\n}\n\nexport function AllView(dispatch, model) {\n    let elms;\n    return rootContainer((elms = ofArray([headerComponent(dispatch, model), showEntries(dispatch, model.Entries)]), createElement(\"div\", {\n        className: \"box\",\n        children: Interop_reactApi.Children.toArray(Array.from(elms)),\n    })));\n}\n\nexport function ActiveView(dispatch, model) {\n    let elms;\n    return rootContainer((elms = ofArray([headerComponent(dispatch, model), showEntries(dispatch, model.Entries.filter((entry) => (!entry.IsCompleted)))]), createElement(\"div\", {\n        className: \"box\",\n        children: Interop_reactApi.Children.toArray(Array.from(elms)),\n    })));\n}\n\nexport function ArchivedView(dispatch, model) {\n    let elms;\n    return rootContainer((elms = ofArray([headerComponent(dispatch, model), showEntries(dispatch, model.Entries.filter((entry) => entry.IsCompleted))]), createElement(\"div\", {\n        className: \"box\",\n        children: Interop_reactApi.Children.toArray(Array.from(elms)),\n    })));\n}\n\nexport function Router() {\n    const patternInput = useFeliz_React__React_useElmish_Static_645B1FB7(() => init(Storage_load()), (message, model) => Storage_updateStorage(message, model), []);\n    const model_1 = patternInput[0];\n    const dispatch = patternInput[1];\n    return RouterModule_router({\n        onUrlChanged: (arg_1) => {\n            dispatch(new Message(5, arg_1));\n        },\n        application: react.createElement(react.Fragment, {}, ...toList(delay(() => {\n            const matchValue = model_1.CurrentUrls;\n            let pattern_matching_result;\n            if (!isEmpty(matchValue)) {\n                if (head(matchValue) === \"active\") {\n                    if (isEmpty(tail(matchValue))) {\n                        pattern_matching_result = 1;\n                    }\n                    else {\n                        pattern_matching_result = 3;\n                    }\n                }\n                else if (head(matchValue) === \"archived\") {\n                    if (isEmpty(tail(matchValue))) {\n                        pattern_matching_result = 2;\n                    }\n                    else {\n                        pattern_matching_result = 3;\n                    }\n                }\n                else {\n                    pattern_matching_result = 3;\n                }\n            }\n            else {\n                pattern_matching_result = 0;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    return singleton(AllView(dispatch, model_1));\n                }\n                case 1: {\n                    return singleton(ActiveView(dispatch, model_1));\n                }\n                case 2: {\n                    return singleton(ArchivedView(dispatch, model_1));\n                }\n                case 3: {\n                    return singleton(createElement(\"h1\", {\n                        children: [\"Not found\"],\n                    }));\n                }\n            }\n        }))),\n    });\n}\n\nrender(createElement(Router, null), document.getElementById(\"feliz-app\"));\n\n"],"sourceRoot":""}